{
  "createdAt": 1671554450475,
  "updatedAt": 1671554450475,
  "deletedAt": 0,
  "createdFirstAt": 1671554450475,
  "classification": "const",
  "comments": [],
  "isExported": true,
  "name": "Tabs",
  "slug": "tabs",
  "operationRelativeTypescriptFilePath": "src/Tabs.tsx",
  "type": {
    "rawType": "(props: { title?: string | undefined; tabs: import(\"/Users/king/King/operations/tools/user-interfaces/gui/dumb/tabs/src/Tabs\").TabType[]; }) => JSX.Element",
    "typeDefinition": {
      "type": "object",
      "properties": {},
      "optional": false
    },
    "typeCoverage": 0,
    "isArray": false,
    "isEnum": false,
    "isObject": true,
    "isPrimitive": false,
    "isEnumLiteral": false,
    "simplifiedSchema": {
      "properties": [],
      "type": "object"
    }
  },
  "value": "(props: { title?: string; tabs: TabType[] }) => {\n  const { title, tabs } = props;\n\n  const [currentTab, setCurrentTab] = useStore(\"tabs.currentTab\");\n\n  const buttons: LabeledButtonType[] = tabs.map(({ emoji, title }, index) => {\n    const isActive = currentTab === index;\n    return {\n      emoji,\n      title,\n      onClick: () => {\n        setCurrentTab(index);\n      },\n      isActive,\n    };\n  });\n\n  const activeTab = tabs.find((_, index) => currentTab === index);\n\n  return (\n    <Div className=\"flex flex-col flex-1 p-2 m-2 rounded-xl\">\n      <Div className=\"flex flex-row justify-between items-center\">\n        {title ? <P className=\"text-3xl\">{title}</P> : null}\n        <Div className=\"flex flex-row gap-3\">{buttons.map(LabeledButton)}</Div>\n      </Div>\n\n      {activeTab?.renderTab()}\n    </Div>\n  );\n}",
  "description": "Container for tabs",
  "id": "wrzjlylnzwciqgipxvopsuhg"
}