{
  "createdAt": 1662904857744,
  "updatedAt": 1662904857744,
  "deletedAt": 0,
  "createdFirstAt": 1662904857744,
  "apiAuthenticationStrategy": "admin",
  "isApiExposed": true,
  "isExported": true,
  "operationRelativeTypescriptFilePath": "src/getFolderSummary.ts",
  "commentsInside": [],
  "rawText": " async (\n  filePath: string\n): Promise<SizeSummary> => {\n  const content = await fs.readFile(filePath, \"utf8\");\n\n  const bytes = byteCount(content);\n  const characters = content.length;\n  const lines = content.split(\"\\n\").length;\n\n  return {\n    bytes,\n    characters,\n    lines,\n    numberOfFiles: 1,\n    bytesPerCharacter: bytes / characters,\n    charactersPerLine: characters / lines,\n    linesPerFile: lines,\n  };\n}",
  "name": "getSizeSummary",
  "slug": "get-size-summary",
  "parameters": [
    {
      "name": "filePath",
      "schema": {
        "type": "string"
      },
      "simplifiedSchema": {
        "type": "string"
      },
      "required": true
    }
  ],
  "description": "gets a size summary for a file path",
  "returnType": {
    "rawType": "Promise<import(\"/Users/king/King/operations/tools/types/code-types/build/FolderSummary\").SizeSummary>",
    "typeCoverage": 0,
    "isArray": false,
    "isEnum": false,
    "isObject": false,
    "isPrimitive": false,
    "isEnumLiteral": false
  },
  "maxIndentationDepth": 2,
  "size": {
    "characters": 454,
    "lines": 19,
    "bytes": 454,
    "bytesPerCharacter": 1,
    "charactersPerLine": 24,
    "linesPerFile": 19,
    "numberOfFiles": 1
  },
  "id": "AXUHBaIfsEmMODGP"
}