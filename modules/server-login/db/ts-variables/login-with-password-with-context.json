{
  "createdAt": 1673863621948,
  "updatedAt": 1673863621948,
  "deletedAt": 0,
  "createdFirstAt": 1673863621948,
  "classification": "const",
  "comments": [],
  "isExported": true,
  "name": "loginWithPasswordWithContext",
  "slug": "login-with-password-with-context",
  "operationRelativeTypescriptFilePath": "src/loginWithPasswordWithContext.ts",
  "type": {
    "rawType": "import(\"/Users/king/King/operations/tools/types/code-types/build/ApiFunction\").ApiFunction",
    "typeCoverage": 0,
    "isArray": false,
    "isEnum": false,
    "isObject": false,
    "isPrimitive": false,
    "isEnumLiteral": false
  },
  "value": "async (\n  functionContext: FunctionContext,\n  username: string,\n  password: string\n): Promise<{ isSuccessful: boolean; message?: string }> => {\n  // first we have to add the authenticationMethod to the device\n  const addAuthResult = await addDeviceAuthenticationMethodWithContext(\n    functionContext,\n    \"usernamePassword\",\n    username,\n    password\n  );\n\n  if (\n    !addAuthResult.isSuccessful ||\n    !addAuthResult.authenticationMethod ||\n    !addAuthResult.functionContext\n  ) {\n    return {\n      isSuccessful: addAuthResult.isSuccessful || false,\n      message: addAuthResult.message,\n    };\n  }\n\n  // now it should be possible to connect the auth method to the device\n  const loginResult = await loginWithContext(addAuthResult.functionContext);\n  const { isSuccessful, message } = loginResult;\n  return {\n    isSuccessful,\n    message,\n  };\n}",
  "description": "Login with username and password\n\n1. Adds an username/password combo as auth-method to the device,\n2. Checks the persons to match the auth\n3. In case of match, moves the method to the person and connects the device",
  "id": "ocyrognawjebwallvtuyyeip"
}