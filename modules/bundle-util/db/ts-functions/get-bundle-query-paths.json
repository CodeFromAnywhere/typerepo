{
  "createdAt": 1662719186314,
  "updatedAt": 1662719186314,
  "deletedAt": 0,
  "createdFirstAt": 1662719186314,
  "apiAuthenticationStrategy": "admin",
  "isApiExposed": true,
  "isExported": true,
  "operationRelativeTypescriptFilePath": "src/getBundlePaths.ts",
  "commentsInside": [],
  "rawText": " async (config?: {\n  manualProjectRoot?: string;\n}) => {\n  const projectRoot = config?.manualProjectRoot || getProjectRoot();\n  if (!projectRoot) return;\n\n  // the docs folder with all its files\n  const docsPath = path.join(projectRoot, \"docs\");\n  const relativeDocsPaths = (\n    await explore({ basePath: docsPath, extension: \"md\" })\n  ).map((x) => {\n    const pathParse = path.parse(x.path);\n    const mdPath = path.join(pathParse.dir, pathParse.name);\n    const relativeMdPath = mdPath.substring(projectRoot.length + 1);\n\n    return relativeMdPath;\n  });\n\n  // and all operations (readmes)\n\n  const relativeOperationPaths = (\n    await exploreOperationFolders({\n      basePath: getPathsWithOperations({ manualProjectRoot: projectRoot }),\n    })\n  ).map((x) => x.substring(projectRoot.length + 1));\n\n  return [...relativeDocsPaths, ...relativeOperationPaths];\n}",
  "name": "getBundleQueryPaths",
  "slug": "get-bundle-query-paths",
  "parameters": [],
  "description": "",
  "returnType": {
    "rawType": "unknown",
    "typeCoverage": 0,
    "isArray": false,
    "isEnum": false,
    "isObject": false,
    "isPrimitive": false,
    "isEnumLiteral": false
  },
  "maxIndentationDepth": 3,
  "size": {
    "characters": 863,
    "lines": 28,
    "bytes": 863,
    "bytesPerCharacter": 1,
    "charactersPerLine": 31,
    "linesPerFile": 28,
    "numberOfFiles": 1
  },
  "id": "uIlvmCwiRnIOmXtY"
}