{
  "createdAt": 1667635844849,
  "updatedAt": 1667635844849,
  "deletedAt": 0,
  "createdFirstAt": 1667635844849,
  "publicAuthorization": [
    "read-docs",
    "search"
  ],
  "isApiExposed": false,
  "isPostApi": false,
  "isGetApi": false,
  "isExported": true,
  "operationRelativeTypescriptFilePath": "src/getAllDbModels.ts",
  "commentsInside": [],
  "rawText": " async (\n  manualProjectRoot?: string,\n  operationName?: string\n) => {\n  const allDbModels = (await db.get(\"TsInterface\", { manualProjectRoot }))\n    .filter(\n      (x) => x.isDbModel && x.dbStorageMethod && x.isExported && !x.hasGeneric\n    )\n    .filter((x) => x.operationName !== \"database\")\n    .filter((x) => (operationName ? x.operationName === operationName : true))\n    .filter((x) => !!x.operationName) // && !dependants.includes(x.operationName)\n    .filter(onlyUnique2<TsInterface>((a, b) => a.name === b.name));\n\n  return allDbModels;\n}",
  "name": "getAllDbModels",
  "slug": "get-all-db-models",
  "parameters": [
    {
      "name": "manualProjectRoot",
      "schema": {
        "type": "string"
      },
      "simplifiedSchema": {
        "type": "string"
      },
      "required": false
    },
    {
      "name": "operationName",
      "schema": {
        "type": "string"
      },
      "simplifiedSchema": {
        "type": "string"
      },
      "required": false
    }
  ],
  "description": "",
  "returnType": {
    "rawType": "unknown",
    "typeCoverage": 0,
    "isArray": false,
    "isEnum": false,
    "isObject": false,
    "isPrimitive": false,
    "isEnumLiteral": false
  },
  "maxIndentationDepth": 3,
  "size": {
    "characters": 548,
    "lines": 15,
    "bytes": 548,
    "bytesPerCharacter": 1,
    "charactersPerLine": 37,
    "linesPerFile": 15,
    "numberOfFiles": 1
  },
  "id": "kjrolzclvyrlhskxzqahvhys"
}