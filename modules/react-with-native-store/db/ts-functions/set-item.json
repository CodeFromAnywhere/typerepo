{
  "createdAt": 1671104680222,
  "updatedAt": 1671104680222,
  "deletedAt": 0,
  "createdFirstAt": 1671104680222,
  "isApiExposed": true,
  "isExported": true,
  "groupAuthorization": {},
  "operationRelativeTypescriptFilePath": "src/storage.native.ts",
  "commentsInside": [],
  "rawText": " async (key: string, value: any) => {\n  // console.log(\"AsyncStorage setting item\");\n  const stringValue = JSON.stringify(value);\n  try {\n    await AsyncStorage.setItem(key, stringValue, (error) => {\n      if (error) {\n        console.warn(\n          `asyncStorage.setItem error: ${JSON.stringify({\n            key,\n            stringValue,\n            error,\n          })}`\n        );\n      }\n    });\n    // console.log(`we set ${key} to ${stringValue}`);\n  } catch (e) {\n    // saving error\n    console.warn(\n      `Something went wrong with asyncStorage from useStore (key ${key})`,\n      e\n    );\n  }\n}",
  "name": "setItem",
  "slug": "set-item",
  "parameters": [
    {
      "name": "key",
      "schema": {
        "type": "string"
      },
      "simplifiedSchema": {
        "type": "string"
      },
      "required": true
    },
    {
      "name": "value",
      "schema": {},
      "simplifiedSchema": {
        "properties": [],
        "type": "object"
      },
      "required": true
    }
  ],
  "description": "",
  "returnType": {
    "rawType": "any",
    "typeCoverage": 0,
    "isArray": false,
    "isEnum": false,
    "isObject": false,
    "isPrimitive": false,
    "isEnumLiteral": false
  },
  "maxIndentationDepth": 6,
  "size": {
    "characters": 606,
    "lines": 24,
    "bytes": 606,
    "bytesPerCharacter": 1,
    "charactersPerLine": 25,
    "linesPerFile": 24,
    "numberOfFiles": 1
  },
  "id": "qlapdvxqclutgwqxzdernnvc"
}