{
  "createdAt": 1666260828005,
  "updatedAt": 1666260828005,
  "deletedAt": 0,
  "createdFirstAt": 1666260828005,
  "publicAuthorization": [
    "read-docs",
    "search"
  ],
  "isApiExposed": false,
  "isPostApi": false,
  "isGetApi": false,
  "isExported": true,
  "operationRelativeTypescriptFilePath": "src/general.ts",
  "commentsInside": [],
  "rawText": " async (\n  argumentPosition: number,\n  question: string,\n  isNonInteractive?: boolean\n): Promise<string> => {\n  let argument = argumentsWithoutFlags[argumentPosition + 1];\n  if (argument && argument.length > 0) return argument;\n\n  if (isNonInteractive) {\n    return \"\";\n  }\n\n  return ask(question);\n}",
  "name": "getArgumentOrAsk",
  "slug": "get-argument-or-ask",
  "parameters": [
    {
      "name": "argumentPosition",
      "schema": {
        "type": "number"
      },
      "simplifiedSchema": {
        "type": "number"
      },
      "required": true
    },
    {
      "name": "question",
      "schema": {
        "type": "string"
      },
      "simplifiedSchema": {
        "type": "string"
      },
      "required": true
    },
    {
      "name": "isNonInteractive",
      "schema": {
        "type": "boolean"
      },
      "simplifiedSchema": {
        "type": "boolean"
      },
      "required": false
    }
  ],
  "description": "",
  "returnType": {
    "rawType": "Promise<string>",
    "typeCoverage": 0,
    "isArray": false,
    "isEnum": false,
    "isObject": false,
    "isPrimitive": false,
    "isEnumLiteral": false
  },
  "maxIndentationDepth": 2,
  "size": {
    "characters": 300,
    "lines": 14,
    "bytes": 300,
    "bytesPerCharacter": 1,
    "charactersPerLine": 21,
    "linesPerFile": 14,
    "numberOfFiles": 1
  },
  "id": "yhgjjffmookngrliqvtvozyu"
}