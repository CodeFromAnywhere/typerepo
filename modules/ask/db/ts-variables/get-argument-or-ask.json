{
  "createdAt": 1668333193625,
  "updatedAt": 1668333193625,
  "deletedAt": 0,
  "createdFirstAt": 1668333193625,
  "classification": "const",
  "comments": [],
  "isExported": true,
  "name": "getArgumentOrAsk",
  "slug": "get-argument-or-ask",
  "operationRelativeTypescriptFilePath": "src/general.ts",
  "type": {
    "rawType": "(argumentPosition: number, question: string, isNonInteractive?: boolean | undefined) => Promise<string>",
    "typeDefinition": {
      "type": "object",
      "properties": {},
      "optional": false
    },
    "typeCoverage": 0,
    "isArray": false,
    "isEnum": false,
    "isObject": true,
    "isPrimitive": false,
    "isEnumLiteral": false,
    "simplifiedSchema": {
      "properties": [],
      "type": "object"
    }
  },
  "value": "async (\n  argumentPosition: number,\n  question: string,\n  isNonInteractive?: boolean\n): Promise<string> => {\n  let argument = argumentsWithoutFlags[argumentPosition + 1];\n  if (argument && argument.length > 0) return argument;\n\n  if (isNonInteractive) {\n    return \"\";\n  }\n\n  return ask(question);\n}",
  "description": "",
  "id": "dhanzamhadglxycjytgedazx"
}