export const sdkFunctionPaths = {
  "BreadCrumbs": "/operations/niches/bhagya/writer/breadcrumbs/db/ts-functions/bread-crumbs.json",
  "BundleViewSelector": "/operations/tools/admin-operation/operation-ui/db/ts-functions/bundle-view-selector.json",
  "FolderSummaryComponent": "/operations/tools/admin-operation/operation-ui/db/ts-functions/folder-summary-component.json",
  "Form": "/operations/tools/interfaces/vui/react-with-native/react-with-native/db/ts-functions/form.json",
  "FunctionForm": "/operations/tools/interfaces/vui/function-form/db/ts-functions/function-form.json",
  "getActivePage": "/operations/niches/bhagya/writer/file-tabs/db/ts-functions/get-active-page.json",
  "getArrayType": "/operations/tools/admin-operation/operation-ui/db/ts-functions/get-array-type.json",
  "getFirstEnum": "/operations/tools/admin-operation/operation-ui/db/ts-functions/get-first-enum.json",
  "getFolderExplorationElement": "/operations/tools/admin-operation/operation-ui/db/ts-functions/get-folder-exploration-element.json",
  "getOneArrayType": "/operations/tools/admin-operation/operation-ui/db/ts-functions/get-one-array-type.json",
  "getPageTitle": "/operations/niches/code-from-anywhere/bootcamp-operations/himalayajeep/himalayajeep-ui/db/ts-functions/get-page-title.json",
  "getRefLink": "/operations/tools/typescript/schema-util/db/ts-functions/get-ref-link.json",
  "getSchemaItems": "/operations/tools/typescript/schema-util/db/ts-functions/get-schema-items.json",
  "getSchema": "/operations/tools/typescript/schema-util/db/ts-functions/get-schema.json",
  "getTypeDefinitionString": "/operations/tools/admin-operation/operation-ui/db/ts-functions/get-type-definition-string.json",
  "getType": "/operations/tools/admin-operation/operation-ui/db/ts-functions/get-type.json",
  "goToOpenPage": "/operations/tools/admin-operation/operation-ui/db/ts-functions/go-to-open-page.json",
  "humanReadableDate": "/operations/tools/admin-operation/operation-ui/db/ts-functions/human-readable-date.json",
  "IndexInstanceContainer": "/operations/tools/database/db-ui/db/ts-functions/index-instance-container.json",
  "k": "/operations/tools/admin-operation/operation-ui/db/ts-functions/k.json",
  "Layout": "/operations/niches/code-from-anywhere/bootcamp-operations/himalayajeep/himalayajeep-ui/db/ts-functions/layout.json",
  "makeField": "/operations/tools/interfaces/vui/react-with-native/example/rwn-ui/db/ts-functions/make-field.json",
  "makeItem": "/operations/tools/admin-operation/operation-ui/db/ts-functions/make-item.json",
  "MarkdownPage": "/operations/tools/admin-operation/operation-ui/db/ts-functions/markdown-page.json",
  "MarkdownParseEdit": "/operations/tools/admin-operation/operation-ui/db/ts-functions/markdown-parse-edit.json",
  "MarkdownParsePresentation": "/operations/niches/bhagya/writer/writer-input/db/ts-functions/markdown-parse-presentation.json",
  "MenuItem": "/operations/niches/code-from-anywhere/bootcamp-operations/himalayajeep/himalayajeep-ui/db/ts-functions/menu-item.json",
  "OpenPages": "/operations/tools/admin-operation/operation-ui/db/ts-functions/open-pages.json",
  "Page": "/operations/niches/passionfruit/packages/passionfruit-ui/db/ts-functions/page.json",
  "renderBreadCrumbs": "/operations/niches/bhagya/writer/breadcrumbs/db/ts-functions/render-bread-crumbs.json",
  "renderIcon": "/operations/niches/bhagya/writer/file-tabs/db/ts-functions/render-icon.json",
  "renderLinkToFile": "/operations/tools/admin-operation/operation-ui/db/ts-functions/render-link-to-file.json",
  "renderOpenPage": "/operations/tools/admin-operation/operation-ui/db/ts-functions/render-open-page.json",
  "renderPathMetaData": "/operations/tools/admin-operation/operation-ui/db/ts-functions/render-path-meta-data.json",
  "renderSchema": "/operations/tools/admin-operation/operation-ui/db/ts-functions/render-schema.json",
  "SearchForm": "/operations/tools/admin-operation/operation-ui/db/ts-functions/search-form.json",
  "sendEventToWindow": "/operations/tools/admin-operation/operation-ui/db/ts-functions/send-event-to-window.json",
  "SimplifiedSchemaFormDebug": "/operations/tools/database/db-ui/db/ts-functions/simplified-schema-form-debug.json",
  "Terminal": "/operations/tools/admin-operation/operation-ui/db/ts-functions/terminal.json",
  "TreeMenu": "/operations/tools/admin-operation/operation-ui/db/ts-functions/tree-menu.json",
  "TsCommentComponent": "/operations/tools/admin-operation/operation-ui/db/ts-functions/ts-comment-component.json",
  "TsFunctionComponent": "/operations/tools/admin-operation/operation-ui/db/ts-functions/ts-function-component.json",
  "TsInterfaceComponent": "/operations/tools/admin-operation/operation-ui/db/ts-functions/ts-interface-component.json",
  "TsVariableComponent": "/operations/tools/admin-operation/operation-ui/db/ts-functions/ts-variable-component.json",
  "TypeDefinition": "/operations/tools/admin-operation/operation-ui/db/ts-functions/type-definition.json",
  "useExploreProjectQuery": "/operations/tools/admin-operation/operation-ui/db/ts-functions/use-explore-project-query.json",
  "useGetTsFunction": "/operations/tools/admin-operation/operation-ui/db/ts-functions/use-get-ts-function.json",
  "useHotKey": "/operations/tools/admin-operation/operation-ui/db/ts-functions/use-hot-key.json",
  "useUrl": "/operations/tools/database/db-ui/db/ts-functions/use-url.json",
  "MyApp": "/operations/niches/passionfruit/apps/passionfruit-web/db/ts-functions/my-app.json",
  "addToken": "/operations/tools/asset/asset-functions-js/db/ts-functions/add-token.json",
  "ensureToken": "/operations/tools/asset/asset-functions-js/db/ts-functions/ensure-token.json",
  "getAssetDirectlyApiUrl": "/operations/tools/asset/asset-functions-js/db/ts-functions/get-asset-directly-api-url.json",
  "getExtensionFromAsset": "/operations/tools/asset/asset-functions-js/db/ts-functions/get-extension-from-asset.json",
  "getNameFromRelativePath": "/operations/tools/asset/asset-functions-js/db/ts-functions/get-name-from-relative-path.json",
  "getNameWithTokenFromRelativePath": "/operations/tools/asset/asset-functions-js/db/ts-functions/get-name-with-token-from-relative-path.json",
  "getPreferredExtensionFromType": "/operations/tools/asset/asset-functions-js/db/ts-functions/get-preferred-extension-from-type.json",
  "getReferencedAssetApiUrl": "/operations/tools/asset/asset-functions-js/db/ts-functions/get-referenced-asset-api-url.json",
  "getTypeFromRelativePath": "/operations/tools/asset/asset-functions-js/db/ts-functions/get-type-from-relative-path.json",
  "readableSize": "/operations/tools/asset/asset-functions-js/db/ts-functions/readable-size.json",
  "removeTokenIfPresent": "/operations/tools/asset/asset-functions-js/db/ts-functions/remove-token-if-present.json",
  "compressAsset": "/operations/tools/asset/asset-functions-node/db/ts-functions/compress-asset.json",
  "convertToMp3": "/operations/tools/asset/asset-functions-node/db/ts-functions/convert-to-mp-3.json",
  "deleteReferencedAsset": "/operations/tools/asset/asset-functions-node/db/ts-functions/delete-referenced-asset.json",
  "downloadRemoteAsset": "/operations/tools/asset/asset-functions-node/db/ts-functions/download-remote-asset.json",
  "findAbsoluteAssetPathFromReference": "/operations/tools/asset/asset-functions-node/db/ts-functions/find-absolute-asset-path-from-reference.json",
  "findAllProjectMedia": "/operations/tools/asset/asset-functions-node/db/ts-functions/find-all-project-media.json",
  "findAssetParametersRecursively": "/operations/tools/asset/asset-functions-node/db/ts-functions/find-asset-parameters-recursively.json",
  "getAssetDirectlyGetApi": "/operations/tools/asset/asset-functions-node/db/ts-functions/get-asset-directly-get-api.json",
  "getReferencedAssetGetApi": "/operations/tools/asset/asset-functions-node/db/ts-functions/get-referenced-asset-get-api.json",
  "getStorageLocationInfo": "/operations/tools/asset/asset-functions-node/db/ts-functions/get-storage-location-info.json",
  "getTemporaryAssetsFolderPath": "/operations/tools/asset/asset-functions-node/db/ts-functions/get-temporary-assets-folder-path.json",
  "processAsset": "/operations/tools/asset/asset-functions-node/db/ts-functions/process-asset.json",
  "processItemAssets": "/operations/tools/asset/asset-functions-node/db/ts-functions/process-item-assets.json",
  "removeOldTemporaryAssets": "/operations/tools/asset/asset-functions-node/db/ts-functions/remove-old-temporary-assets.json",
  "serverDownloadReply": "/operations/tools/asset/asset-functions-node/db/ts-functions/server-download-reply.json",
  "test": "/operations/niches/bhagya/controllers/youtube-controller/db/ts-functions/test.json",
  "uploadAssetPostApi": "/operations/tools/asset/asset-functions-node/db/ts-functions/upload-asset-post-api.json",
  "AssetInput": "/operations/tools/interfaces/vui/react-with-native/react-with-native-form-asset-input/db/ts-functions/asset-input.json",
  "Audio": "/operations/tools/asset/asset-input/db/ts-functions/audio.json",
  "base64UrltoBlob": "/operations/tools/asset/asset-input/db/ts-functions/base-64urlto-blob.json",
  "FileInput": "/operations/tools/interfaces/vui/react-with-native/react-with-native-form-inputs/db/ts-functions/file-input.json",
  "getTypeFromFileBlob": "/operations/tools/asset/asset-input/db/ts-functions/get-type-from-file-blob.json",
  "makeBackendAsset": "/operations/tools/asset/asset-input/db/ts-functions/make-backend-asset.json",
  "MediaRecorderComponent": "/operations/tools/asset/asset-input/db/ts-functions/media-recorder-component.json",
  "MediaRecorder": "/operations/tools/asset/asset-input/db/ts-functions/media-recorder.json",
  "ReactMediaRecorder": "/operations/tools/asset/asset-input/db/ts-functions/react-media-recorder.json",
  "SelectMedia": "/operations/tools/asset/asset-input/db/ts-functions/select-media.json",
  "useReactMediaRecorder": "/operations/tools/asset/asset-input/db/ts-functions/use-react-media-recorder.json",
  "VideoPreview": "/operations/tools/asset/asset-input/db/ts-functions/video-preview.json",
  "Video": "/operations/tools/asset/asset-input/db/ts-functions/video.json",
  "WebcamCapture": "/operations/tools/asset/asset-input/db/ts-functions/webcam-capture.json",
  "AssetView": "/operations/tools/asset/asset-view/db/ts-functions/asset-view.json",
  "InteractiveAsset": "/operations/tools/asset/asset-view/db/ts-functions/interactive-asset.json",
  "getChunkBegin": "/operations/tools/asset/text-or-binary/db/ts-functions/get-chunk-begin.json",
  "getChunkEnd": "/operations/tools/asset/text-or-binary/db/ts-functions/get-chunk-end.json",
  "getEncoding": "/operations/tools/asset/text-or-binary/db/ts-functions/get-encoding.json",
  "isBinary": "/operations/tools/asset/text-or-binary/db/ts-functions/is-binary.json",
  "isFirstByteOf2ByteChar": "/operations/tools/asset/text-or-binary/db/ts-functions/is-first-byte-of-2byte-char.json",
  "isFirstByteOf3ByteChar": "/operations/tools/asset/text-or-binary/db/ts-functions/is-first-byte-of-3byte-char.json",
  "isFirstByteOf4ByteChar": "/operations/tools/asset/text-or-binary/db/ts-functions/is-first-byte-of-4byte-char.json",
  "isLaterByteOfUtf8": "/operations/tools/asset/text-or-binary/db/ts-functions/is-later-byte-of-utf-8.json",
  "isText": "/operations/tools/asset/text-or-binary/db/ts-functions/is-text.json",
  "folderGetUpdatedAt": "/operations/tools/control-fs/folder-get-updated-at/db/ts-functions/folder-get-updated-at.json",
  "canAccessSync": "/operations/tools/control-fs/fs-util/db/ts-functions/can-access-sync.json",
  "canAccess": "/operations/tools/control-fs/fs-util/db/ts-functions/can-access.json",
  "canExecuteSync": "/operations/tools/control-fs/fs-util/db/ts-functions/can-execute-sync.json",
  "canExecute": "/operations/tools/control-fs/fs-util/db/ts-functions/can-execute.json",
  "canReadSync": "/operations/tools/control-fs/fs-util/db/ts-functions/can-read-sync.json",
  "canRead": "/operations/tools/control-fs/fs-util/db/ts-functions/can-read.json",
  "canSeeSync": "/operations/tools/control-fs/fs-util/db/ts-functions/can-see-sync.json",
  "canSee": "/operations/tools/control-fs/fs-util/db/ts-functions/can-see.json",
  "canWriteSync": "/operations/tools/control-fs/fs-util/db/ts-functions/can-write-sync.json",
  "canWrite": "/operations/tools/control-fs/fs-util/db/ts-functions/can-write.json",
  "copyAllRelativeFiles": "/operations/tools/control-fs/fs-util/db/ts-functions/copy-all-relative-files.json",
  "findAllMd": "/operations/tools/control-fs/fs-util/db/ts-functions/find-all-md.json",
  "findFileNameCaseInsensitive": "/operations/tools/control-fs/fs-util/db/ts-functions/find-file-name-case-insensitive.json",
  "findFilesRecursively": "/operations/tools/control-project/k-explore/db/ts-functions/find-files-recursively.json",
  "findSensibleFiles": "/operations/tools/control-fs/fs-util/db/ts-functions/find-sensible-files.json",
  "getAllFoldersUntilFolder": "/operations/tools/control-fs/fs-util/db/ts-functions/get-all-folders-until-folder.json",
  "getFileName": "/operations/tools/control-fs/fs-util/db/ts-functions/get-file-name.json",
  "getFirstAvailableFilename": "/operations/tools/control-fs/fs-util/db/ts-functions/get-first-available-filename.json",
  "getFolder": "/operations/tools/control-fs/fs-util/db/ts-functions/get-folder.json",
  "getLastFolder": "/operations/tools/control-fs/fs-util/db/ts-functions/get-last-folder.json",
  "getOneFolderUpPath": "/operations/tools/control-fs/fs-util/db/ts-functions/get-one-folder-up-path.json",
  "getPathCombinations": "/operations/tools/control-fs/fs-util/db/ts-functions/get-path-combinations.json",
  "importFromFiles": "/operations/tools/control-fs/fs-util/db/ts-functions/import-from-files.json",
  "isArrayGuard": "/operations/tools/control-fs/fs-util/db/ts-functions/is-array-guard.json",
  "oneUp": "/operations/tools/control-fs/fs-util/db/ts-functions/one-up.json",
  "parseMd": "/operations/tools/control-fs/fs-util/db/ts-functions/parse-md.json",
  "removeAllExcept": "/operations/tools/control-fs/fs-util/db/ts-functions/remove-all-except.json",
  "renameAndCreate": "/operations/tools/control-fs/fs-util/db/ts-functions/rename-and-create.json",
  "writeJsonToFile": "/operations/tools/control-fs/fs-util/db/ts-functions/write-json-to-file.json",
  "writeStringToFile": "/operations/tools/control-fs/fs-util/db/ts-functions/write-string-to-file.json",
  "writeToFiles": "/operations/tools/control-fs/fs-util/db/ts-functions/write-to-files.json",
  "getExtension": "/operations/tools/control-fs/fs-util-js/db/ts-functions/get-extension.json",
  "getFolderJs": "/operations/tools/control-fs/fs-util-js/db/ts-functions/get-folder-js.json",
  "getSubExtension": "/operations/tools/control-fs/fs-util-js/db/ts-functions/get-sub-extension.json",
  "isPathRelative": "/operations/tools/control-fs/fs-util-js/db/ts-functions/is-path-relative.json",
  "join": "/operations/tools/control-fs/fs-util-js/db/ts-functions/join.json",
  "removeTrailingSlash": "/operations/tools/control-fs/fs-util-js/db/ts-functions/remove-trailing-slash.json",
  "withoutExtension": "/operations/tools/control-fs/fs-util-js/db/ts-functions/without-extension.json",
  "getAssociatedMd": "/operations/tools/control-fs/get-associated-md/db/ts-functions/get-associated-md.json",
  "getAvailableFolderPath": "/operations/tools/control-fs/get-available-folder-path/db/ts-functions/get-available-folder-path.json",
  "getOperationBins": "/operations/tools/control-fs/get-package-json/db/ts-functions/get-operation-bins.json",
  "getOperationPackageName": "/operations/tools/control-fs/get-package-json/db/ts-functions/get-operation-package-name.json",
  "getPackageJson": "/operations/tools/control-fs/get-package-json/db/ts-functions/get-package-json.json",
  "getPackageSourcePaths": "/operations/tools/control-fs/get-package-source-paths/db/ts-functions/get-package-source-paths.json",
  "getTsConfig": "/operations/tools/control-fs/get-ts-config/db/ts-functions/get-ts-config.json",
  "byteCount": "/operations/tools/control-fs/path-util/db/ts-functions/byte-count.json",
  "calculatePathMetaData": "/operations/tools/control-fs/path-util/db/ts-functions/calculate-path-meta-data.json",
  "categorizeFiles": "/operations/tools/control-fs/path-util/db/ts-functions/categorize-files.json",
  "getFolderSummary": "/operations/tools/control-fs/path-util/db/ts-functions/get-folder-summary.json",
  "getPathMainComment": "/operations/tools/control-fs/path-util/db/ts-functions/get-path-main-comment.json",
  "getSizeSummary": "/operations/tools/typescript/index-typescript/db/ts-functions/get-size-summary.json",
  "sumSizeSummary": "/operations/tools/control-fs/path-util/db/ts-functions/sum-size-summary.json",
  "findTemplates": "/operations/tools/control-fs/rename-template-files/db/ts-functions/find-templates.json",
  "isEqualArray": "/operations/tools/control-fs/rename-template-files/db/ts-functions/is-equal-array.json",
  "renameTemplateFiles": "/operations/tools/control-fs/rename-template-files/db/ts-functions/rename-template-files.json",
  "renameTemplateToNormalFile": "/operations/tools/control-fs/rename-template-files/db/ts-functions/rename-template-to-normal-file.json",
  "renameToTemplateFile": "/operations/tools/control-fs/rename-template-files/db/ts-functions/rename-to-template-file.json",
  "setJsonKey": "/operations/tools/control-fs/set-json-key/db/ts-functions/set-json-key.json",
  "setKeyAtLocation": "/operations/tools/control-fs/set-json-key/db/ts-functions/set-key-at-location.json",
  "getSubInfo": "/operations/tools/control-fs/watch-folders/db/ts-functions/get-sub-info.json",
  "getSubName": "/operations/tools/control-fs/watch-folders/db/ts-functions/get-sub-name.json",
  "initiateWatch": "/operations/tools/control-fs/watch-folders/db/ts-functions/initiate-watch.json",
  "isClientOk": "/operations/tools/control-fs/watch-folders/db/ts-functions/is-client-ok.json",
  "isStillPending": "/operations/tools/control-fs/watch-folders/db/ts-functions/is-still-pending.json",
  "makeSubscription": "/operations/tools/control-fs/watch-folders/db/ts-functions/make-subscription.json",
  "noPending": "/operations/tools/control-fs/watch-folders/db/ts-functions/no-pending.json",
  "pickWatcher": "/operations/tools/control-fs/watch-folders/db/ts-functions/pick-watcher.json",
  "watchFoldersChokidar": "/operations/tools/control-fs/watch-folders/db/ts-functions/watch-folders-chokidar.json",
  "watchFoldersFs": "/operations/tools/control-fs/watch-folders/db/ts-functions/watch-folders-fs.json",
  "watchFolders": "/operations/tools/control-fs/watch-folders/db/ts-functions/watch-folders.json",
  "writeToAssets": "/operations/tools/control-fs/write-to-assets/db/ts-functions/write-to-assets.json",
  "allOperationsRemoveJsSrc": "/operations/tools/control-project/all/db/ts-functions/all-operations-remove-js-src.json",
  "allOperationsToMarkdown": "/operations/tools/control-project/all/db/ts-functions/all-operations-to-markdown.json",
  "clearAllTsDatabases": "/operations/tools/control-project/all/db/ts-functions/clear-all-ts-databases.json",
  "codeAll": "/operations/tools/control-project/all/db/ts-functions/code-all.json",
  "forAllFiles": "/operations/tools/control-project/all/db/ts-functions/for-all-files.json",
  "forAllFolders": "/operations/tools/control-project/all/db/ts-functions/for-all-folders.json",
  "getAllOperationClassifications": "/operations/tools/control-project/all/db/ts-functions/get-all-operation-classifications.json",
  "gitShipAllRepos": "/operations/tools/control-project/all/db/ts-functions/git-ship-all-repos.json",
  "mdAllOperations": "/operations/tools/control-project/all/db/ts-functions/md-all-operations.json",
  "minifyAllOperations": "/operations/tools/control-project/all/db/ts-functions/minify-all-operations.json",
  "publishAllOperations": "/operations/tools/control-project/all/db/ts-functions/publish-all-operations.json",
  "removeAllFiles": "/operations/tools/control-project/all/db/ts-functions/remove-all-files.json",
  "removeAllFoldersCli": "/operations/tools/control-project/all/db/ts-functions/remove-all-folders-cli.json",
  "removeAllFolders": "/operations/tools/control-project/all/db/ts-functions/remove-all-folders.json",
  "removeAll": "/operations/tools/control-project/all/db/ts-functions/remove-all.json",
  "renameAll": "/operations/tools/control-project/all/db/ts-functions/rename-all.json",
  "runScriptEverywhere": "/operations/tools/control-project/all/db/ts-functions/run-script-everywhere.json",
  "setScriptEverywhere": "/operations/tools/control-project/all/db/ts-functions/set-script-everywhere.json",
  "makeFileType": "/operations/tools/control-project/deprecated/make-file-type/db/ts-functions/make-file-type.json",
  "exploreOperation": "/operations/tools/control-project/explore-project/db/ts-functions/explore-operation.json",
  "exploreProject": "/operations/tools/control-project/explore-project/db/ts-functions/explore-project.json",
  "getExplorationType": "/operations/tools/control-project/explore-project/db/ts-functions/get-exploration-type.json",
  "getFileWithExtension": "/operations/tools/control-project/explore-project/db/ts-functions/get-file-with-extension.json",
  "getFolderExplorationDetails": "/operations/tools/control-project/explore-project/db/ts-functions/get-folder-exploration-details.json",
  "getInstanceNames": "/operations/tools/control-project/explore-project/db/ts-functions/get-instance-names.json",
  "getProjectRelativePaths": "/operations/tools/control-project/explore-project/db/ts-functions/get-project-relative-paths.json",
  "hasSameProjectPath": "/operations/tools/control-project/explore-project/db/ts-functions/has-same-project-path.json",
  "main": "/operations/niches/sprent/parse-images/db/ts-functions/main.json",
  "getAllOperationSourcePaths": "/operations/tools/control-project/get-all-operation-source-paths/db/ts-functions/get-all-operation-source-paths.json",
  "findFolderWhereMatch": "/operations/tools/control-project/get-path/db/ts-functions/find-folder-where-match.json",
  "findOperationBasePathWithClassification": "/operations/tools/control-project/get-path/db/ts-functions/find-operation-base-path-with-classification.json",
  "findOperationBasePath": "/operations/tools/control-project/get-path/db/ts-functions/find-operation-base-path.json",
  "getAllPackageJsonDependencies": "/operations/tools/control-project/get-path/db/ts-functions/get-all-package-json-dependencies.json",
  "getCommonAncestor": "/operations/tools/control-project/get-path/db/ts-functions/get-common-ancestor.json",
  "getOperationClassification": "/operations/tools/control-project/get-path/db/ts-functions/get-operation-classification.json",
  "getOperationPathParse": "/operations/tools/control-project/get-path/db/ts-functions/get-operation-path-parse.json",
  "getOperationPath": "/operations/tools/control-project/get-path/db/ts-functions/get-operation-path.json",
  "getOperationRelativePath": "/operations/tools/control-project/get-path/db/ts-functions/get-operation-relative-path.json",
  "getPathParse": "/operations/tools/control-project/get-path/db/ts-functions/get-path-parse.json",
  "getPathsWithOperations": "/operations/tools/control-project/get-path/db/ts-functions/get-paths-with-operations.json",
  "getProjectRoot": "/operations/tools/control-project/get-path/db/ts-functions/get-project-root.json",
  "getRelativeLinkPath": "/operations/tools/control-project/get-path/db/ts-functions/get-relative-link-path.json",
  "getRelativePath": "/operations/tools/control-project/get-path/db/ts-functions/get-relative-path.json",
  "getRootPath": "/operations/tools/control-project/get-path/db/ts-functions/get-root-path.json",
  "getSrcRelativeFileId": "/operations/tools/control-project/get-path/db/ts-functions/get-src-relative-file-id.json",
  "hasDependency": "/operations/tools/control-project/get-path/db/ts-functions/has-dependency.json",
  "hasProjectRootFile": "/operations/tools/control-project/get-path/db/ts-functions/has-project-root-file.json",
  "isOperation": "/operations/tools/control-project/get-path/db/ts-functions/is-operation.json",
  "isSensibleProject": "/operations/tools/control-project/get-path/db/ts-functions/is-sensible-project.json",
  "isWorkspaceRoot": "/operations/tools/control-project/get-path/db/ts-functions/is-workspace-root.json",
  "makeRelative": "/operations/tools/control-project/get-path/db/ts-functions/make-relative.json",
  "benchmark": "/operations/tools/control-project/k-explore/db/ts-functions/benchmark.json",
  "determineFileType": "/operations/tools/control-project/k-explore/db/ts-functions/determine-file-type.json",
  "exploreGitRepoFolders": "/operations/tools/control-project/k-explore/db/ts-functions/explore-git-repo-folders.json",
  "exploreMultiple": "/operations/tools/control-project/k-explore/db/ts-functions/explore-multiple.json",
  "exploreOperationFolders": "/operations/tools/control-project/k-explore/db/ts-functions/explore-operation-folders.json",
  "explorePreset": "/operations/tools/control-project/k-explore/db/ts-functions/explore-preset.json",
  "explore": "/operations/tools/control-project/k-explore/db/ts-functions/explore.json",
  "findAllDocsFolderPaths": "/operations/tools/control-project/k-explore/db/ts-functions/find-all-docs-folder-paths.json",
  "findAllDotGitFolders": "/operations/tools/control-project/k-explore/db/ts-functions/find-all-dot-git-folders.json",
  "findAllFoldersWithName": "/operations/tools/control-project/k-explore/db/ts-functions/find-all-folders-with-name.json",
  "findAllPackages": "/operations/tools/control-project/k-explore/db/ts-functions/find-all-packages.json",
  "findAllTodoFolderPaths": "/operations/tools/control-project/k-explore/db/ts-functions/find-all-todo-folder-paths.json",
  "getArgument": "/operations/tools/control-project/k-explore/db/ts-functions/get-argument.json",
  "getContents": "/operations/tools/control-project/k-explore/db/ts-functions/get-contents.json",
  "getOutline": "/operations/tools/parsing/file-conversion/md/markdown-parsings/db/ts-functions/get-outline.json",
  "isMatch": "/operations/tools/control-project/k-explore/db/ts-functions/is-match.json",
  "isSearchContentExtension": "/operations/tools/control-project/k-explore/db/ts-functions/is-search-content-extension.json",
  "pathArrayIsOperation": "/operations/tools/control-project/k-explore/db/ts-functions/path-array-is-operation.json",
  "getDependenciesSummary": "/operations/tools/control-project/operation-util/db/ts-functions/get-dependencies-summary.json",
  "getOperationMetaData": "/operations/tools/control-project/operation-util/db/ts-functions/get-operation-meta-data.json",
  "recalculateOperationIndexJson": "/operations/tools/control-project/operation-util/db/ts-functions/recalculate-operation-index-json.json",
  "writeKeyToOperationIndexJson": "/operations/tools/control-project/operation-util/db/ts-functions/write-key-to-operation-index-json.json",
  "startAppCli": "/operations/tools/control-project/pm2-util/db/ts-functions/start-app-cli.json",
  "startApp": "/operations/tools/control-project/pm2-util/db/ts-functions/start-app.json",
  "brigtnessFull": "/operations/tools/control-system/brightness/db/ts-functions/brigtness-full.json",
  "brigtnessZero": "/operations/tools/control-system/brightness/db/ts-functions/brigtness-zero.json",
  "decreaseBrightness": "/operations/tools/control-system/brightness/db/ts-functions/decrease-brightness.json",
  "increaseBrightness": "/operations/tools/control-system/brightness/db/ts-functions/increase-brightness.json",
  "sensibleSetup": "/operations/tools/control-system/clean-macos-setup/db/ts-functions/sensible-setup.json",
  "playMusic": "/operations/tools/control-system/play-music/db/ts-functions/play-music.json",
  "generateRecurringReminders": "/operations/tools/control-system/reminders/db/ts-functions/generate-recurring-reminders.json",
  "remindMeAboutNextMinute": "/operations/tools/control-system/reminders/db/ts-functions/remind-me-about-next-minute.json",
  "setRandomTimezone": "/operations/tools/control-system/set-random-timezone/db/ts-functions/set-random-timezone.json",
  "disableDarkMode": "/operations/tools/control-system/toggle-dark-mode/db/ts-functions/disable-dark-mode.json",
  "enableDarkMode": "/operations/tools/control-system/toggle-dark-mode/db/ts-functions/enable-dark-mode.json",
  "setDarkmodeCommand": "/operations/tools/control-system/toggle-dark-mode/db/ts-functions/set-darkmode-command.json",
  "toggleDarkMode": "/operations/tools/control-system/toggle-dark-mode/db/ts-functions/toggle-dark-mode.json",
  "disableScreenSleep2": "/operations/tools/control-system/toggle-screen-sleep/db/ts-functions/disable-screen-sleep-2.json",
  "disableScreenSleep": "/operations/tools/control-system/toggle-screen-sleep/db/ts-functions/disable-screen-sleep.json",
  "enableScreenSleep": "/operations/tools/control-system/toggle-screen-sleep/db/ts-functions/enable-screen-sleep.json",
  "downVolume": "/operations/tools/control-system/volume/db/ts-functions/down-volume.json",
  "getVolume": "/operations/tools/control-system/volume/db/ts-functions/get-volume.json",
  "setVolume": "/operations/tools/control-system/volume/db/ts-functions/set-volume.json",
  "upVolume": "/operations/tools/control-system/volume/db/ts-functions/up-volume.json",
  "getOpenableFilePath": "/operations/tools/control-system/vscode-open/db/ts-functions/get-openable-file-path.json",
  "vscodeOpen": "/operations/tools/control-system/vscode-open/db/ts-functions/vscode-open.json",
  "getWriterType": "/operations/tools/conventions/filename-conventions/db/ts-functions/get-writer-type.json",
  "hasSubExtension": "/operations/tools/conventions/filename-conventions/db/ts-functions/has-sub-extension.json",
  "isGeneratedOperationName": "/operations/tools/conventions/filename-conventions/db/ts-functions/is-generated-operation-name.json",
  "isGeneratedOperation": "/operations/tools/conventions/filename-conventions/db/ts-functions/is-generated-operation.json",
  "isIndexableFileId": "/operations/tools/conventions/filename-conventions/db/ts-functions/is-indexable-file-id.json",
  "getAssetInputType": "/operations/tools/conventions/name-conventions/db/ts-functions/get-asset-input-type.json",
  "getParameterContentType": "/operations/tools/conventions/name-conventions/db/ts-functions/get-parameter-content-type.json",
  "isCalculatedParameter": "/operations/tools/conventions/name-conventions/db/ts-functions/is-calculated-parameter.json",
  "isGeneratedParameterName": "/operations/tools/conventions/name-conventions/db/ts-functions/is-generated-parameter-name.json",
  "generateCsvInstance": "/operations/tools/database/database/db/ts-functions/generate-csv-instance.json",
  "generateJsonSingleInstance": "/operations/tools/database/database/db/ts-functions/generate-json-single-instance.json",
  "generateKvmdInstance": "/operations/tools/database/database/db/ts-functions/generate-kvmd-instance.json",
  "generateMarkdownInstance": "/operations/tools/database/database/db/ts-functions/generate-markdown-instance.json",
  "generateSlugTestModel": "/operations/tools/database/database/db/ts-functions/generate-slug-test-model.json",
  "getCli": "/operations/tools/database/database/db/ts-functions/get-cli.json",
  "getMergedQueryConfig": "/operations/tools/database/database/db/ts-functions/get-merged-query-config.json",
  "getRanomAge": "/operations/tools/database/database/db/ts-functions/get-ranom-age.json",
  "get": "/operations/tools/database/database/db/ts-functions/get.json",
  "migration": "/operations/tools/database/database/db/ts-functions/migration.json",
  "randomName": "/operations/tools/database/database/db/ts-functions/random-name.json",
  "removeCli": "/operations/tools/database/database/db/ts-functions/remove-cli.json",
  "runModelEndToEndTest": "/operations/tools/database/database/db/ts-functions/run-model-end-to-end-test.json",
  "set": "/operations/tools/database/database/db/ts-functions/set.json",
  "testOperationModels": "/operations/tools/database/database/db/ts-functions/test-operation-models.json",
  "updateCli": "/operations/tools/database/database/db/ts-functions/update-cli.json",
  "upsertCli": "/operations/tools/database/database/db/ts-functions/upsert-cli.json",
  "upsert": "/operations/tools/database/fs-orm/db/ts-functions/upsert.json",
  "cacheLookup": "/operations/tools/database/db-recipes/db/ts-functions/cache-lookup.json",
  "calculateOperatingSystemBundle": "/operations/tools/database/db-recipes/db/ts-functions/calculate-operating-system-bundle.json",
  "deleteDbModel": "/operations/tools/database/db-recipes/db/ts-functions/delete-db-model.json",
  "getCachedFunctions": "/operations/tools/database/db-recipes/db/ts-functions/get-cached-functions.json",
  "getDatabaseMenu": "/operations/tools/database/db-recipes/db/ts-functions/get-database-menu.json",
  "getDbModelNames": "/operations/tools/database/db-recipes/db/ts-functions/get-db-model-names.json",
  "getDbModel": "/operations/tools/database/db-recipes/db/ts-functions/get-db-model.json",
  "getFunctionIndex": "/operations/tools/database/db-recipes/db/ts-functions/get-function-index.json",
  "getNestedDatabaseMenu": "/operations/tools/database/db-recipes/db/ts-functions/get-nested-database-menu.json",
  "getReferencableModelData": "/operations/tools/database/db-recipes/db/ts-functions/get-referencable-model-data.json",
  "hasDbRecipes": "/operations/tools/database/db-recipes/db/ts-functions/has-db-recipes.json",
  "makeSrcRelativeFolder": "/operations/tools/database/db-recipes/db/ts-functions/make-src-relative-folder.json",
  "testFn": "/operations/tools/database/db-recipes/db/ts-functions/test-fn.json",
  "tsInterfaceToDbMenu": "/operations/tools/database/db-recipes/db/ts-functions/ts-interface-to-db-menu.json",
  "upsertDbModel": "/operations/tools/database/db-recipes/db/ts-functions/upsert-db-model.json",
  "validateInput": "/operations/tools/database/db-recipes/db/ts-functions/validate-input.json",
  "wrapFunction": "/operations/tools/database/db-recipes/db/ts-functions/wrap-function.json",
  "DbMenu": "/operations/tools/database/db-ui/db/ts-functions/db-menu.json",
  "getDataParameterNames": "/operations/tools/database/db-ui/db/ts-functions/get-data-parameter-names.json",
  "ModelComponent": "/operations/tools/database/db-ui/db/ts-functions/model-component.json",
  "UpsertForm": "/operations/tools/database/db-ui/db/ts-functions/upsert-form.json",
  "useGetDbModelQuery": "/operations/tools/database/db-ui/db/ts-functions/use-get-db-model-query.json",
  "useReferencableModelDataQuery": "/operations/tools/database/db-ui/db/ts-functions/use-referencable-model-data-query.json",
  "getStaticProps": "/operations/tools/database/db-web/db/ts-functions/get-static-props.json",
  "addDefaultValues": "/operations/tools/database/fs-orm/db/ts-functions/add-default-values.json",
  "alterAny": "/operations/tools/database/fs-orm/db/ts-functions/alter-any.json",
  "alterCsv": "/operations/tools/database/fs-orm/db/ts-functions/alter-csv.json",
  "alterJsonMultiple": "/operations/tools/database/fs-orm/db/ts-functions/alter-json-multiple.json",
  "alterJsonSingle": "/operations/tools/database/fs-orm/db/ts-functions/alter-json-single.json",
  "alterKeyValueMarkdown": "/operations/tools/database/fs-orm/db/ts-functions/alter-key-value-markdown.json",
  "alterMarkdown": "/operations/tools/database/fs-orm/db/ts-functions/alter-markdown.json",
  "augmentItemWithReferencedDataRecursively": "/operations/tools/database/fs-orm/db/ts-functions/augment-item-with-referenced-data-recursively.json",
  "calculateOperationsObject": "/operations/tools/database/fs-orm/db/ts-functions/calculate-operations-object.json",
  "createDb": "/operations/tools/database/fs-orm/db/ts-functions/create-db.json",
  "findParent": "/operations/tools/database/fs-orm/db/ts-functions/find-parent.json",
  "getAugmentedData": "/operations/tools/database/fs-orm/db/ts-functions/get-augmented-data.json",
  "getDatabaseFiles": "/operations/tools/database/fs-orm/db/ts-functions/get-database-files.json",
  "getDatabaseRootFolder": "/operations/tools/database/fs-orm/db/ts-functions/get-database-root-folder.json",
  "getDbFileLocation": "/operations/tools/database/fs-orm/db/ts-functions/get-db-file-location.json",
  "getDbStorageMethodExtension": "/operations/tools/database/fs-orm/db/ts-functions/get-db-storage-method-extension.json",
  "getDefaultLocationPattern": "/operations/tools/database/fs-orm/db/ts-functions/get-default-location-pattern.json",
  "getItemModelLocation": "/operations/tools/database/fs-orm/db/ts-functions/get-item-model-location.json",
  "getLength": "/operations/tools/database/fs-orm/db/ts-functions/get-length.json",
  "getLocationPattern": "/operations/tools/database/fs-orm/db/ts-functions/get-location-pattern.json",
  "getMergedConfigOperationPath": "/operations/tools/database/fs-orm/db/ts-functions/get-merged-config-operation-path.json",
  "getParentSlug": "/operations/tools/database/fs-orm/db/ts-functions/get-parent-slug.json",
  "getRootFolders": "/operations/tools/database/fs-orm/db/ts-functions/get-root-folders.json",
  "getWildcardDbFileLocations__OLD": "/operations/tools/database/fs-orm/db/ts-functions/get-wildcard-db-file-locations-old.json",
  "getWildcardDbFileLocations": "/operations/tools/database/fs-orm/db/ts-functions/get-wildcard-db-file-locations.json",
  "groupByFile": "/operations/tools/database/fs-orm/db/ts-functions/group-by-file.json",
  "makeStoringItem": "/operations/tools/database/fs-orm/db/ts-functions/make-storing-item.json",
  "mergeConfigs": "/operations/tools/database/fs-orm/db/ts-functions/merge-configs.json",
  "removeKeyValueMarkdown": "/operations/tools/database/fs-orm/db/ts-functions/remove-key-value-markdown.json",
  "removeMultiple": "/operations/tools/database/fs-orm/db/ts-functions/remove-multiple.json",
  "upsertItems": "/operations/tools/database/fs-orm/db/ts-functions/upsert-items.json",
  "upsertKeyValueMarkdown": "/operations/tools/database/fs-orm/db/ts-functions/upsert-key-value-markdown.json",
  "validateModel": "/operations/tools/database/validate-model/db/ts-functions/validate-model.json",
  "validate": "/operations/tools/database/validate-model/db/ts-functions/validate.json",
  "getBundleSummary": "/operations/tools/deployment/bundling/bundle-util/db/ts-functions/get-bundle-summary.json",
  "getDbModelsForBundle": "/operations/tools/deployment/bundling/bundle-util/db/ts-functions/get-db-models-for-bundle.json",
  "createBackup": "/operations/tools/deployment/bundling/create-backup/db/ts-functions/create-backup.json",
  "getHumanReadableDate": "/operations/tools/deployment/bundling/create-backup/db/ts-functions/get-human-readable-date.json",
  "createDistribution": "/operations/tools/deployment/bundling/create-distribution/db/ts-functions/create-distribution.json",
  "filterInterfacesFromOperationNames": "/operations/tools/deployment/bundling/db-util/db/ts-functions/filter-interfaces-from-operation-names.json",
  "getDbModelsFromOperations": "/operations/tools/deployment/bundling/db-util/db/ts-functions/get-db-models-from-operations.json",
  "calculateBundleOperations": "/operations/tools/deployment/bundling/generate-bundle/db/ts-functions/calculate-bundle-operations.json",
  "calculateToPath": "/operations/tools/deployment/bundling/generate-bundle/db/ts-functions/calculate-to-path.json",
  "copyDocsAndReadme": "/operations/tools/deployment/bundling/generate-bundle/db/ts-functions/copy-docs-and-readme.json",
  "copyFromRepoToNiche": "/operations/tools/deployment/bundling/generate-bundle/db/ts-functions/copy-from-repo-to-niche.json",
  "copyOperation": "/operations/tools/deployment/bundling/generate-bundle/db/ts-functions/copy-operation.json",
  "copyReadmesBeforeFolderToBundle": "/operations/tools/deployment/bundling/generate-bundle/db/ts-functions/copy-readmes-before-folder-to-bundle.json",
  "copyTodosIntoBundle": "/operations/tools/deployment/bundling/generate-bundle/db/ts-functions/copy-todos-into-bundle.json",
  "findAndCopyOperations": "/operations/tools/deployment/bundling/generate-bundle/db/ts-functions/find-and-copy-operations.json",
  "generateAllBundles": "/operations/tools/deployment/bundling/generate-bundle/db/ts-functions/generate-all-bundles.json",
  "generateBundle": "/operations/tools/deployment/bundling/generate-bundle/db/ts-functions/generate-bundle.json",
  "generateBundles": "/operations/tools/deployment/bundling/generate-bundle/db/ts-functions/generate-bundles.json",
  "getBundlePaths": "/operations/tools/deployment/bundling/generate-bundle/db/ts-functions/get-bundle-paths.json",
  "getIndirectDependencies": "/operations/tools/deployment/bundling/generate-bundle/db/ts-functions/get-indirect-dependencies.json",
  "mergeBundleConfigs": "/operations/tools/deployment/bundling/generate-bundle/db/ts-functions/merge-bundle-configs.json",
  "syncInformation": "/operations/tools/deployment/bundling/generate-bundle/db/ts-functions/sync-information.json",
  "syncNicheFolder": "/operations/tools/deployment/bundling/generate-bundle/db/ts-functions/sync-niche-folder.json",
  "yarnInstall": "/operations/tools/deployment/bundling/generate-bundle/db/ts-functions/yarn-install.json",
  "installNodeModules": "/operations/tools/deployment/bundling/install-node-modules/db/ts-functions/install-node-modules.json",
  "yarnInstallNewDistribution": "/operations/tools/deployment/bundling/yarn-install-new-distribution/db/ts-functions/yarn-install-new-distribution.json",
  "askOpenDocs": "/operations/tools/deployment/deprecated/sensible/sensible/db/ts-functions/ask-open-docs.json",
  "commandExistsOrInstall": "/operations/tools/deployment/deprecated/sensible/sensible/db/ts-functions/command-exists-or-install.json",
  "commandReplaceVariables": "/operations/tools/deployment/deprecated/sensible/sensible/db/ts-functions/command-replace-variables.json",
  "executeCommand": "/operations/tools/util/execute-command/db/ts-functions/execute-command.json",
  "executeCommandsObjectOneByOne": "/operations/tools/deployment/deprecated/sensible/sensible/db/ts-functions/execute-commands-object-one-by-one.json",
  "findArgument": "/operations/tools/deployment/deprecated/sensible/sensible/db/ts-functions/find-argument.json",
  "getApps": "/operations/tools/deployment/deprecated/sensible/sensible/db/ts-functions/get-apps.json",
  "getCacheCommands": "/operations/tools/deployment/deprecated/sensible/sensible/db/ts-functions/get-cache-commands.json",
  "getCommand": "/operations/tools/util/execute-command/db/ts-functions/get-command.json",
  "getCommandsWithoutCache": "/operations/tools/deployment/deprecated/sensible/sensible/db/ts-functions/get-commands-without-cache.json",
  "getFlagValue": "/operations/tools/deployment/deprecated/sensible/sensible/db/ts-functions/get-flag-value.json",
  "getFlag": "/operations/tools/deployment/deprecated/sensible/sensible/db/ts-functions/get-flag.json",
  "getInstallAppCommands": "/operations/tools/deployment/deprecated/sensible/sensible/db/ts-functions/get-install-app-commands.json",
  "getName": "/operations/tools/deployment/deprecated/sensible/sensible/db/ts-functions/get-name.json",
  "getOpenVSCodeCommand": "/operations/tools/deployment/deprecated/sensible/sensible/db/ts-functions/get-open-vscode-command.json",
  "getPlatformId": "/operations/tools/deployment/deprecated/sensible/sensible/db/ts-functions/get-platform-id.json",
  "getPushToGitCommands": "/operations/tools/deployment/deprecated/sensible/sensible/db/ts-functions/get-push-to-git-commands.json",
  "getRemote": "/operations/tools/deployment/deprecated/sensible/sensible/db/ts-functions/get-remote.json",
  "getSpawnCommandsReducer": "/operations/tools/deployment/deprecated/sensible/sensible/db/ts-functions/get-spawn-commands-reducer.json",
  "installRequiredStuff": "/operations/tools/deployment/deprecated/sensible/sensible/db/ts-functions/install-required-stuff.json",
  "isCommandPerOs": "/operations/tools/util/execute-command/db/ts-functions/is-command-per-os.json",
  "log": "/operations/tools/util/log/db/ts-functions/log.json",
  "slugify": "/operations/tools/util/convert-case/db/ts-functions/slugify.json",
  "makeApi": "/operations/niches/guilherme/linkedin-controller/db/ts-functions/make-api.json",
  "createMakeEndpoint": "/operations/tools/deployment/deprecated/sensible/sensible-server/db/ts-functions/create-make-endpoint.json",
  "generateOrRequireSchema": "/operations/tools/deployment/deprecated/sensible/sensible-server/db/ts-functions/generate-or-require-schema.json",
  "getAppInfo": "/operations/tools/deployment/deprecated/sensible/sensible-server/db/ts-functions/get-app-info.json",
  "getCachedApps": "/operations/tools/deployment/deprecated/sensible/sensible-server/db/ts-functions/get-cached-apps.json",
  "getCachedDependencies": "/operations/tools/deployment/deprecated/sensible/sensible-server/db/ts-functions/get-cached-dependencies.json",
  "getCachedEndpointSchemas": "/operations/tools/deployment/deprecated/sensible/sensible-server/db/ts-functions/get-cached-endpoint-schemas.json",
  "getCachedSchema": "/operations/tools/deployment/deprecated/sensible/sensible-server/db/ts-functions/get-cached-schema.json",
  "getDependencyObject": "/operations/tools/typescript/find-all-dependency-operations/db/ts-functions/get-dependency-object.json",
  "getLastModification": "/operations/tools/deployment/deprecated/sensible/sensible-server/db/ts-functions/get-last-modification.json",
  "getRelevantPackageInfo": "/operations/tools/deployment/deprecated/sensible/sensible-server/db/ts-functions/get-relevant-package-info.json",
  "getRepo": "/operations/tools/deployment/deprecated/sensible/sensible-server/db/ts-functions/get-repo.json",
  "makeSensibleEndpoints": "/operations/tools/deployment/deprecated/sensible/sensible-server/db/ts-functions/make-sensible-endpoints.json",
  "server": "/operations/tools/deployment/deprecated/sensible/sensible-server/db/ts-functions/server.json",
  "typeHasIncorrectInterface": "/operations/tools/deployment/deprecated/sensible/sensible-server/db/ts-functions/type-has-incorrect-interface.json",
  "fn1": "/operations/tools/interfaces/api/api/db/ts-functions/fn-1.json",
  "fn2": "/operations/tools/interfaces/api/api/db/ts-functions/fn-2.json",
  "fn3": "/operations/tools/interfaces/api/api/db/ts-functions/fn-3.json",
  "getGetApiUrl": "/operations/tools/interfaces/api/api/db/ts-functions/get-get-api-url.json",
  "untypedApiFunction": "/operations/tools/interfaces/api/api/db/ts-functions/untyped-api-function.json",
  "makeArraysGetEndpoint": "/operations/tools/interfaces/api/deprecated/endpoint-util/db/ts-functions/make-arrays-get-endpoint.json",
  "makeGetEndpoint": "/operations/tools/interfaces/api/deprecated/endpoint-util/db/ts-functions/make-get-endpoint.json",
  "getTsFunction": "/operations/tools/interfaces/api/function-server-endpoints/db/ts-functions/get-ts-function.json",
  "executeFunction": "/operations/tools/interfaces/api/function-server/db/ts-functions/execute-function.json",
  "runFunctionServer": "/operations/tools/interfaces/api/function-server/db/ts-functions/run-function-server.json",
  "calculateDeviceName": "/operations/tools/interfaces/api/function-server-endpoints/db/ts-functions/calculate-device-name.json",
  "cleanupTimer": "/operations/tools/interfaces/api/function-server-endpoints/db/ts-functions/cleanup-timer.json",
  "executeFunctionWithParameters": "/operations/tools/interfaces/api/function-server-endpoints/db/ts-functions/execute-function-with-parameters.json",
  "getHasAuthorization": "/operations/tools/interfaces/api/function-server-endpoints/db/ts-functions/get-has-authorization.json",
  "getNewPerformance": "/operations/tools/interfaces/api/function-server-endpoints/db/ts-functions/get-new-performance.json",
  "storeFunctionExecution": "/operations/tools/interfaces/api/function-server-endpoints/db/ts-functions/store-function-execution.json",
  "upsertDevice": "/operations/tools/interfaces/api/function-server-endpoints/db/ts-functions/upsert-device.json",
  "addAuthenticationMethod": "/operations/tools/interfaces/api/server-login/db/ts-functions/add-authentication-method.json",
  "addDeviceAuthenticatedMethod": "/operations/tools/interfaces/api/server-login/db/ts-functions/add-device-authenticated-method.json",
  "addDeviceAuthenticationMethodConfirm": "/operations/tools/interfaces/api/server-login/db/ts-functions/add-device-authentication-method-confirm.json",
  "addPersonAuthenticationMethod": "/operations/tools/interfaces/api/server-login/db/ts-functions/add-person-authentication-method.json",
  "comparePassword": "/operations/tools/interfaces/api/server-login/db/ts-functions/compare-password.json",
  "encryptPassword": "/operations/tools/types/os-types/db/ts-functions/encrypt-password.json",
  "isPhoneNumber": "/operations/tools/interfaces/api/server-login/db/ts-functions/is-phone-number.json",
  "isValidPassword": "/operations/tools/interfaces/api/server-login/db/ts-functions/is-valid-password.json",
  "login": "/operations/tools/interfaces/api/server-login/db/ts-functions/login.json",
  "logoutPostApi": "/operations/tools/interfaces/api/server-login/db/ts-functions/logout-post-api.json",
  "removeDeviceAuthenticationMethod": "/operations/tools/interfaces/api/server-login/db/ts-functions/remove-device-authentication-method.json",
  "removePersonAuthenticationMethod": "/operations/tools/interfaces/api/server-login/db/ts-functions/remove-person-authentication-method.json",
  "signup": "/operations/tools/interfaces/api/server-login/db/ts-functions/signup.json",
  "remindMeIn": "/operations/tools/interfaces/auditory-ui/remind-me-in/db/ts-functions/remind-me-in.json",
  "sayDutch": "/operations/tools/interfaces/auditory-ui/say/db/ts-functions/say-dutch.json",
  "sayLanguage": "/operations/tools/interfaces/auditory-ui/say/db/ts-functions/say-language.json",
  "sayNepali": "/operations/tools/interfaces/auditory-ui/say/db/ts-functions/say-nepali.json",
  "say": "/operations/tools/interfaces/auditory-ui/say/db/ts-functions/say.json",
  "askOk": "/operations/tools/interfaces/cli/ask/db/ts-functions/ask-ok.json",
  "ask": "/operations/tools/interfaces/cli/ask/db/ts-functions/ask.json",
  "getArgumentOrAsk": "/operations/tools/interfaces/cli/ask/db/ts-functions/get-argument-or-ask.json",
  "cliVersionUpdates": "/operations/tools/interfaces/cli/cli-version-updates/db/ts-functions/cli-version-updates.json",
  "getPackageVersions": "/operations/tools/interfaces/cli/cli-version-updates/db/ts-functions/get-package-versions.json",
  "getUpdateSeverity": "/operations/tools/interfaces/cli/cli-version-updates/db/ts-functions/get-update-severity.json",
  "getVersionParts": "/operations/tools/interfaces/cli/cli-version-updates/db/ts-functions/get-version-parts.json",
  "handleVersionUpdates": "/operations/tools/interfaces/cli/cli-version-updates/db/ts-functions/handle-version-updates.json",
  "chat": "/operations/tools/interfaces/cli/function-util/db/ts-functions/chat.json",
  "converse": "/operations/tools/interfaces/cli/function-util/db/ts-functions/converse.json",
  "doCli": "/operations/tools/interfaces/cli/function-util/db/ts-functions/do-cli.json",
  "executeSdkFunction": "/operations/tools/interfaces/cli/function-util/db/ts-functions/execute-sdk-function.json",
  "getCachedExportedFunctions": "/operations/tools/interfaces/cli/function-util/db/ts-functions/get-cached-exported-functions.json",
  "getMenu": "/operations/tools/interfaces/cli/function-util/db/ts-functions/get-menu.json",
  "getParametersAndExecute": "/operations/tools/interfaces/cli/function-util/db/ts-functions/get-parameters-and-execute.json",
  "getParameters": "/operations/tools/interfaces/cli/function-util/db/ts-functions/get-parameters.json",
  "getSdkFunctionPaths": "/operations/tools/interfaces/cli/function-util/db/ts-functions/get-sdk-function-paths.json",
  "getSdkKeys": "/operations/tools/interfaces/cli/function-util/db/ts-functions/get-sdk-keys.json",
  "listen": "/operations/tools/interfaces/cli/function-util/db/ts-functions/listen.json",
  "objectStringToJson": "/operations/tools/interfaces/cli/string-to-json/db/ts-functions/object-string-to-json.json",
  "parseIfJson": "/operations/tools/interfaces/cli/string-to-json/db/ts-functions/parse-if-json.json",
  "parsePrimitiveJson": "/operations/tools/interfaces/cli/string-to-json/db/ts-functions/parse-primitive-json.json",
  "stringToJson": "/operations/tools/interfaces/cli/string-to-json/db/ts-functions/string-to-json.json",
  "App": "/operations/tools/interfaces/vui/react-with-native/example/rwn-expo/db/ts-functions/app.json",
  "ALink": "/operations/niches/passionfruit/packages/passionfruit-ui/db/ts-functions/alink.json",
  "CodeLink": "/operations/tools/interfaces/vui/react-with-native/example/rwn-ui/db/ts-functions/code-link.json",
  "getCodeLocation": "/operations/tools/interfaces/vui/react-with-native/example/rwn-ui/db/ts-functions/get-code-location.json",
  "isEmail": "/operations/tools/types/model-types/db/ts-functions/is-email.json",
  "Menu": "/operations/tools/interfaces/vui/react-with-native/example/rwn-ui/db/ts-functions/menu.json",
  "A": "/operations/tools/interfaces/vui/react-with-native/react-with-native/db/ts-functions/a.json",
  "ActivityIndicator": "/operations/tools/interfaces/vui/react-with-native/react-with-native/db/ts-functions/activity-indicator.json",
  "Aside": "/operations/tools/interfaces/vui/react-with-native/react-with-native/db/ts-functions/aside.json",
  "Button": "/operations/tools/interfaces/vui/react-with-native/react-with-native/db/ts-functions/button.json",
  "getTailwindModules": "/operations/tools/interfaces/vui/react-with-native/react-with-native/db/ts-functions/get-tailwind-modules.json",
  "H2": "/operations/tools/interfaces/vui/react-with-native/react-with-native/db/ts-functions/h2.json",
  "I": "/operations/tools/interfaces/vui/react-with-native/react-with-native/db/ts-functions/i.json",
  "Image": "/operations/tools/interfaces/vui/react-with-native/react-with-native/db/ts-functions/image.json",
  "Input": "/operations/tools/interfaces/vui/react-with-native/react-with-native-form/db/ts-functions/input.json",
  "joinClassNames": "/operations/tools/interfaces/vui/react-with-native/react-with-native/db/ts-functions/join-class-names.json",
  "Label": "/operations/tools/interfaces/vui/react-with-native/react-with-native/db/ts-functions/label.json",
  "Li": "/operations/tools/interfaces/vui/react-with-native/react-with-native/db/ts-functions/li.json",
  "Nav": "/operations/tools/interfaces/vui/react-with-native/react-with-native/db/ts-functions/nav.json",
  "Ol": "/operations/tools/interfaces/vui/react-with-native/react-with-native/db/ts-functions/ol.json",
  "P": "/operations/tools/interfaces/vui/react-with-native/react-with-native/db/ts-functions/p.json",
  "Pressable": "/operations/tools/interfaces/vui/react-with-native/react-with-native/db/ts-functions/pressable.json",
  "PureAside": "/operations/tools/interfaces/vui/react-with-native/react-with-native/db/ts-functions/pure-aside.json",
  "PureDiv": "/operations/tools/interfaces/vui/react-with-native/react-with-native/db/ts-functions/pure-div.json",
  "PureNav": "/operations/tools/interfaces/vui/react-with-native/react-with-native/db/ts-functions/pure-nav.json",
  "Select": "/operations/tools/interfaces/vui/react-with-native/react-with-native-select/db/ts-functions/select.json",
  "Span": "/operations/tools/interfaces/vui/react-with-native/react-with-native/db/ts-functions/span.json",
  "Strong": "/operations/tools/interfaces/vui/react-with-native/react-with-native/db/ts-functions/strong.json",
  "Svg": "/operations/tools/interfaces/vui/react-with-native/react-with-native/db/ts-functions/svg.json",
  "TextArea": "/operations/tools/interfaces/vui/react-with-native/react-with-native/db/ts-functions/text-area.json",
  "Text": "/operations/tools/interfaces/vui/react-with-native/react-with-native/db/ts-functions/text.json",
  "Toggle": "/operations/tools/interfaces/vui/react-with-native/react-with-native/db/ts-functions/toggle.json",
  "TouchableOpacity": "/operations/tools/interfaces/vui/react-with-native/react-with-native/db/ts-functions/touchable-opacity.json",
  "trimClassName": "/operations/tools/interfaces/vui/react-with-native/react-with-native/db/ts-functions/trim-class-name.json",
  "Ul": "/operations/tools/interfaces/vui/react-with-native/react-with-native/db/ts-functions/ul.json",
  "wrapInTextIfNeeded": "/operations/tools/interfaces/vui/react-with-native/react-with-native/db/ts-functions/wrap-in-text-if-needed.json",
  "AlertProvider": "/operations/tools/interfaces/vui/react-with-native/react-with-native-alert/db/ts-functions/alert-provider.json",
  "useAlert": "/operations/tools/interfaces/vui/react-with-native/react-with-native-alert/db/ts-functions/use-alert.json",
  "DataForm": "/operations/tools/interfaces/vui/react-with-native/react-with-native-form/db/ts-functions/data-form.json",
  "DefaultInputContainer": "/operations/tools/interfaces/vui/react-with-native/react-with-native-form/db/ts-functions/default-input-container.json",
  "DefaultTitle": "/operations/tools/interfaces/vui/react-with-native/react-with-native-form/db/ts-functions/default-title.json",
  "errorOnField": "/operations/tools/interfaces/vui/react-with-native/react-with-native-form/db/ts-functions/error-on-field.json",
  "getPlugin": "/operations/tools/interfaces/vui/react-with-native/react-with-native-form/db/ts-functions/get-plugin.json",
  "isObject": "/operations/tools/interfaces/vui/react-with-native/react-with-native-form/db/ts-functions/is-object.json",
  "makeInputField": "/operations/tools/interfaces/vui/react-with-native/react-with-native-form/db/ts-functions/make-input-field.json",
  "notEmpty": "/operations/tools/util/js-util/db/ts-functions/not-empty.json",
  "sameFieldArray": "/operations/tools/interfaces/vui/react-with-native/react-with-native-form/db/ts-functions/same-field-array.json",
  "setConfig": "/operations/tools/interfaces/vui/react-with-native/react-with-native-form/db/ts-functions/set-config.json",
  "castToNumber": "/operations/tools/interfaces/vui/react-with-native/react-with-native-form-inputs/db/ts-functions/cast-to-number.json",
  "DateInput": "/operations/tools/interfaces/vui/react-with-native/react-with-native-form-inputs/db/ts-functions/date-input.json",
  "DatetimeInput": "/operations/tools/interfaces/vui/react-with-native/react-with-native-form-inputs/db/ts-functions/datetime-input.json",
  "isNumber": "/operations/tools/interfaces/vui/react-with-native/react-with-native-form-inputs/db/ts-functions/is-number.json",
  "LabelsInput": "/operations/tools/interfaces/vui/react-with-native/react-with-native-form-inputs/db/ts-functions/labels-input.json",
  "MapInput": "/operations/tools/interfaces/vui/react-with-native/react-with-native-form-inputs/db/ts-functions/map-input.json",
  "NumberInput": "/operations/tools/interfaces/vui/react-with-native/react-with-native-form-inputs/db/ts-functions/number-input.json",
  "PasswordInput": "/operations/tools/interfaces/vui/react-with-native/react-with-native-form-inputs/db/ts-functions/password-input.json",
  "PhoneInput": "/operations/tools/interfaces/vui/react-with-native/react-with-native-form-inputs/db/ts-functions/phone-input.json",
  "SelectInput": "/operations/tools/interfaces/vui/react-with-native/react-with-native-form-inputs/db/ts-functions/select-input.json",
  "SelectMultipleInput": "/operations/tools/interfaces/vui/react-with-native/react-with-native-form-inputs/db/ts-functions/select-multiple-input.json",
  "StarsInput": "/operations/tools/interfaces/vui/react-with-native/react-with-native-form-inputs/db/ts-functions/stars-input.json",
  "TextAreaInput": "/operations/tools/interfaces/vui/react-with-native/react-with-native-form-inputs/db/ts-functions/text-area-input.json",
  "TextInput": "/operations/tools/interfaces/vui/react-with-native/react-with-native-form-inputs/db/ts-functions/text-input.json",
  "TimeInput": "/operations/tools/interfaces/vui/react-with-native/react-with-native-form-inputs/db/ts-functions/time-input.json",
  "ToggleInput": "/operations/tools/interfaces/vui/react-with-native/react-with-native-form-inputs/db/ts-functions/toggle-input.json",
  "ModalProvider": "/operations/tools/interfaces/vui/react-with-native/react-with-native-modal/db/ts-functions/modal-provider.json",
  "Modal": "/operations/tools/interfaces/vui/react-with-native/react-with-native-modal/db/ts-functions/modal.json",
  "useModalState": "/operations/tools/interfaces/vui/react-with-native/react-with-native-modal/db/ts-functions/use-modal-state.json",
  "useModal": "/operations/tools/interfaces/vui/react-with-native/react-with-native-modal/db/ts-functions/use-modal.json",
  "ToastContainer": "/operations/tools/interfaces/vui/react-with-native/react-with-native-notification/db/ts-functions/toast-container.json",
  "toast": "/operations/tools/interfaces/vui/react-with-native/react-with-native-notification/db/ts-functions/toast.json",
  "useNavigation": "/operations/tools/interfaces/vui/react-with-native/react-with-native-router/db/ts-functions/use-navigation.json",
  "useRouter": "/operations/tools/interfaces/vui/react-with-native/react-with-native-router/db/ts-functions/use-router.json",
  "getRealValue": "/operations/tools/interfaces/vui/react-with-native/react-with-native-select/db/ts-functions/get-real-value.json",
  "getColumns": "/operations/tools/interfaces/vui/react-with-native/react-with-native-table/db/ts-functions/get-columns.json",
  "renderColumn": "/operations/tools/interfaces/vui/react-with-native/react-with-native-table/db/ts-functions/render-column.json",
  "Skeleton": "/operations/tools/interfaces/vui/react-with-native/react-with-native-table/db/ts-functions/skeleton.json",
  "TableHeadItem": "/operations/tools/interfaces/vui/react-with-native/react-with-native-table/db/ts-functions/table-head-item.json",
  "TableRow": "/operations/tools/interfaces/vui/react-with-native/react-with-native-table/db/ts-functions/table-row.json",
  "Table": "/operations/tools/interfaces/vui/react-with-native/react-with-native-table/db/ts-functions/table.json",
  "useIsInViewport": "/operations/tools/interfaces/vui/react-with-native/react-with-native-table/db/ts-functions/use-is-in-viewport.json",
  "ArrayForm": "/operations/tools/interfaces/vui/simplified-schema-form/db/ts-functions/array-form.json",
  "FormContainer": "/operations/tools/interfaces/vui/simplified-schema-form/db/ts-functions/form-container.json",
  "getReferencedModelDataItem": "/operations/tools/interfaces/vui/simplified-schema-form/db/ts-functions/get-referenced-model-data-item.json",
  "ObjectForm": "/operations/tools/interfaces/vui/simplified-schema-form/db/ts-functions/object-form.json",
  "ReferenceInput": "/operations/tools/interfaces/vui/simplified-schema-form/db/ts-functions/reference-input.json",
  "renderParameterTitle": "/operations/tools/interfaces/vui/simplified-schema-form/db/ts-functions/render-parameter-title.json",
  "SimplifiedSchemaForm": "/operations/tools/interfaces/vui/simplified-schema-form/db/ts-functions/simplified-schema-form.json",
  "useReferencableModelData": "/operations/tools/interfaces/vui/simplified-schema-form/db/ts-functions/use-referencable-model-data.json",
  "BigButton": "/operations/tools/interfaces/vui/vui-elements/big-button/db/ts-functions/big-button.json",
  "ClickableIcon": "/operations/tools/interfaces/vui/vui-elements/clickable-icon/db/ts-functions/clickable-icon.json",
  "FancyLoader": "/operations/tools/interfaces/vui/vui-elements/fancy-loader/db/ts-functions/fancy-loader.json",
  "LabeledButton": "/operations/tools/interfaces/vui/vui-elements/labeled-button/db/ts-functions/labeled-button.json",
  "checkAuthToken": "/operations/tools/interfaces/vui/vui-elements/login-form/db/ts-functions/check-auth-token.json",
  "LoginForm": "/operations/tools/interfaces/vui/vui-elements/login-form/db/ts-functions/login-form.json",
  "LoginWrapper": "/operations/tools/interfaces/vui/vui-elements/login-form/db/ts-functions/login-wrapper.json",
  "logoutFrontend": "/operations/tools/interfaces/vui/vui-elements/login-form/db/ts-functions/logout-frontend.json",
  "getRealSrc": "/operations/tools/interfaces/vui/vui-elements/markdown/db/ts-functions/get-real-src.json",
  "getUrlFromRelativeUrl": "/operations/tools/interfaces/vui/vui-elements/markdown/db/ts-functions/get-url-from-relative-url.json",
  "getYoutubeId": "/operations/tools/interfaces/vui/vui-elements/markdown/db/ts-functions/get-youtube-id.json",
  "MarkdownCodeblock": "/operations/tools/interfaces/vui/vui-elements/markdown/db/ts-functions/markdown-codeblock.json",
  "renderFrontmatter": "/operations/tools/interfaces/vui/vui-elements/markdown/db/ts-functions/render-frontmatter.json",
  "renderMarkdownChunk": "/operations/tools/interfaces/vui/vui-elements/markdown/db/ts-functions/render-markdown-chunk.json",
  "renderMarkdownContent": "/operations/tools/interfaces/vui/vui-elements/markdown/db/ts-functions/render-markdown-content.json",
  "renderMarkdownParse": "/operations/tools/interfaces/vui/vui-elements/markdown/db/ts-functions/render-markdown-parse.json",
  "renderMarkdownTitle": "/operations/tools/interfaces/vui/vui-elements/markdown/db/ts-functions/render-markdown-title.json",
  "getKeysAtPathFromNestedObject": "/operations/tools/interfaces/vui/vui-elements/nested-menu/db/ts-functions/get-keys-at-path-from-nested-object.json",
  "NestedMenuItem": "/operations/tools/interfaces/vui/vui-elements/nested-menu/db/ts-functions/nested-menu-item.json",
  "NestedMenu": "/operations/tools/interfaces/vui/vui-elements/nested-menu/db/ts-functions/nested-menu.json",
  "nestedPathObjectToNestedMenuRecursive": "/operations/tools/interfaces/vui/vui-elements/nested-menu/db/ts-functions/nested-path-object-to-nested-menu-recursive.json",
  "queryPathsArrayToNestedPathObject": "/operations/tools/interfaces/vui/vui-elements/nested-menu/db/ts-functions/query-paths-array-to-nested-path-object.json",
  "reduceQueryPathsRecursively": "/operations/tools/interfaces/vui/vui-elements/nested-menu/db/ts-functions/reduce-query-paths-recursively.json",
  "useExpanded": "/operations/tools/interfaces/vui/vui-elements/nested-menu/db/ts-functions/use-expanded.json",
  "contextKey": "/operations/tools/interfaces/vui/vui-elements/react-with-native-store/db/ts-functions/context-key.json",
  "createStoreProvider": "/operations/tools/interfaces/vui/vui-elements/react-with-native-store/db/ts-functions/create-store-provider.json",
  "createStore": "/operations/tools/interfaces/vui/vui-elements/react-with-native-store/db/ts-functions/create-store.json",
  "createUseStore": "/operations/tools/interfaces/vui/vui-elements/react-with-native-store/db/ts-functions/create-use-store.json",
  "getContext": "/operations/niches/bhagya/writer/writer-input/db/ts-functions/get-context.json",
  "getItem": "/operations/tools/interfaces/vui/vui-elements/react-with-native-store/db/ts-functions/get-item.json",
  "getKey": "/operations/tools/interfaces/vui/vui-elements/react-with-native-store/db/ts-functions/get-key.json",
  "setItem": "/operations/tools/interfaces/vui/vui-elements/react-with-native-store/db/ts-functions/set-item.json",
  "StoreContextProvider": "/operations/tools/interfaces/vui/vui-elements/react-with-native-store/db/ts-functions/store-context-provider.json",
  "Spoiler": "/operations/tools/interfaces/vui/vui-elements/spoiler/db/ts-functions/spoiler.json",
  "sayHello": "/operations/tools/interfaces/vui/vui-elements/ui-esm-template/db/ts-functions/say-hello.json",
  "createCodeblockMarkdown": "/operations/tools/interfaces/vui/vui-elements/ui-util/db/ts-functions/create-codeblock-markdown.json",
  "useCustomUrlStore": "/operations/tools/interfaces/vui/vui-elements/use-url-store/db/ts-functions/use-custom-url-store.json",
  "detectLanguage": "/operations/tools/language/detect-language/db/ts-functions/detect-language.json",
  "generateSimpleSentence": "/operations/tools/language/generate-simple-sentence/db/ts-functions/generate-simple-sentence.json",
  "makeAudioCourse": "/operations/tools/language/generate-simple-sentence/db/ts-functions/make-audio-course.json",
  "pickRandomArrayItem": "/operations/tools/language/generate-simple-sentence/db/ts-functions/pick-random-array-item.json",
  "sleep": "/operations/tools/language/generate-simple-sentence/db/ts-functions/sleep.json",
  "createWordSimplificationMap": "/operations/tools/language/simplify-text/db/ts-functions/create-word-simplification-map.json",
  "findBetterWords": "/operations/tools/language/simplify-text/db/ts-functions/find-better-words.json",
  "getSynonymFrequencyDataset": "/operations/tools/language/simplify-text/db/ts-functions/get-synonym-frequency-dataset.json",
  "preprocessSynonyms": "/operations/tools/language/simplify-text/db/ts-functions/preprocess-synonyms.json",
  "preprocessWordFrequencies": "/operations/tools/language/simplify-text/db/ts-functions/preprocess-word-frequencies.json",
  "simplifyText": "/operations/tools/language/simplify-text/db/ts-functions/simplify-text.json",
  "testSimplifiedText": "/operations/tools/language/simplify-text/db/ts-functions/test-simplified-text.json",
  "speakWordsToLearn": "/operations/tools/language/speak-words-to-learn/db/ts-functions/speak-words-to-learn.json",
  "getAugmentedWordObject": "/operations/tools/markdown-reader/augmented-words/db/ts-functions/get-augmented-word-object.json",
  "getAugmentedWords": "/operations/tools/markdown-reader/augmented-words/db/ts-functions/get-augmented-words.json",
  "getBundleAugmentedWords": "/operations/tools/markdown-reader/augmented-words/db/ts-functions/get-bundle-augmented-words.json",
  "copyStaticAssetsCli": "/operations/tools/markdown-reader/markdown-reader-functions/db/ts-functions/copy-static-assets-cli.json",
  "copyStaticAssets": "/operations/tools/markdown-reader/markdown-reader-functions/db/ts-functions/copy-static-assets.json",
  "getAllMarkdownReaderPages": "/operations/tools/markdown-reader/markdown-reader-functions/db/ts-functions/get-all-markdown-reader-pages.json",
  "getFolderExplorationInfo": "/operations/tools/markdown-reader/markdown-reader-functions/db/ts-functions/get-folder-exploration-info.json",
  "getMarkdownModelPages": "/operations/tools/markdown-reader/markdown-reader-functions/db/ts-functions/get-markdown-model-pages.json",
  "getMarkdownPageInfo": "/operations/tools/markdown-reader/markdown-reader-functions/db/ts-functions/get-markdown-page-info.json",
  "getMarkdownReaderPages": "/operations/tools/markdown-reader/markdown-reader-functions/db/ts-functions/get-markdown-reader-pages.json",
  "getMarkdownReaderQueryPaths": "/operations/tools/markdown-reader/markdown-reader-functions/db/ts-functions/get-markdown-reader-query-paths.json",
  "getOperationPages": "/operations/tools/markdown-reader/markdown-reader-functions/db/ts-functions/get-operation-pages.json",
  "getPublicMarkdownFilePaths": "/operations/tools/markdown-reader/markdown-reader-functions/db/ts-functions/get-public-markdown-file-paths.json",
  "getTodoPages": "/operations/tools/markdown-reader/markdown-reader-functions/db/ts-functions/get-todo-pages.json",
  "markdownReaderGetStaticPaths": "/operations/tools/markdown-reader/markdown-reader-functions/db/ts-functions/markdown-reader-get-static-paths.json",
  "markdownReaderGetStaticProps": "/operations/tools/markdown-reader/markdown-reader-functions/db/ts-functions/markdown-reader-get-static-props.json",
  "removeExtensionsFromPath": "/operations/tools/markdown-reader/markdown-reader-functions/db/ts-functions/remove-extensions-from-path.json",
  "removeNumberPrefix": "/operations/tools/markdown-reader/markdown-reader-functions/db/ts-functions/remove-number-prefix.json",
  "shouldExposeMarkdownFile": "/operations/tools/markdown-reader/markdown-reader-functions/db/ts-functions/should-expose-markdown-file.json",
  "getQueryPath": "/operations/niches/code-from-anywhere/bootcamp-operations/himalayajeep/himalayajeep-ui/db/ts-functions/get-query-path.json",
  "AugmentedWordComponent": "/operations/tools/markdown-reader/markdown-reader-ui/db/ts-functions/augmented-word-component.json",
  "Dictionary": "/operations/tools/markdown-reader/markdown-reader-ui/db/ts-functions/dictionary.json",
  "Search": "/operations/tools/markdown-reader/markdown-reader-ui/db/ts-functions/search.json",
  "sendMail": "/operations/tools/p2p/mail/db/ts-functions/send-mail.json",
  "addPeerMessage": "/operations/tools/p2p/peer-functions/db/ts-functions/add-peer-message.json",
  "addPeer": "/operations/tools/p2p/peer-functions/db/ts-functions/add-peer.json",
  "getAllAppOperations": "/operations/tools/p2p/peer-functions/db/ts-functions/get-all-app-operations.json",
  "getFirstEmoji": "/operations/tools/p2p/peer-functions/db/ts-functions/get-first-emoji.json",
  "getNestedPathObject": "/operations/tools/p2p/peer-functions/db/ts-functions/get-nested-path-object.json",
  "getPeerMessages": "/operations/tools/p2p/peer-functions/db/ts-functions/get-peer-messages.json",
  "getPeersFromPeersRecursively": "/operations/tools/p2p/peer-functions/db/ts-functions/get-peers-from-peers-recursively.json",
  "getPeers": "/operations/tools/p2p/peer-functions/db/ts-functions/get-peers.json",
  "getPublicFolderNestedPathObjectFromPeer": "/operations/tools/p2p/peer-functions/db/ts-functions/get-public-folder-nested-path-object-from-peer.json",
  "getPublicFolderNestedPathObject": "/operations/tools/p2p/peer-functions/db/ts-functions/get-public-folder-nested-path-object.json",
  "getPublicPeers": "/operations/tools/p2p/peer-functions/db/ts-functions/get-public-peers.json",
  "isPortUsed": "/operations/tools/p2p/peer-functions/db/ts-functions/is-port-used.json",
  "lateFetchPeerMessageSync": "/operations/tools/p2p/peer-functions/db/ts-functions/late-fetch-peer-message-sync.json",
  "ping": "/operations/tools/p2p/peer-functions/db/ts-functions/ping.json",
  "proactivePushAddPeerMessage": "/operations/tools/p2p/peer-functions/db/ts-functions/proactive-push-add-peer-message.json",
  "removePeer": "/operations/tools/p2p/peer-functions/db/ts-functions/remove-peer.json",
  "updatePeer": "/operations/tools/p2p/peer-functions/db/ts-functions/update-peer.json",
  "AddPeer": "/operations/tools/p2p/peer-web/db/ts-functions/add-peer.json",
  "Home": "/operations/tools/p2p/peer-web/db/ts-functions/home.json",
  "PeerChat": "/operations/tools/p2p/peer-web/db/ts-functions/peer-chat.json",
  "PeerComponent": "/operations/tools/p2p/peer-web/db/ts-functions/peer-component.json",
  "PeerMessageComponent": "/operations/tools/p2p/peer-web/db/ts-functions/peer-message-component.json",
  "Peer": "/operations/tools/p2p/peer-web/db/ts-functions/peer.json",
  "PublicMenu": "/operations/tools/p2p/peer-web/db/ts-functions/public-menu.json",
  "getPrimaryPersona": "/operations/tools/p2p/persona-functions-node/db/ts-functions/get-primary-persona.json",
  "sendSms": "/operations/tools/p2p/sms/db/ts-functions/send-sms.json",
  "mapArrayJson": "/operations/tools/parsing/edit-json-file/db/ts-functions/map-array-json.json",
  "mapObjectJson": "/operations/tools/parsing/edit-json-file/db/ts-functions/map-object-json.json",
  "unzip": "/operations/tools/parsing/file-conversion/compression/unzip/db/ts-functions/unzip.json",
  "zip": "/operations/tools/parsing/file-conversion/compression/zip/db/ts-functions/zip.json",
  "csvItemArrayToCsvString": "/operations/tools/parsing/file-conversion/csv/csv-util/db/ts-functions/csv-item-array-to-csv-string.json",
  "tryParseCsv": "/operations/tools/parsing/file-conversion/csv/csv-util/db/ts-functions/try-parse-csv.json",
  "jsonToMdString": "/operations/tools/parsing/file-conversion/json/json-to-md/db/ts-functions/json-to-md-string.json",
  "printObject": "/operations/tools/parsing/file-conversion/json/json-to-md/db/ts-functions/print-object.json",
  "jsonToSayString": "/operations/tools/parsing/file-conversion/json/json-to-say-string/db/ts-functions/json-to-say-string.json",
  "getSimpleJsonString": "/operations/tools/parsing/file-conversion/json/json-util/db/ts-functions/get-simple-json-string.json",
  "flattenMarkdownChunks": "/operations/tools/parsing/file-conversion/md/key-value-markdown-js/db/ts-functions/flatten-markdown-chunks.json",
  "getKvmdItemsRecursively": "/operations/tools/parsing/file-conversion/md/key-value-markdown-js/db/ts-functions/get-kvmd-items-recursively.json",
  "getParagraphsRecursively": "/operations/tools/parsing/file-conversion/md/key-value-markdown-js/db/ts-functions/get-paragraphs-recursively.json",
  "kvmdDataMap": "/operations/tools/parsing/file-conversion/md/key-value-markdown-js/db/ts-functions/kvmd-data-map.json",
  "kvmdDataToString": "/operations/tools/parsing/file-conversion/md/key-value-markdown-js/db/ts-functions/kvmd-data-to-string.json",
  "kvmdParseToMarkdownString": "/operations/tools/parsing/file-conversion/md/key-value-markdown-js/db/ts-functions/kvmd-parse-to-markdown-string.json",
  "markdownStringToKvmdParse": "/operations/tools/parsing/file-conversion/md/key-value-markdown-js/db/ts-functions/markdown-string-to-kvmd-parse.json",
  "parseKvmdLine": "/operations/tools/parsing/file-conversion/md/key-value-markdown-js/db/ts-functions/parse-kvmd-line.json",
  "getChunkParagraphsRecursively": "/operations/tools/parsing/file-conversion/md/markdown-parse-js/db/ts-functions/get-chunk-paragraphs-recursively.json",
  "getImplicitId": "/operations/tools/parsing/file-conversion/md/markdown-parse-js/db/ts-functions/get-implicit-id.json",
  "getMarkdownIntro": "/operations/tools/parsing/file-conversion/md/markdown-parse-js/db/ts-functions/get-markdown-intro.json",
  "getMarkdownParseParagraphs": "/operations/tools/parsing/file-conversion/md/markdown-parse-js/db/ts-functions/get-markdown-parse-paragraphs.json",
  "getMarkdownReferencePaths": "/operations/tools/parsing/file-conversion/md/markdown-parse-js/db/ts-functions/get-markdown-reference-paths.json",
  "getMarkdownReferencesFromParagraph": "/operations/tools/parsing/file-conversion/md/markdown-parse-js/db/ts-functions/get-markdown-references-from-paragraph.json",
  "markdownParseToMarkdownString": "/operations/tools/parsing/file-conversion/md/markdown-parse-js/db/ts-functions/markdown-parse-to-markdown-string.json",
  "mdContentParseRecursively": "/operations/tools/parsing/file-conversion/md/markdown-parse-js/db/ts-functions/md-content-parse-recursively.json",
  "mdToJsonParse": "/operations/tools/parsing/file-conversion/md/markdown-parse-js/db/ts-functions/md-to-json-parse.json",
  "parseFrontmatterMarkdownString": "/operations/tools/parsing/file-conversion/md/markdown-parse-js/db/ts-functions/parse-frontmatter-markdown-string.json",
  "parseMarkdownParagraph": "/operations/tools/parsing/file-conversion/md/markdown-parse-js/db/ts-functions/parse-markdown-paragraph.json",
  "parseMdToChunks": "/operations/tools/parsing/file-conversion/md/markdown-parse-js/db/ts-functions/parse-md-to-chunks.json",
  "removeHeaderPrefix": "/operations/tools/parsing/file-conversion/md/markdown-parse-js/db/ts-functions/remove-header-prefix.json",
  "addDependantCount": "/operations/tools/parsing/file-conversion/md/markdown-parsings/db/ts-functions/add-dependant-count.json",
  "bundleFolderWithMarkdown": "/operations/tools/parsing/file-conversion/md/markdown-parsings/db/ts-functions/bundle-folder-with-markdown.json",
  "bundleToBookMarkdown": "/operations/tools/parsing/file-conversion/md/markdown-parsings/db/ts-functions/bundle-to-book-markdown.json",
  "bundleToMarkdown": "/operations/tools/parsing/file-conversion/md/markdown-parsings/db/ts-functions/bundle-to-markdown.json",
  "deployToVercel": "/operations/tools/parsing/file-conversion/md/markdown-parsings/db/ts-functions/deploy-to-vercel.json",
  "emailMarkdownParse": "/operations/tools/parsing/file-conversion/md/markdown-parsings/db/ts-functions/email-markdown-parse.json",
  "generateStaticSite": "/operations/tools/parsing/file-conversion/md/markdown-parsings/db/ts-functions/generate-static-site.json",
  "getJsonSchemaSummary": "/operations/tools/parsing/file-conversion/md/markdown-parsings/db/ts-functions/get-json-schema-summary.json",
  "getMergedMarkdownOutlineUrl": "/operations/tools/parsing/file-conversion/md/markdown-parsings/db/ts-functions/get-merged-markdown-outline-url.json",
  "getTitlesRecursively": "/operations/tools/parsing/file-conversion/md/markdown-parsings/db/ts-functions/get-titles-recursively.json",
  "getTypeDescriptorRecursive": "/operations/tools/parsing/file-conversion/md/markdown-parsings/db/ts-functions/get-type-descriptor-recursive.json",
  "isUpperCase": "/operations/tools/parsing/file-conversion/md/markdown-parsings/db/ts-functions/is-upper-case.json",
  "makeOutlineMarkdownString": "/operations/tools/parsing/file-conversion/md/markdown-parsings/db/ts-functions/make-outline-markdown-string.json",
  "makePropertiesTable": "/operations/tools/parsing/file-conversion/md/markdown-parsings/db/ts-functions/make-properties-table.json",
  "markdownChunkToMarkdownStringRecursive": "/operations/tools/parsing/file-conversion/md/markdown-parsings/db/ts-functions/markdown-chunk-to-markdown-string-recursive.json",
  "markdownChunksToMarkdownStringRecursive": "/operations/tools/parsing/file-conversion/md/markdown-parsings/db/ts-functions/markdown-chunks-to-markdown-string-recursive.json",
  "markdownToSayable": "/operations/tools/parsing/file-conversion/md/markdown-parsings/db/ts-functions/markdown-to-sayable.json",
  "mdToPdf": "/operations/tools/parsing/file-conversion/md/markdown-parsings/db/ts-functions/md-to-pdf.json",
  "mergeMarkdownParse": "/operations/tools/parsing/file-conversion/md/markdown-parsings/db/ts-functions/merge-markdown-parse.json",
  "noNewlines": "/operations/tools/parsing/file-conversion/md/markdown-parsings/db/ts-functions/no-newlines.json",
  "operationRadio": "/operations/tools/parsing/file-conversion/md/markdown-parsings/db/ts-functions/operation-radio.json",
  "operationToMarkdown": "/operations/tools/parsing/file-conversion/md/markdown-parsings/db/ts-functions/operation-to-markdown.json",
  "printNestedTitles": "/operations/tools/parsing/file-conversion/md/markdown-parsings/db/ts-functions/print-nested-titles.json",
  "print": "/operations/tools/parsing/file-conversion/md/markdown-parsings/db/ts-functions/print.json",
  "projectToMarkdown": "/operations/tools/parsing/file-conversion/md/markdown-parsings/db/ts-functions/project-to-markdown.json",
  "propertyToTableRow": "/operations/tools/parsing/file-conversion/md/markdown-parsings/db/ts-functions/property-to-table-row.json",
  "sayablesToMp3": "/operations/tools/parsing/file-conversion/md/markdown-parsings/db/ts-functions/sayables-to-mp-3.json",
  "selectRandomOperation": "/operations/tools/parsing/file-conversion/md/markdown-parsings/db/ts-functions/select-random-operation.json",
  "simplifiedSchemaToMarkdownString": "/operations/tools/parsing/file-conversion/md/markdown-parsings/db/ts-functions/simplified-schema-to-markdown-string.json",
  "tsFunctionToMarkdownString": "/operations/tools/parsing/file-conversion/md/markdown-parsings/db/ts-functions/ts-function-to-markdown-string.json",
  "tsInterfaceToMarkdownString": "/operations/tools/parsing/file-conversion/md/markdown-parsings/db/ts-functions/ts-interface-to-markdown-string.json",
  "tsVariableToMarkdownString": "/operations/tools/parsing/file-conversion/md/markdown-parsings/db/ts-functions/ts-variable-to-markdown-string.json",
  "upMarkdownChunkLevelRecursively": "/operations/tools/parsing/file-conversion/md/markdown-parsings/db/ts-functions/up-markdown-chunk-level-recursively.json",
  "parsePrimitiveArray": "/operations/tools/parsing/parse-primitive/db/ts-functions/parse-primitive-array.json",
  "parsePrimitiveBoolean": "/operations/tools/parsing/parse-primitive/db/ts-functions/parse-primitive-boolean.json",
  "parsePrimitiveString": "/operations/tools/parsing/parse-primitive/db/ts-functions/parse-primitive-string.json",
  "parsePrimitive": "/operations/tools/parsing/parse-primitive/db/ts-functions/parse-primitive.json",
  "readCsvFileSync": "/operations/tools/parsing/read-files/read-csv-file/db/ts-functions/read-csv-file-sync.json",
  "readCsvFile": "/operations/tools/parsing/read-files/read-csv-file/db/ts-functions/read-csv-file.json",
  "readJsonFileSync": "/operations/tools/parsing/read-files/read-json-file/db/ts-functions/read-json-file-sync.json",
  "readJsonFile": "/operations/tools/parsing/read-files/read-json-file/db/ts-functions/read-json-file.json",
  "readKvmdFile": "/operations/tools/parsing/read-files/read-kvmd-file/db/ts-functions/read-kvmd-file.json",
  "test2": "/operations/tools/typescript/find-all-dependency-operations/db/ts-functions/test-2.json",
  "readMarkdownFileToModel": "/operations/tools/parsing/read-files/read-markdown-file/db/ts-functions/read-markdown-file-to-model.json",
  "readMarkdownFile": "/operations/tools/parsing/read-files/read-markdown-file/db/ts-functions/read-markdown-file.json",
  "getFolderTypescriptIndex": "/operations/tools/parsing/read-files/read-typescript-file/db/ts-functions/get-folder-typescript-index.json",
  "getOperationIndexModel": "/operations/tools/parsing/read-files/read-typescript-file/db/ts-functions/get-operation-index-model.json",
  "readTypescriptFile": "/operations/tools/parsing/read-files/read-typescript-file/db/ts-functions/read-typescript-file.json",
  "uniqueNames": "/operations/tools/parsing/read-files/read-typescript-file/db/ts-functions/unique-names.json",
  "tryParseJson": "/operations/tools/parsing/read-files/try-parse-json/db/ts-functions/try-parse-json.json",
  "bodyFromQueryString": "/operations/tools/parsing/rest-util/db/ts-functions/body-from-query-string.json",
  "getFirstQueryStrings": "/operations/tools/parsing/rest-util/db/ts-functions/get-first-query-strings.json",
  "getQueryPart": "/operations/tools/parsing/rest-util/db/ts-functions/get-query-part.json",
  "isValidEntry": "/operations/niches/guilherme/linkedin-controller/db/ts-functions/is-valid-entry.json",
  "toQueryString": "/operations/niches/guilherme/linkedin-controller/db/ts-functions/to-query-string.json",
  "findSentenceMatches": "/operations/tools/parsing/search/db/ts-functions/find-sentence-matches.json",
  "magicalRecursiveReducer": "/operations/tools/parsing/search/db/ts-functions/magical-recursive-reducer.json",
  "searchRecursiveObjectArray": "/operations/tools/parsing/search/db/ts-functions/search-recursive-object-array.json",
  "getLocation": "/operations/tools/sensation/orientation/get-location/db/ts-functions/get-location.json",
  "getLight": "/operations/tools/sensation/sight/get-light/db/ts-functions/get-light.json",
  "getPostableFrontmatterSchema": "/operations/tools/social-media/social-media-functions/db/ts-functions/get-postable-frontmatter-schema.json",
  "findPostableToPost": "/operations/tools/social-media/social-media-types/db/ts-functions/find-postable-to-post.json",
  "updatePostedStatistics": "/operations/tools/social-media/social-media-types/db/ts-functions/update-posted-statistics.json",
  "getMenuInfo": "/operations/tools/writer/writer-ui/db/ts-functions/get-menu-info.json",
  "useMenu": "/operations/tools/writer/writer-ui/db/ts-functions/use-menu.json",
  "WriterMenu": "/operations/tools/writer/writer-ui/db/ts-functions/writer-menu.json",
  "getExamples": "/operations/tools/types/code-types/db/ts-functions/get-examples.json",
  "getFunctionExersize": "/operations/tools/types/code-types/db/ts-functions/get-function-exersize.json",
  "markdownParseToMarkdownModelType": "/operations/tools/types/code-types/db/ts-functions/markdown-parse-to-markdown-model-type.json",
  "parseMarkdownModelTimestamp": "/operations/tools/types/code-types/db/ts-functions/parse-markdown-model-timestamp.json",
  "tryParseDate": "/operations/tools/types/code-types/db/ts-functions/try-parse-date.json",
  "createInvoiceContactMarkdown": "/operations/tools/types/invoice-types/db/ts-functions/create-invoice-contact-markdown.json",
  "createInvoiceMarkdown": "/operations/tools/types/invoice-types/db/ts-functions/create-invoice-markdown.json",
  "createKeyValueMarkdown": "/operations/tools/types/invoice-types/db/ts-functions/create-key-value-markdown.json",
  "money": "/operations/tools/types/invoice-types/db/ts-functions/money.json",
  "newInvoice": "/operations/tools/types/invoice-types/db/ts-functions/new-invoice.json",
  "parseDate": "/operations/tools/types/invoice-types/db/ts-functions/parse-date.json",
  "printDate": "/operations/tools/types/invoice-types/db/ts-functions/print-date.json",
  "frontmatterParseToString": "/operations/tools/types/matter-types/db/ts-functions/frontmatter-parse-to-string.json",
  "getFrontmatterValueString": "/operations/tools/types/matter-types/db/ts-functions/get-frontmatter-value-string.json",
  "quotedOrNot": "/operations/tools/types/matter-types/db/ts-functions/quoted-or-not.json",
  "stringifyNewlines": "/operations/tools/types/matter-types/db/ts-functions/stringify-newlines.json",
  "generateId": "/operations/tools/types/model-types/db/ts-functions/generate-id.json",
  "generatePassword": "/operations/tools/types/model-types/db/ts-functions/generate-password.json",
  "generateRandomString": "/operations/tools/types/model-types/db/ts-functions/generate-random-string.json",
  "generateTime": "/operations/tools/types/model-types/db/ts-functions/generate-time.json",
  "markdownModelTypeToMarkdownString": "/operations/tools/types/model-types/db/ts-functions/markdown-model-type-to-markdown-string.json",
  "createUser": "/operations/tools/types/os-types/db/ts-functions/create-user.json",
  "getBacktickContents": "/operations/tools/types/os-types/db/ts-functions/get-backtick-contents.json",
  "isInPeriod": "/operations/tools/types/os-types/db/ts-functions/is-in-period.json",
  "isOutOfStock": "/operations/tools/types/os-types/db/ts-functions/is-out-of-stock.json",
  "kvmdToCredential": "/operations/tools/types/os-types/db/ts-functions/kvmd-to-credential.json",
  "upcomingOutgoingFlights": "/operations/tools/types/os-types/db/ts-functions/upcoming-outgoing-flights.json",
  "whereShouldIgo": "/operations/tools/types/os-types/db/ts-functions/where-should-igo.json",
  "cleanupTsDatabase": "/operations/tools/typescript/cleanup-typescript-database/db/ts-functions/cleanup-ts-database.json",
  "shouldDeleteTsModel": "/operations/tools/typescript/cleanup-typescript-database/db/ts-functions/should-delete-ts-model.json",
  "stripCommentEnd": "/operations/tools/typescript/comment-util/db/ts-functions/strip-comment-end.json",
  "stripCommentStart": "/operations/tools/typescript/comment-util/db/ts-functions/strip-comment-start.json",
  "stripComment": "/operations/tools/typescript/comment-util/db/ts-functions/strip-comment.json",
  "stripSlashes": "/operations/tools/typescript/comment-util/db/ts-functions/strip-slashes.json",
  "stripStar": "/operations/tools/typescript/comment-util/db/ts-functions/strip-star.json",
  "trimSurroundingNewlines": "/operations/tools/typescript/comment-util/db/ts-functions/trim-surrounding-newlines.json",
  "trim": "/operations/tools/typescript/comment-util/db/ts-functions/trim.json",
  "getCompileErrors": "/operations/tools/typescript/compile-typescript/db/ts-functions/get-compile-errors.json",
  "getTypescriptErrorsFromFiles": "/operations/tools/typescript/compile-typescript/db/ts-functions/get-typescript-errors-from-files.json",
  "writeBuildErrors": "/operations/tools/typescript/compile-typescript/db/ts-functions/write-build-errors.json",
  "findAllDependencyOperations": "/operations/tools/typescript/find-all-dependency-operations/db/ts-functions/find-all-dependency-operations.json",
  "findDependantsRecursivelyTest": "/operations/tools/typescript/find-all-dependency-operations/db/ts-functions/find-dependants-recursively-test.json",
  "findDependantsRecursively": "/operations/tools/typescript/find-all-dependency-operations/db/ts-functions/find-dependants-recursively.json",
  "findDependants": "/operations/tools/typescript/find-all-dependency-operations/db/ts-functions/find-dependants.json",
  "findDependenciesRecursively": "/operations/tools/typescript/find-all-dependency-operations/db/ts-functions/find-dependencies-recursively.json",
  "findMonorepoModules": "/operations/tools/typescript/find-all-dependency-operations/db/ts-functions/find-monorepo-modules.json",
  "getDependencyTree": "/operations/tools/typescript/find-all-dependency-operations/db/ts-functions/get-dependency-tree.json",
  "generateNamedIndex": "/operations/tools/typescript/generate-index/db/ts-functions/generate-named-index.json",
  "generateSimpleIndex": "/operations/tools/typescript/generate-index/db/ts-functions/generate-simple-index.json",
  "isTestFn": "/operations/tools/typescript/generate-index/db/ts-functions/is-test-fn.json",
  "mapToImportStatement": "/operations/tools/typescript/generate-index/db/ts-functions/map-to-import-statement.json",
  "generateDbSdkCli": "/operations/tools/typescript/generate-sdk-operations/db/ts-functions/generate-db-sdk-cli.json",
  "generateDbSdk": "/operations/tools/typescript/generate-sdk-operations/db/ts-functions/generate-db-sdk.json",
  "generateEnvSdksCli": "/operations/tools/typescript/generate-sdk-operations/db/ts-functions/generate-env-sdks-cli.json",
  "generateEnvSdks": "/operations/tools/typescript/generate-sdk-operations/db/ts-functions/generate-env-sdks.json",
  "generateFunctionPathsSdk": "/operations/tools/typescript/generate-sdk-operations/db/ts-functions/generate-function-paths-sdk.json",
  "generateFunctionSdksCli": "/operations/tools/typescript/generate-sdk-operations/db/ts-functions/generate-function-sdks-cli.json",
  "generateFunctionSdks": "/operations/tools/typescript/generate-sdk-operations/db/ts-functions/generate-function-sdks.json",
  "generateOperationsSdkCli": "/operations/tools/typescript/generate-sdk-operations/db/ts-functions/generate-operations-sdk-cli.json",
  "generateOperationsSdk": "/operations/tools/typescript/generate-sdk-operations/db/ts-functions/generate-operations-sdk.json",
  "generateSdkOperationsCli": "/operations/tools/typescript/generate-sdk-operations/db/ts-functions/generate-sdk-operations-cli.json",
  "generateSdkOperations": "/operations/tools/typescript/generate-sdk-operations/db/ts-functions/generate-sdk-operations.json",
  "getSdkDescription": "/operations/tools/typescript/generate-sdk-operations/db/ts-functions/get-sdk-description.json",
  "getSdkFunctions": "/operations/tools/typescript/generate-sdk-operations/db/ts-functions/get-sdk-functions.json",
  "isTsFunctionIndexable": "/operations/tools/typescript/generate-sdk-operations/db/ts-functions/is-ts-function-indexable.json",
  "newEnvSdk": "/operations/tools/typescript/generate-sdk-operations/db/ts-functions/new-env-sdk.json",
  "newSdkKeysOperation": "/operations/tools/typescript/generate-sdk-operations/db/ts-functions/new-sdk-keys-operation.json",
  "newSdkOperation": "/operations/tools/typescript/generate-sdk-operations/db/ts-functions/new-sdk-operation.json",
  "tsFunctionIsSdkable": "/operations/tools/typescript/generate-sdk-operations/db/ts-functions/ts-function-is-sdkable.json",
  "getImportedDependencies": "/operations/tools/typescript/get-imported-dependencies/db/ts-functions/get-imported-dependencies.json",
  "getPackage": "/operations/tools/typescript/get-imported-dependencies/db/ts-functions/get-package.json",
  "isAbsoluteImport": "/operations/tools/typescript/get-imports-exports/db/ts-functions/is-absolute-import.json",
  "calculatePackageJsonDependencies": "/operations/tools/typescript/get-imports-exports/db/ts-functions/calculate-package-json-dependencies.json",
  "findAndWriteImportsExports": "/operations/tools/typescript/get-imports-exports/db/ts-functions/find-and-write-imports-exports.json",
  "getDefaultSymbolType": "/operations/tools/typescript/get-imports-exports/db/ts-functions/get-default-symbol-type.json",
  "getExportSpecifierNames": "/operations/tools/typescript/get-imports-exports/db/ts-functions/get-export-specifier-names.json",
  "getExportSymbolTypeRecursive": "/operations/tools/typescript/get-imports-exports/db/ts-functions/get-export-symbol-type-recursive.json",
  "getImportSpecifiersWithNames": "/operations/tools/typescript/get-imports-exports/db/ts-functions/get-import-specifiers-with-names.json",
  "getImportsExportsTest": "/operations/tools/typescript/get-imports-exports/db/ts-functions/get-imports-exports-test.json",
  "getImportsExports": "/operations/tools/typescript/get-imports-exports/db/ts-functions/get-imports-exports.json",
  "getPackageNameFromAbsoluteImport": "/operations/tools/typescript/get-imports-exports/db/ts-functions/get-package-name-from-absolute-import.json",
  "getSymbolDeclarationsOfKind": "/operations/tools/typescript/get-imports-exports/db/ts-functions/get-symbol-declarations-of-kind.json",
  "getSymbolTypeDeclarations": "/operations/tools/typescript/get-imports-exports/db/ts-functions/get-symbol-type-declarations.json",
  "getTypeFromImportSpecifierRecursive": "/operations/tools/typescript/get-imports-exports/db/ts-functions/get-type-from-import-specifier-recursive.json",
  "isAbsoluteImportBuiltin": "/operations/tools/typescript/get-imports-exports/db/ts-functions/is-absolute-import-builtin.json",
  "isImportFromOptionalFile": "/operations/tools/typescript/get-imports-exports/db/ts-functions/is-import-from-optional-file.json",
  "writeResult": "/operations/tools/typescript/get-imports-exports/db/ts-functions/write-result.json",
  "getMissingDependencies": "/operations/tools/typescript/get-missing-dependencies/db/ts-functions/get-missing-dependencies.json",
  "cli": "/operations/tools/typescript/index-typescript/db/ts-functions/cli.json",
  "findAndUpsertTsInterfaces": "/operations/tools/typescript/index-typescript/db/ts-functions/find-and-upsert-ts-interfaces.json",
  "findCommentTypes": "/operations/tools/typescript/index-typescript/db/ts-functions/find-comment-types.json",
  "generateSchema": "/operations/tools/typescript/index-typescript/db/ts-functions/generate-schema.json",
  "getAllComments": "/operations/tools/typescript/index-typescript/db/ts-functions/get-all-comments.json",
  "getDbStorageMethod": "/operations/tools/typescript/index-typescript/db/ts-functions/get-db-storage-method.json",
  "getFrontmatterDbStorageMethod": "/operations/tools/typescript/index-typescript/db/ts-functions/get-frontmatter-db-storage-method.json",
  "getFrontmatterFunctionParameters": "/operations/tools/typescript/index-typescript/db/ts-functions/get-frontmatter-function-parameters.json",
  "getIndexId": "/operations/tools/typescript/index-typescript/db/ts-functions/get-index-id.json",
  "getMaxIndentationDepth": "/operations/tools/typescript/index-typescript/db/ts-functions/get-max-indentation-depth.json",
  "getMinMaxValidation": "/operations/tools/typescript/index-typescript/db/ts-functions/get-min-max-validation.json",
  "getNumberOfLines": "/operations/tools/typescript/index-typescript/db/ts-functions/get-number-of-lines.json",
  "getObjectSchema": "/operations/tools/typescript/index-typescript/db/ts-functions/get-object-schema.json",
  "getParamSchema": "/operations/tools/typescript/index-typescript/db/ts-functions/get-param-schema.json",
  "getParametersFromInterfaces": "/operations/tools/typescript/index-typescript/db/ts-functions/get-parameters-from-interfaces.json",
  "getPossibleRefs": "/operations/tools/typescript/index-typescript/db/ts-functions/get-possible-refs.json",
  "getSpecialExtensionDbStorageMethod": "/operations/tools/typescript/index-typescript/db/ts-functions/get-special-extension-db-storage-method.json",
  "getTsStatements": "/operations/tools/typescript/index-typescript/db/ts-functions/get-ts-statements.json",
  "getTypeInfo": "/operations/tools/typescript/index-typescript/db/ts-functions/get-type-info.json",
  "getValidatedOperationPathParse": "/operations/tools/typescript/index-typescript/db/ts-functions/get-validated-operation-path-parse.json",
  "handleExplicitValidation": "/operations/tools/typescript/index-typescript/db/ts-functions/handle-explicit-validation.json",
  "hasDefinition": "/operations/tools/typescript/index-typescript/db/ts-functions/has-definition.json",
  "indexTypescriptFile": "/operations/tools/typescript/index-typescript/db/ts-functions/index-typescript-file.json",
  "indexTypescript": "/operations/tools/typescript/index-typescript/db/ts-functions/index-typescript.json",
  "isPrimitive": "/operations/tools/typescript/index-typescript/db/ts-functions/is-primitive.json",
  "makeTsComment": "/operations/tools/typescript/index-typescript/db/ts-functions/make-ts-comment.json",
  "schemaToTsInterface": "/operations/tools/typescript/index-typescript/db/ts-functions/schema-to-ts-interface.json",
  "toSnack": "/operations/tools/typescript/index-typescript/db/ts-functions/to-snack.json",
  "tryCreateSchema": "/operations/tools/typescript/index-typescript/db/ts-functions/try-create-schema.json",
  "typeToSchema": "/operations/tools/typescript/index-typescript/db/ts-functions/type-to-schema.json",
  "preIndexLint": "/operations/tools/typescript/lint/db/ts-functions/pre-index-lint.json",
  "minifyBuild": "/operations/tools/typescript/minify-build/db/ts-functions/minify-build.json",
  "getAvailableOperationName": "/operations/tools/typescript/new-template/db/ts-functions/get-available-operation-name.json",
  "getOperationConfig": "/operations/tools/typescript/new-template/db/ts-functions/get-operation-config.json",
  "newOperationCli": "/operations/tools/typescript/new-template/db/ts-functions/new-operation-cli.json",
  "newOperationWithFiles": "/operations/tools/typescript/new-template/db/ts-functions/new-operation-with-files.json",
  "newOperation": "/operations/tools/typescript/new-template/db/ts-functions/new-operation.json",
  "newTemplateCli": "/operations/tools/typescript/new-template/db/ts-functions/new-template-cli.json",
  "newTemplate": "/operations/tools/typescript/new-template/db/ts-functions/new-template.json",
  "buildPackage": "/operations/tools/typescript/package-scripts/db/ts-functions/build-package.json",
  "installMissingMonorepoDependencies": "/operations/tools/typescript/package-scripts/db/ts-functions/install-missing-monorepo-dependencies.json",
  "obfucsate": "/operations/tools/typescript/package-scripts/db/ts-functions/obfucsate.json",
  "testPackage": "/operations/tools/typescript/package-scripts/db/ts-functions/test-package.json",
  "prettierOperation": "/operations/tools/typescript/prettier-operation/db/ts-functions/prettier-operation.json",
  "clearTsDatabase": "/operations/tools/typescript/rebuild-operation/db/ts-functions/clear-ts-database.json",
  "executeCommandQuietUnlessFail": "/operations/tools/typescript/rebuild-operation/db/ts-functions/execute-command-quiet-unless-fail.json",
  "exitIfProcessDependenciesChanged": "/operations/tools/typescript/rebuild-operation/db/ts-functions/exit-if-process-dependencies-changed.json",
  "generateJsonSchemas": "/operations/tools/typescript/rebuild-operation/db/ts-functions/generate-json-schemas.json",
  "getAllDbModels": "/operations/tools/typescript/rebuild-operation/db/ts-functions/get-all-db-models.json",
  "getFileIds": "/operations/tools/typescript/rebuild-operation/db/ts-functions/get-file-ids.json",
  "getIndexFileIds": "/operations/tools/typescript/rebuild-operation/db/ts-functions/get-index-file-ids.json",
  "getSrcIds": "/operations/tools/typescript/rebuild-operation/db/ts-functions/get-src-ids.json",
  "isOperationBuildNeeded": "/operations/tools/typescript/rebuild-operation/db/ts-functions/is-operation-build-needed.json",
  "isSdkOperation": "/operations/tools/typescript/rebuild-operation/db/ts-functions/is-sdk-operation.json",
  "rebuildAllOperations": "/operations/tools/typescript/rebuild-operation/db/ts-functions/rebuild-all-operations.json",
  "rebuildOperation": "/operations/tools/typescript/rebuild-operation/db/ts-functions/rebuild-operation.json",
  "shouldSkip": "/operations/tools/typescript/rebuild-operation/db/ts-functions/should-skip.json",
  "yarnBuild": "/operations/tools/typescript/rebuild-operation/db/ts-functions/yarn-build.json",
  "renameOperation": "/operations/tools/typescript/rename-operation/db/ts-functions/rename-operation.json",
  "findFirstCommentTypes": "/operations/tools/typescript/schema-util/db/ts-functions/find-first-comment-types.json",
  "getPossibleReferenceParameterNames": "/operations/tools/typescript/schema-util/db/ts-functions/get-possible-reference-parameter-names.json",
  "getProperties": "/operations/tools/typescript/schema-util/db/ts-functions/get-properties.json",
  "getReferencableModels": "/operations/tools/typescript/schema-util/db/ts-functions/get-referencable-models.json",
  "getReferenceParameterInfo": "/operations/tools/typescript/schema-util/db/ts-functions/get-reference-parameter-info.json",
  "simplifiedSchemaToTypeDefinitionString": "/operations/tools/typescript/schema-util/db/ts-functions/simplified-schema-to-type-definition-string.json",
  "simplifySchema": "/operations/tools/typescript/schema-util/db/ts-functions/simplify-schema.json",
  "runTestsForOperation": "/operations/tools/typescript/testing/k-test/db/ts-functions/run-tests-for-operation.json",
  "runTests": "/operations/tools/typescript/testing/k-test/db/ts-functions/run-tests.json",
  "sum": "/operations/tools/util/js-util/db/ts-functions/sum.json",
  "isResultOfInterface": "/operations/tools/typescript/testing/make-test/db/ts-functions/is-result-of-interface.json",
  "makeTest": "/operations/tools/typescript/testing/make-test/db/ts-functions/make-test.json",
  "getAllTsMorphSourceFiles": "/operations/tools/typescript/ts-morph-util/db/ts-functions/get-all-ts-morph-source-files.json",
  "getHasGeneric": "/operations/tools/typescript/ts-morph-util/db/ts-functions/get-has-generic.json",
  "getTsMorphProject": "/operations/tools/typescript/ts-morph-util/db/ts-functions/get-ts-morph-project.json",
  "exitIfOperationsChange": "/operations/tools/typescript/watch-operations/db/ts-functions/exit-if-operations-change.json",
  "gitCommitAllCron": "/operations/tools/typescript/watch-operations/db/ts-functions/git-commit-all-cron.json",
  "watchOperations": "/operations/tools/typescript/watch-operations/db/ts-functions/watch-operations.json",
  "execAsync": "/operations/tools/util/child-process-helper/db/ts-functions/exec-async.json",
  "spawnAsync": "/operations/tools/util/child-process-helper/db/ts-functions/spawn-async.json",
  "camelCase": "/operations/tools/util/convert-case/db/ts-functions/camel-case.json",
  "capitalCase": "/operations/tools/util/convert-case/db/ts-functions/capital-case.json",
  "capitaliseFirstLetter": "/operations/tools/util/convert-case/db/ts-functions/capitalise-first-letter.json",
  "convertCase": "/operations/tools/util/convert-case/db/ts-functions/convert-case.json",
  "convertToTargetCasing": "/operations/tools/util/convert-case/db/ts-functions/convert-to-target-casing.json",
  "getDelimiter": "/operations/tools/util/convert-case/db/ts-functions/get-delimiter.json",
  "humanCase": "/operations/tools/util/convert-case/db/ts-functions/human-case.json",
  "kebabCase": "/operations/tools/util/convert-case/db/ts-functions/kebab-case.json",
  "lowerCaseArray": "/operations/tools/util/convert-case/db/ts-functions/lower-case-array.json",
  "pascalCase": "/operations/tools/util/convert-case/db/ts-functions/pascal-case.json",
  "snakeCase": "/operations/tools/util/convert-case/db/ts-functions/snake-case.json",
  "splitCasingDelimiters": "/operations/tools/util/convert-case/db/ts-functions/split-casing-delimiters.json",
  "getDbPath": "/operations/tools/util/geo-parse/db/ts-functions/get-db-path.json",
  "makeKvmdLocationsFile": "/operations/tools/util/geo-parse/db/ts-functions/make-kvmd-locations-file.json",
  "parseCountries": "/operations/tools/util/geo-parse/db/ts-functions/parse-countries.json",
  "parseToMarkdown": "/operations/tools/util/geo-parse/db/ts-functions/parse-to-markdown.json",
  "parse": "/operations/niches/sprent/parse-address-henrik/db/ts-functions/parse.json",
  "rawPolygonToPolygon": "/operations/tools/util/geo-parse/db/ts-functions/raw-polygon-to-polygon.json",
  "fetchWithTimeout": "/operations/tools/util/is-online/db/ts-functions/fetch-with-timeout.json",
  "isOnline": "/operations/tools/util/is-online/db/ts-functions/is-online.json",
  "apply": "/operations/tools/util/js-util/db/ts-functions/apply.json",
  "arrayGenerator": "/operations/tools/util/js-util/db/ts-functions/array-generator.json",
  "concatenate": "/operations/tools/util/js-util/db/ts-functions/concatenate.json",
  "createEnum": "/operations/tools/util/js-util/db/ts-functions/create-enum.json",
  "createMappedObject": "/operations/tools/util/js-util/db/ts-functions/create-mapped-object.json",
  "findLastIndex": "/operations/tools/util/js-util/db/ts-functions/find-last-index.json",
  "getObjectFromParamsString": "/operations/tools/util/js-util/db/ts-functions/get-object-from-params-string.json",
  "getObjectKeysArray": "/operations/tools/util/js-util/db/ts-functions/get-object-keys-array.json",
  "getParameterAtLocation": "/operations/tools/util/js-util/db/ts-functions/get-parameter-at-location.json",
  "getSubsetFromObject": "/operations/tools/util/js-util/db/ts-functions/get-subset-from-object.json",
  "groupByKey": "/operations/tools/util/js-util/db/ts-functions/group-by-key.json",
  "insertAt": "/operations/tools/util/js-util/db/ts-functions/insert-at.json",
  "isAllTrue": "/operations/tools/util/js-util/db/ts-functions/is-all-true.json",
  "makeArray": "/operations/tools/util/js-util/db/ts-functions/make-array.json",
  "mapAsync": "/operations/tools/util/js-util/db/ts-functions/map-async.json",
  "mapItem": "/operations/tools/util/js-util/db/ts-functions/map-item.json",
  "mapKeys": "/operations/tools/util/js-util/db/ts-functions/map-keys.json",
  "mapMany": "/operations/tools/util/js-util/db/ts-functions/map-many.json",
  "mapValuesSync": "/operations/tools/util/js-util/db/ts-functions/map-values-sync.json",
  "mergeObjectParameters": "/operations/tools/util/js-util/db/ts-functions/merge-object-parameters.json",
  "mergeObjectsArray": "/operations/tools/util/js-util/db/ts-functions/merge-objects-array.json",
  "mergeObjects": "/operations/tools/util/js-util/db/ts-functions/merge-objects.json",
  "objectMapAsync": "/operations/tools/util/js-util/db/ts-functions/object-map-async.json",
  "objectMapSync": "/operations/tools/util/js-util/db/ts-functions/object-map-sync.json",
  "objectValuesMap": "/operations/tools/util/js-util/db/ts-functions/object-values-map.json",
  "omitUndefinedValues": "/operations/tools/util/js-util/db/ts-functions/omit-undefined-values.json",
  "onlyUnique2": "/operations/tools/util/js-util/db/ts-functions/only-unique-2.json",
  "onlyUnique": "/operations/tools/util/js-util/db/ts-functions/only-unique.json",
  "removeIndexFromArray": "/operations/tools/util/js-util/db/ts-functions/remove-index-from-array.json",
  "replaceLastOccurence": "/operations/tools/util/js-util/db/ts-functions/replace-last-occurence.json",
  "reverseString": "/operations/tools/util/js-util/db/ts-functions/reverse-string.json",
  "sumAllKeys": "/operations/tools/util/js-util/db/ts-functions/sum-all-keys.json",
  "sumObjectParameters": "/operations/tools/util/js-util/db/ts-functions/sum-object-parameters.json",
  "takeFirst": "/operations/tools/util/js-util/db/ts-functions/take-first.json",
  "trimSlashes": "/operations/tools/util/js-util/db/ts-functions/trim-slashes.json",
  "worker": "/operations/tools/util/js-util/db/ts-functions/worker.json",
  "devCli": "/operations/tools/util/k-dev/db/ts-functions/dev-cli.json",
  "dev": "/operations/tools/util/k-dev/db/ts-functions/dev.json",
  "getCallerFileName": "/operations/tools/util/log/db/ts-functions/get-caller-file-name.json",
  "parseTitle": "/operations/tools/util/log/db/ts-functions/parse-title.json",
  "nodemon": "/operations/tools/util/nodemon/db/ts-functions/nodemon.json",
  "oneByOne": "/operations/tools/util/one-by-one/db/ts-functions/one-by-one.json",
  "isPlural": "/operations/tools/util/pluralize/db/ts-functions/is-plural.json",
  "isSingular": "/operations/tools/util/pluralize/db/ts-functions/is-singular.json",
  "pluralize": "/operations/tools/util/pluralize/db/ts-functions/pluralize.json",
  "singularize": "/operations/tools/util/pluralize/db/ts-functions/singularize.json",
  "runChildProcess": "/operations/tools/util/run-child-process/db/ts-functions/run-child-process.json",
  "loginToDevto": "/operations/niches/bhagya/controllers/dev-to-controller/db/ts-functions/login-to-devto.json",
  "publishBlogOnDevTo": "/operations/niches/bhagya/controllers/dev-to-controller/db/ts-functions/publish-blog-on-dev-to.json",
  "typeIntoTheField": "/operations/niches/bhagya/controllers/dev-to-controller/db/ts-functions/type-into-the-field.json",
  "clickOnSpanTag": "/operations/niches/bhagya/controllers/dt-utils/db/ts-functions/click-on-span-tag.json",
  "facebookLogin": "/operations/niches/bhagya/controllers/dt-utils/db/ts-functions/facebook-login.json",
  "foundOrNotXpath": "/operations/niches/bhagya/controllers/dt-utils/db/ts-functions/found-or-not-xpath.json",
  "foundOrNot": "/operations/niches/bhagya/controllers/dt-utils/db/ts-functions/found-or-not.json",
  "getChromeExecutablePath": "/operations/niches/bhagya/controllers/dt-utils/db/ts-functions/get-chrome-executable-path.json",
  "gmailLogin": "/operations/niches/bhagya/controllers/dt-utils/db/ts-functions/gmail-login.json",
  "logConsoleIfDebug": "/operations/niches/bhagya/controllers/dt-utils/db/ts-functions/log-console-if-debug.json",
  "retryClickAndWaitSelector": "/operations/niches/bhagya/controllers/dt-utils/db/ts-functions/retry-click-and-wait-selector.json",
  "retryWaitSelector": "/operations/niches/bhagya/controllers/dt-utils/db/ts-functions/retry-wait-selector.json",
  "setInnerHtml": "/operations/niches/bhagya/controllers/dt-utils/db/ts-functions/set-inner-html.json",
  "setInputValue": "/operations/niches/bhagya/controllers/dt-utils/db/ts-functions/set-input-value.json",
  "trueClick": "/operations/niches/bhagya/controllers/dt-utils/db/ts-functions/true-click.json",
  "twitterLogin": "/operations/niches/bhagya/controllers/dt-utils/db/ts-functions/twitter-login.json",
  "typeInTheInputField": "/operations/niches/bhagya/controllers/dt-utils/db/ts-functions/type-in-the-input-field.json",
  "typeOnTheTargetWithXpathSelector": "/operations/niches/bhagya/controllers/dt-utils/db/ts-functions/type-on-the-target-with-xpath-selector.json",
  "waitMilliseconds": "/operations/niches/guilherme/linkedin-controller/db/ts-functions/wait-milliseconds.json",
  "facebookPostOnTheGroup": "/operations/niches/bhagya/controllers/facebook-controller/db/ts-functions/facebook-post-on-the-group.json",
  "facebookPost": "/operations/niches/bhagya/controllers/facebook-controller/db/ts-functions/facebook-post.json",
  "facebookTimeLinePost": "/operations/niches/bhagya/controllers/facebook-controller/db/ts-functions/facebook-time-line-post.json",
  "getLatestFacebookPostUrl": "/operations/niches/bhagya/controllers/facebook-controller/db/ts-functions/get-latest-facebook-post-url.json",
  "sendFacebookMessage": "/operations/niches/bhagya/controllers/facebook-controller/db/ts-functions/send-facebook-message.json",
  "searchAndDownloadGifs": "/operations/niches/bhagya/controllers/gif-controller/db/ts-functions/search-and-download-gifs.json",
  "buildQuery": "/operations/niches/bhagya/controllers/google-translate-controller/db/ts-functions/build-query.json",
  "errArrayLenZero": "/operations/niches/bhagya/controllers/google-translate-controller/db/ts-functions/err-array-len-zero.json",
  "errFileSize": "/operations/niches/bhagya/controllers/google-translate-controller/db/ts-functions/err-file-size.json",
  "errFileType": "/operations/niches/bhagya/controllers/google-translate-controller/db/ts-functions/err-file-type.json",
  "errInvalidType": "/operations/niches/bhagya/controllers/google-translate-controller/db/ts-functions/err-invalid-type.json",
  "errTextLenZero": "/operations/niches/bhagya/controllers/google-translate-controller/db/ts-functions/err-text-len-zero.json",
  "errTextOverflow": "/operations/niches/bhagya/controllers/google-translate-controller/db/ts-functions/err-text-overflow.json",
  "generateArrayFromJson": "/operations/niches/bhagya/controllers/google-translate-controller/db/ts-functions/generate-array-from-json.json",
  "getStringForTranslation": "/operations/niches/bhagya/controllers/google-translate-controller/db/ts-functions/get-string-for-translation.json",
  "launch": "/operations/niches/bhagya/controllers/google-translate-controller/db/ts-functions/launch.json",
  "startTranslation": "/operations/niches/bhagya/markdown-translator/db/ts-functions/start-translation.json",
  "storeResult": "/operations/niches/bhagya/controllers/google-translate-controller/db/ts-functions/store-result.json",
  "translateText": "/operations/niches/bhagya/controllers/google-translate-controller/db/ts-functions/translate-text.json",
  "publishBlogOnMedium": "/operations/niches/bhagya/controllers/medium-controller/db/ts-functions/publish-blog-on-medium.json",
  "publishBlogOnReddit": "/operations/niches/bhagya/controllers/reddit-controller/db/ts-functions/publish-blog-on-reddit.json",
  "checkAndGetFileUrl": "/operations/niches/bhagya/controllers/slack-controller/db/ts-functions/check-and-get-file-url.json",
  "elementExists": "/operations/niches/bhagya/controllers/slack-controller/db/ts-functions/element-exists.json",
  "getAllMessages": "/operations/niches/bhagya/controllers/slack-controller/db/ts-functions/get-all-messages.json",
  "getLatestMessages": "/operations/niches/bhagya/controllers/slack-controller/db/ts-functions/get-latest-messages.json",
  "getSlackChannels": "/operations/niches/bhagya/controllers/slack-controller/db/ts-functions/get-slack-channels.json",
  "getSlackMessageFrom": "/operations/niches/bhagya/controllers/slack-controller/db/ts-functions/get-slack-message-from.json",
  "getSlackWorkspaces": "/operations/niches/bhagya/controllers/slack-controller/db/ts-functions/get-slack-workspaces.json",
  "scrapeMessage": "/operations/niches/bhagya/controllers/slack-controller/db/ts-functions/scrape-message.json",
  "scrollToTop": "/operations/niches/bhagya/controllers/slack-controller/db/ts-functions/scroll-to-top.json",
  "selectChannel": "/operations/niches/bhagya/controllers/slack-controller/db/ts-functions/select-channel.json",
  "selectWorkSpace": "/operations/niches/bhagya/controllers/slack-controller/db/ts-functions/select-work-space.json",
  "sendSlackMessage": "/operations/niches/bhagya/controllers/slack-controller/db/ts-functions/send-slack-message.json",
  "slackLogin": "/operations/niches/bhagya/controllers/slack-controller/db/ts-functions/slack-login.json",
  "addSocialMediaCredential": "/operations/niches/bhagya/controllers/social-media-controller/db/ts-functions/add-social-media-credential.json",
  "canBePosted": "/operations/niches/bhagya/controllers/social-media-controller/db/ts-functions/can-be-posted.json",
  "createAllSocialMediaPost": "/operations/niches/bhagya/controllers/social-media-controller/db/ts-functions/create-all-social-media-post.json",
  "createSocialMediaPost": "/operations/niches/bhagya/controllers/social-media-controller/db/ts-functions/create-social-media-post.json",
  "devtoCotentAnalyzer": "/operations/niches/bhagya/controllers/social-media-controller/db/ts-functions/devto-cotent-analyzer.json",
  "facebookContentAnalyzer": "/operations/niches/bhagya/controllers/social-media-controller/db/ts-functions/facebook-content-analyzer.json",
  "getSocialMediaCredentials": "/operations/niches/bhagya/controllers/social-media-controller/db/ts-functions/get-social-media-credentials.json",
  "mediumCotentAnalyzer": "/operations/niches/bhagya/controllers/social-media-controller/db/ts-functions/medium-cotent-analyzer.json",
  "postSocialMediaPostToDevto": "/operations/niches/bhagya/controllers/social-media-controller/db/ts-functions/post-social-media-post-to-devto.json",
  "postSocialMediaPostToFacebook": "/operations/niches/bhagya/controllers/social-media-controller/db/ts-functions/post-social-media-post-to-facebook.json",
  "postSocialMediaPostToMedium": "/operations/niches/bhagya/controllers/social-media-controller/db/ts-functions/post-social-media-post-to-medium.json",
  "postSocialMediaPostToReddit": "/operations/niches/bhagya/controllers/social-media-controller/db/ts-functions/post-social-media-post-to-reddit.json",
  "postSocialMediaPostToTwitter": "/operations/niches/bhagya/controllers/social-media-controller/db/ts-functions/post-social-media-post-to-twitter.json",
  "redditContentAnalyzer": "/operations/niches/bhagya/controllers/social-media-controller/db/ts-functions/reddit-content-analyzer.json",
  "socialMediaPostPlanner": "/operations/niches/bhagya/controllers/social-media-controller/db/ts-functions/social-media-post-planner.json",
  "startSocialMediaController": "/operations/niches/bhagya/controllers/social-media-controller/db/ts-functions/start-social-media-controller.json",
  "twitterContentAnalyzer": "/operations/niches/bhagya/controllers/social-media-controller/db/ts-functions/twitter-content-analyzer.json",
  "updateSocialMediaPost": "/operations/niches/bhagya/controllers/social-media-controller/db/ts-functions/update-social-media-post.json",
  "getTwitterPostUrl": "/operations/niches/bhagya/controllers/twitter-controller/db/ts-functions/get-twitter-post-url.json",
  "postTweetOnTwitter": "/operations/niches/bhagya/controllers/twitter-controller/db/ts-functions/post-tweet-on-twitter.json",
  "youtubeSearchAndDownload": "/operations/niches/bhagya/controllers/youtube-controller/db/ts-functions/youtube-search-and-download.json",
  "youtubeSearch": "/operations/niches/bhagya/controllers/youtube-controller/db/ts-functions/youtube-search.json",
  "youtubeToMp3": "/operations/niches/bhagya/controllers/youtube-controller/db/ts-functions/youtube-to-mp-3.json",
  "youtubeToMp4": "/operations/niches/bhagya/controllers/youtube-controller/db/ts-functions/youtube-to-mp-4.json",
  "createFolder": "/operations/niches/bhagya/markdown-translator/db/ts-functions/create-folder.json",
  "getAllMarkdownFiles": "/operations/niches/bhagya/markdown-translator/db/ts-functions/get-all-markdown-files.json",
  "getFileInfo": "/operations/niches/bhagya/markdown-translator/db/ts-functions/get-file-info.json",
  "getTranslatedWord": "/operations/niches/bhagya/markdown-translator/db/ts-functions/get-translated-word.json",
  "markdownStoreAndRecord": "/operations/niches/bhagya/markdown-translator/db/ts-functions/markdown-store-and-record.json",
  "parseMarkdownWordByWord": "/operations/niches/bhagya/markdown-translator/db/ts-functions/parse-markdown-word-by-word.json",
  "recordMdFile": "/operations/niches/bhagya/markdown-translator/db/ts-functions/record-md-file.json",
  "startMarkdownTranslator": "/operations/niches/bhagya/markdown-translator/db/ts-functions/start-markdown-translator.json",
  "translatedArrayToKeyValue": "/operations/niches/bhagya/markdown-translator/db/ts-functions/translated-array-to-key-value.json",
  "watchMdFile": "/operations/niches/bhagya/markdown-translator/db/ts-functions/watch-md-file.json",
  "getFileType": "/operations/niches/bhagya/writer/file-icons/db/ts-functions/get-file-type.json",
  "MatchingText": "/operations/niches/bhagya/writer/file-search/db/ts-functions/matching-text.json",
  "PathSearchResults": "/operations/niches/bhagya/writer/file-search/db/ts-functions/path-search-results.json",
  "FileTabs": "/operations/niches/bhagya/writer/file-tabs/db/ts-functions/file-tabs.json",
  "getOpenPageUrl": "/operations/niches/bhagya/writer/file-tabs/db/ts-functions/get-open-page-url.json",
  "FileWriter": "/operations/niches/bhagya/writer/file-writer/db/ts-functions/file-writer.json",
  "OpenFileWriterPages": "/operations/niches/bhagya/writer/file-writer/db/ts-functions/open-file-writer-pages.json",
  "isAltB": "/operations/niches/bhagya/writer/hotkeys/db/ts-functions/is-alt-b.json",
  "isAltN": "/operations/niches/bhagya/writer/hotkeys/db/ts-functions/is-alt-n.json",
  "isAltO": "/operations/niches/bhagya/writer/hotkeys/db/ts-functions/is-alt-o.json",
  "isAltW": "/operations/niches/bhagya/writer/hotkeys/db/ts-functions/is-alt-w.json",
  "isCtrlBacktick": "/operations/niches/bhagya/writer/hotkeys/db/ts-functions/is-ctrl-backtick.json",
  "isCtrlP": "/operations/niches/bhagya/writer/hotkeys/db/ts-functions/is-ctrl-p.json",
  "isCtrlS": "/operations/niches/bhagya/writer/hotkeys/db/ts-functions/is-ctrl-s.json",
  "isCtrlSpace": "/operations/niches/bhagya/writer/hotkeys/db/ts-functions/is-ctrl-space.json",
  "useHotkey": "/operations/niches/bhagya/writer/hotkeys/db/ts-functions/use-hotkey.json",
  "useHotkeys": "/operations/niches/bhagya/writer/hotkeys/db/ts-functions/use-hotkeys.json",
  "getFullPath": "/operations/niches/bhagya/writer/next-paths/db/ts-functions/get-full-path.json",
  "getLastPathsChunk": "/operations/niches/bhagya/writer/next-paths/db/ts-functions/get-last-paths-chunk.json",
  "usePath": "/operations/niches/bhagya/writer/next-paths/db/ts-functions/use-path.json",
  "getFileContents": "/operations/niches/bhagya/writer/writer-functions/db/ts-functions/get-file-contents.json",
  "getFrontmatterSchema": "/operations/niches/bhagya/writer/writer-functions/db/ts-functions/get-frontmatter-schema.json",
  "moveFile": "/operations/niches/bhagya/writer/writer-functions/db/ts-functions/move-file.json",
  "newFile": "/operations/niches/bhagya/writer/writer-functions/db/ts-functions/new-file.json",
  "newFolder": "/operations/niches/bhagya/writer/writer-functions/db/ts-functions/new-folder.json",
  "renameFilename": "/operations/niches/bhagya/writer/writer-functions/db/ts-functions/rename-filename.json",
  "saveFileContents": "/operations/niches/bhagya/writer/writer-functions/db/ts-functions/save-file-contents.json",
  "Completion": "/operations/niches/bhagya/writer/writer-input/db/ts-functions/completion.json",
  "ContentEditableDivInput": "/operations/niches/bhagya/writer/writer-input/db/ts-functions/content-editable-div-input.json",
  "ContextTextArea": "/operations/niches/bhagya/writer/writer-input/db/ts-functions/context-text-area.json",
  "DivContentEditable": "/operations/niches/bhagya/writer/writer-input/db/ts-functions/div-content-editable.json",
  "editSubtextSubwordConfig": "/operations/niches/bhagya/writer/writer-input/db/ts-functions/edit-subtext-subword-config.json",
  "FrontmatterForm": "/operations/niches/bhagya/writer/writer-input/db/ts-functions/frontmatter-form.json",
  "getSubtext": "/operations/niches/bhagya/writer/writer-input/db/ts-functions/get-subtext.json",
  "getTextSegments": "/operations/niches/bhagya/writer/writer-input/db/ts-functions/get-text-segments.json",
  "getWriterTypeFromContent": "/operations/niches/bhagya/writer/writer-input/db/ts-functions/get-writer-type-from-content.json",
  "isAugmentedWordMatch": "/operations/niches/bhagya/writer/writer-input/db/ts-functions/is-augmented-word-match.json",
  "isTypescript": "/operations/niches/bhagya/writer/writer-input/db/ts-functions/is-typescript.json",
  "MarkdownCompletions": "/operations/niches/bhagya/writer/writer-input/db/ts-functions/markdown-completions.json",
  "MarkdownView": "/operations/niches/bhagya/writer/writer-input/db/ts-functions/markdown-view.json",
  "MarkedParagraph": "/operations/niches/bhagya/writer/writer-input/db/ts-functions/marked-paragraph.json",
  "MarkedText": "/operations/niches/bhagya/writer/writer-input/db/ts-functions/marked-text.json",
  "MarkedToken": "/operations/niches/bhagya/writer/writer-input/db/ts-functions/marked-token.json",
  "omitSpecialCharactersFromStart": "/operations/niches/bhagya/writer/writer-input/db/ts-functions/omit-special-characters-from-start.json",
  "parseTextContentToHtmlString": "/operations/niches/bhagya/writer/writer-input/db/ts-functions/parse-text-content-to-html-string.json",
  "SmartContentEditableDivInput": "/operations/niches/bhagya/writer/writer-input/db/ts-functions/smart-content-editable-div-input.json",
  "SpannedSentence": "/operations/niches/bhagya/writer/writer-input/db/ts-functions/spanned-sentence.json",
  "SubtextContainer": "/operations/niches/bhagya/writer/writer-input/db/ts-functions/subtext-container.json",
  "Subword": "/operations/niches/bhagya/writer/writer-input/db/ts-functions/subword.json",
  "testAllContentEditableRenderComponents": "/operations/niches/bhagya/writer/writer-input/db/ts-functions/test-all-content-editable-render-components.json",
  "testContentEditableRenderComponent": "/operations/niches/bhagya/writer/writer-input/db/ts-functions/test-content-editable-render-component.json",
  "TitleContainer": "/operations/niches/bhagya/writer/writer-input/db/ts-functions/title-container.json",
  "trimAround": "/operations/niches/bhagya/writer/writer-input/db/ts-functions/trim-around.json",
  "trimLeft": "/operations/niches/bhagya/writer/writer-input/db/ts-functions/trim-left.json",
  "TypescriptCompletions": "/operations/niches/bhagya/writer/writer-input/db/ts-functions/typescript-completions.json",
  "WriterConfigForm": "/operations/niches/bhagya/writer/writer-input/db/ts-functions/writer-config-form.json",
  "WriterInput": "/operations/niches/bhagya/writer/writer-input/db/ts-functions/writer-input.json",
  "alterArrayTest": "/operations/niches/code-from-anywhere/bootcamp-operations/course-basics/db/ts-functions/alter-array-test.json",
  "alterObjectTest": "/operations/niches/code-from-anywhere/bootcamp-operations/course-basics/db/ts-functions/alter-object-test.json",
  "divideNumber": "/operations/niches/code-from-anywhere/bootcamp-operations/course-basics/db/ts-functions/divide-number.json",
  "divideNumbers": "/operations/niches/code-from-anywhere/bootcamp-operations/course-basics/db/ts-functions/divide-numbers.json",
  "doubleNumber": "/operations/niches/code-from-anywhere/bootcamp-operations/course-basics/db/ts-functions/double-number.json",
  "doubleNumbers": "/operations/niches/code-from-anywhere/bootcamp-operations/course-basics/db/ts-functions/double-numbers.json",
  "getHighNumbers": "/operations/niches/code-from-anywhere/bootcamp-operations/course-basics/db/ts-functions/get-high-numbers.json",
  "makeExercises": "/operations/niches/code-from-anywhere/bootcamp-operations/course-basics/db/ts-functions/make-exercises.json",
  "sumNumbers": "/operations/niches/code-from-anywhere/bootcamp-operations/course-basics/db/ts-functions/sum-numbers.json",
  "writeExercises": "/operations/niches/code-from-anywhere/bootcamp-operations/course-basics/db/ts-functions/write-exercises.json",
  "driverLogin": "/operations/niches/code-from-anywhere/bootcamp-operations/himalayajeep/himalayajeep-functions/db/ts-functions/driver-login.json",
  "driverSignup": "/operations/niches/code-from-anywhere/bootcamp-operations/himalayajeep/himalayajeep-functions/db/ts-functions/driver-signup.json",
  "getMyJeep": "/operations/niches/code-from-anywhere/bootcamp-operations/himalayajeep/himalayajeep-functions/db/ts-functions/get-my-jeep.json",
  "getPublicJeeps": "/operations/niches/code-from-anywhere/bootcamp-operations/himalayajeep/himalayajeep-functions/db/ts-functions/get-public-jeeps.json",
  "EditProfile": "/operations/niches/code-from-anywhere/bootcamp-operations/himalayajeep/himalayajeep-ui/db/ts-functions/edit-profile.json",
  "JeepList": "/operations/niches/code-from-anywhere/bootcamp-operations/himalayajeep/himalayajeep-ui/db/ts-functions/jeep-list.json",
  "JeepLogin": "/operations/niches/code-from-anywhere/bootcamp-operations/himalayajeep/himalayajeep-ui/db/ts-functions/jeep-login.json",
  "JeepSignupPage": "/operations/niches/code-from-anywhere/bootcamp-operations/himalayajeep/himalayajeep-ui/db/ts-functions/jeep-signup-page.json",
  "JeepView": "/operations/niches/code-from-anywhere/bootcamp-operations/himalayajeep/himalayajeep-ui/db/ts-functions/jeep-view.json",
  "getRandomFood": "/operations/niches/code-from-anywhere/bootcamp-operations/human/db/ts-functions/get-random-food.json",
  "needsToEat": "/operations/niches/code-from-anywhere/bootcamp-operations/human/db/ts-functions/needs-to-eat.json",
  "sayFood": "/operations/niches/code-from-anywhere/bootcamp-operations/human/db/ts-functions/say-food.json",
  "suyogRap": "/operations/niches/code-from-anywhere/bootcamp-operations/human/db/ts-functions/suyog-rap.json",
  "createPost": "/operations/niches/guilherme/linkedin-controller/db/ts-functions/create-post.json",
  "getCaptchaResponse": "/operations/niches/guilherme/linkedin-controller/db/ts-functions/get-captcha-response.json",
  "linkedinPost": "/operations/niches/guilherme/linkedin-controller/db/ts-functions/linkedin-post.json",
  "loginLinkedin": "/operations/niches/guilherme/linkedin-controller/db/ts-functions/login-linkedin.json",
  "scrapeConnections": "/operations/niches/guilherme/linkedin-controller/db/ts-functions/scrape-connections.json",
  "sendMessageLinkedin": "/operations/niches/guilherme/linkedin-controller/db/ts-functions/send-message-linkedin.json",
  "signUpLinkedin": "/operations/niches/guilherme/linkedin-controller/db/ts-functions/sign-up-linkedin.json",
  "solveCaptcha": "/operations/niches/guilherme/linkedin-controller/db/ts-functions/solve-captcha.json",
  "submitChallengeAndGetResponse": "/operations/niches/guilherme/linkedin-controller/db/ts-functions/submit-challenge-and-get-response.json",
  "calculateFullCompany": "/operations/niches/passionfruit/packages/foodchain-recipes/db/ts-functions/calculate-full-company.json",
  "companyAttachContributionInformation": "/operations/niches/passionfruit/packages/foodchain-recipes/db/ts-functions/company-attach-contribution-information.json",
  "companyAttachEsgMetricProofStates": "/operations/niches/passionfruit/packages/foodchain-recipes/db/ts-functions/company-attach-esg-metric-proof-states.json",
  "companyAttachRequirements": "/operations/niches/passionfruit/packages/foodchain-recipes/db/ts-functions/company-attach-requirements.json",
  "companyAttachTransparency": "/operations/niches/passionfruit/packages/foodchain-recipes/db/ts-functions/company-attach-transparency.json",
  "concatenateItems": "/operations/niches/passionfruit/packages/foodchain-recipes/db/ts-functions/concatenate-items.json",
  "contributionAddNextContributions": "/operations/niches/passionfruit/packages/foodchain-recipes/db/ts-functions/contribution-add-next-contributions.json",
  "getActivities": "/operations/niches/passionfruit/packages/foodchain-recipes/db/ts-functions/get-activities.json",
  "getAverage": "/operations/niches/passionfruit/packages/foodchain-recipes/db/ts-functions/get-average.json",
  "getCompanies": "/operations/niches/passionfruit/packages/foodchain-recipes/db/ts-functions/get-companies.json",
  "getCompanyRequirementDescription": "/operations/niches/passionfruit/packages/foodchain-recipes/db/ts-functions/get-company-requirement-description.json",
  "getFinalProducts": "/operations/niches/passionfruit/packages/foodchain-recipes/db/ts-functions/get-final-products.json",
  "getFullCompanyData": "/operations/niches/passionfruit/packages/foodchain-recipes/db/ts-functions/get-full-company-data.json",
  "getIngredientProducts": "/operations/niches/passionfruit/packages/foodchain-recipes/db/ts-functions/get-ingredient-products.json",
  "getProductValueChainForProduct": "/operations/niches/passionfruit/packages/foodchain-recipes/db/ts-functions/get-product-value-chain-for-product.json",
  "getProductValueChain": "/operations/niches/passionfruit/packages/foodchain-recipes/db/ts-functions/get-product-value-chain.json",
  "getRequiredValueChainData": "/operations/niches/passionfruit/packages/foodchain-recipes/db/ts-functions/get-required-value-chain-data.json",
  "getSustainabilityPlan": "/operations/niches/passionfruit/packages/foodchain-recipes/db/ts-functions/get-sustainability-plan.json",
  "hasEsgMetricWithStatus": "/operations/niches/passionfruit/packages/foodchain-recipes/db/ts-functions/has-esg-metric-with-status.json",
  "requirementAppliesToCompany": "/operations/niches/passionfruit/packages/foodchain-recipes/db/ts-functions/requirement-applies-to-company.json",
  "requirementAttachProofStates": "/operations/niches/passionfruit/packages/foodchain-recipes/db/ts-functions/requirement-attach-proof-states.json",
  "sumEsgMetricProofStates": "/operations/niches/passionfruit/packages/foodchain-recipes/db/ts-functions/sum-esg-metric-proof-states.json",
  "CardRow": "/operations/niches/passionfruit/packages/passionfruit-ui/db/ts-functions/card-row.json",
  "CompanyInfoTab": "/operations/niches/passionfruit/packages/passionfruit-ui/db/ts-functions/company-info-tab.json",
  "CompanyInfo": "/operations/niches/passionfruit/packages/passionfruit-ui/db/ts-functions/company-info.json",
  "ContributionNodeComponent": "/operations/niches/passionfruit/packages/passionfruit-ui/db/ts-functions/contribution-node-component.json",
  "EnvironmentTab": "/operations/niches/passionfruit/packages/passionfruit-ui/db/ts-functions/environment-tab.json",
  "EsgPerformance": "/operations/niches/passionfruit/packages/passionfruit-ui/db/ts-functions/esg-performance.json",
  "GoalsTab": "/operations/niches/passionfruit/packages/passionfruit-ui/db/ts-functions/goals-tab.json",
  "ListHeader": "/operations/niches/passionfruit/packages/passionfruit-ui/db/ts-functions/list-header.json",
  "ListItem": "/operations/niches/passionfruit/packages/passionfruit-ui/db/ts-functions/list-item.json",
  "List": "/operations/niches/passionfruit/packages/passionfruit-ui/db/ts-functions/list.json",
  "PhaseNodeComponent": "/operations/niches/passionfruit/packages/passionfruit-ui/db/ts-functions/phase-node-component.json",
  "PriorityChip": "/operations/niches/passionfruit/packages/passionfruit-ui/db/ts-functions/priority-chip.json",
  "ProofStateForm": "/operations/niches/passionfruit/packages/passionfruit-ui/db/ts-functions/proof-state-form.json",
  "renderGetArrayNames": "/operations/niches/passionfruit/packages/passionfruit-ui/db/ts-functions/render-get-array-names.json",
  "renderGetArray": "/operations/niches/passionfruit/packages/passionfruit-ui/db/ts-functions/render-get-array.json",
  "renderGetCategoryIcons": "/operations/niches/passionfruit/packages/passionfruit-ui/db/ts-functions/render-get-category-icons.json",
  "renderGetCategoryLabel": "/operations/niches/passionfruit/packages/passionfruit-ui/db/ts-functions/render-get-category-label.json",
  "renderGetCompanyTranspTooltip": "/operations/niches/passionfruit/packages/passionfruit-ui/db/ts-functions/render-get-company-transp-tooltip.json",
  "RenderGetEnvPerformance": "/operations/niches/passionfruit/packages/passionfruit-ui/db/ts-functions/render-get-env-performance.json",
  "renderGetIconText": "/operations/niches/passionfruit/packages/passionfruit-ui/db/ts-functions/render-get-icon-text.json",
  "renderGetMainLink": "/operations/niches/passionfruit/packages/passionfruit-ui/db/ts-functions/render-get-main-link.json",
  "renderGetPriority": "/operations/niches/passionfruit/packages/passionfruit-ui/db/ts-functions/render-get-priority.json",
  "renderGetProgressBarSingle": "/operations/niches/passionfruit/packages/passionfruit-ui/db/ts-functions/render-get-progress-bar-single.json",
  "renderGetProofState": "/operations/niches/passionfruit/packages/passionfruit-ui/db/ts-functions/render-get-proof-state.json",
  "renderGetRequirement": "/operations/niches/passionfruit/packages/passionfruit-ui/db/ts-functions/render-get-requirement.json",
  "renderGetSidePanel": "/operations/niches/passionfruit/packages/passionfruit-ui/db/ts-functions/render-get-side-panel.json",
  "renderGetSumArray": "/operations/niches/passionfruit/packages/passionfruit-ui/db/ts-functions/render-get-sum-array.json",
  "renderGetSummarizedArray": "/operations/niches/passionfruit/packages/passionfruit-ui/db/ts-functions/render-get-summarized-array.json",
  "SocialTab": "/operations/niches/passionfruit/packages/passionfruit-ui/db/ts-functions/social-tab.json",
  "TabContent": "/operations/niches/passionfruit/packages/passionfruit-ui/db/ts-functions/tab-content.json",
  "TooltipGroup": "/operations/niches/passionfruit/packages/passionfruit-ui/db/ts-functions/tooltip-group.json",
  "ValueChainCard": "/operations/niches/passionfruit/packages/passionfruit-ui/db/ts-functions/value-chain-card.json",
  "charIsLetter": "/operations/niches/sprent/parse-address-henrik/db/ts-functions/char-is-letter.json",
  "createCsvString": "/operations/niches/sprent/parse-address-henrik/db/ts-functions/create-csv-string.json",
  "oldToNew": "/operations/niches/sprent/parse-address-henrik/db/ts-functions/old-to-new.json",
  "parseAddress": "/operations/niches/sprent/parse-address-henrik/db/ts-functions/parse-address.json",
  "booleanifyKeys": "/operations/niches/sprent/sprent-migrate/db/ts-functions/booleanify-keys.json",
  "booleanify": "/operations/niches/sprent/sprent-migrate/db/ts-functions/booleanify.json",
  "getThisOperationPath": "/operations/niches/sprent/sprent-migrate/db/ts-functions/get-this-operation-path.json",
  "makeJson": "/operations/niches/sprent/sprent-migrate/db/ts-functions/make-json.json",
  "mapJsonItems": "/operations/niches/sprent/sprent-migrate/db/ts-functions/map-json-items.json",
  "splitDryWash": "/operations/niches/sprent/sprent-migrate/db/ts-functions/split-dry-wash.json",
  "toCsv": "/operations/niches/sprent/sprent-migrate/db/ts-functions/to-csv.json",
  "updateData2": "/operations/niches/sprent/sprent-migrate/db/ts-functions/update-data-2.json",
  "updateData": "/operations/niches/sprent/sprent-migrate/db/ts-functions/update-data.json"
};