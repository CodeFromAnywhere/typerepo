{
  "createdAt": 1671105536935,
  "updatedAt": 1671105536935,
  "deletedAt": 0,
  "createdFirstAt": 1671105536935,
  "isApiExposed": true,
  "isExported": true,
  "groupAuthorization": {},
  "operationRelativeTypescriptFilePath": "src/getReaderPageProps.ts",
  "commentsInside": [],
  "rawText": " (\n  parameters: Frontmatter | undefined,\n  isDev: boolean\n) => {\n  // dev can always see it\n  if (isDev) {\n    return true;\n  }\n\n  // no parameters seems fine\n  if (!parameters) {\n    return true;\n  }\n\n  if (parameters.isDraft === \"true\" || parameters.isSecret === \"true\") {\n    return false;\n  }\n\n  if (\n    parameters.authorizedGroup?.trim() === \"premium\" ||\n    parameters.authorizedGroup?.trim() === \"enterprise\"\n  ) {\n    // for now we have no way to check if you're premium/enterprise\n    return false;\n  }\n\n  if (parameters.isPrivate === \"true\") {\n    //\n    return false;\n  }\n\n  return true;\n}",
  "name": "canSeeFileContent",
  "slug": "can-see-file-content",
  "parameters": [
    {
      "name": "parameters",
      "schema": {
        "$ref": "#/definitions/Frontmatter"
      },
      "simplifiedSchema": {
        "fullComment": "Our version of frontmatter is a bit simpler than regular frontmatter\n\nNot sure if this is a good idea, but it keeps it simple for our OS\n\nall values parse in a similar way to csv\n\nmake sure that you use quotes if you want to store a string with commas, because commas in a parameter indicate that it is a string array\n\nNB: string arrays are comma separated values, where you can put values with special characters in between quotes",
        "nb": "string arrays are comma separated values, where you can put values with special characters in between quotes",
        "properties": [],
        "type": "object"
      },
      "required": false
    },
    {
      "name": "isDev",
      "schema": {
        "type": "boolean"
      },
      "simplifiedSchema": {
        "type": "boolean"
      },
      "required": true
    }
  ],
  "description": "",
  "returnType": {
    "rawType": "{}",
    "typeDefinition": {
      "type": "object",
      "properties": {},
      "optional": false
    },
    "typeCoverage": 0,
    "isArray": false,
    "isEnum": false,
    "isObject": true,
    "isPrimitive": false,
    "isEnumLiteral": false,
    "simplifiedSchema": {
      "properties": [],
      "type": "object"
    }
  },
  "maxIndentationDepth": 2,
  "size": {
    "characters": 602,
    "lines": 33,
    "bytes": 602,
    "bytesPerCharacter": 1,
    "charactersPerLine": 18,
    "linesPerFile": 33,
    "numberOfFiles": 1
  },
  "id": "ujkjfdopllpcvjbapkhbqmag"
}