{
  "createdAt": 1671105545885,
  "updatedAt": 1671105545885,
  "deletedAt": 0,
  "createdFirstAt": 1671105545885,
  "classification": "const",
  "comments": [],
  "isExported": true,
  "name": "controlChatGptWrapper",
  "slug": "control-chat-gpt-wrapper",
  "operationRelativeTypescriptFilePath": "src/processChatGptPrompt.ts",
  "type": {
    "rawType": "(prompt: string, isHeadless: boolean | undefined, thread: string | undefined, controller: \"playwright\" | \"puppeteer\" | \"faker\") => Promise<import(\"/Users/king/King/operations/tools/ai/ai-types/build/ProcessPromptFunctionResult\").ProcessPromptFunctionResult>",
    "typeDefinition": {
      "type": "object",
      "properties": {},
      "optional": false
    },
    "typeCoverage": 0,
    "isArray": false,
    "isEnum": false,
    "isObject": true,
    "isPrimitive": false,
    "isEnumLiteral": false,
    "simplifiedSchema": {
      "properties": [],
      "type": "object"
    }
  },
  "value": "async (\n  prompt: string,\n  isHeadless: boolean | undefined,\n  thread: string | undefined,\n  controller: \"playwright\" | \"puppeteer\" | \"faker\"\n): Promise<ProcessPromptFunctionResult> => {\n  const result: ProcessPromptFunctionResult =\n    controller === \"playwright\"\n      ? await controlChatGpt(prompt, isHeadless)\n      : controller === \"puppeteer\"\n      ? await openAIChat({ prompt, isHeadless, thread })\n      : {\n          isSuccessful: true,\n          message: \"Done test\",\n          result: {\n            text: \"Lorum ipsum lorum ipsum lorum ipsum lorum ipsum lorum ipsum lorum ipsum lorum ipsum\",\n            thread: \"\",\n          },\n        };\n\n  return result;\n}",
  "description": "",
  "id": "gfgnxtdplqnfamodtydtcxzt"
}