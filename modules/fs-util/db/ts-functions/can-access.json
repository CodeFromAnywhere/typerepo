{
  "createdAt": 1663304893134,
  "updatedAt": 1663304893134,
  "deletedAt": 0,
  "createdFirstAt": 1663304893134,
  "apiAuthenticationStrategy": "admin",
  "isApiExposed": true,
  "isExported": true,
  "operationRelativeTypescriptFilePath": "src/files.ts",
  "commentsInside": [],
  "rawText": " async (\n  p: PathLike,\n  mode: number\n): Promise<boolean> => {\n  try {\n    await fs.access(p, mode);\n    return true;\n  } catch (e) {\n    return false;\n  }\n}",
  "name": "canAccess",
  "slug": "can-access",
  "parameters": [
    {
      "name": "p",
      "schema": {
        "$ref": "#/definitions/PathLike"
      },
      "required": true
    },
    {
      "name": "mode",
      "schema": {
        "type": "number"
      },
      "simplifiedSchema": {
        "type": "number"
      },
      "required": true
    }
  ],
  "description": "uses fs.access to determine if something can be accessed\n\nCheck File access constants for possible values of mode. It is possible to create a mask consisting of the bitwise OR of two or more values (e.g. fs.constants.W_OK | fs.constants.R_OK).",
  "returnType": {
    "rawType": "Promise<boolean>",
    "typeCoverage": 0,
    "isArray": false,
    "isEnum": false,
    "isObject": false,
    "isPrimitive": false,
    "isEnumLiteral": false
  },
  "maxIndentationDepth": 2,
  "size": {
    "characters": 401,
    "lines": 13,
    "bytes": 401,
    "bytesPerCharacter": 1,
    "charactersPerLine": 31,
    "linesPerFile": 13,
    "numberOfFiles": 1
  },
  "id": "vCJuEiTowjrPiUbD"
}