{
  "createdAt": 1666258846029,
  "updatedAt": 1666258846029,
  "deletedAt": 0,
  "createdFirstAt": 1666258846029,
  "classification": "const",
  "comments": [],
  "isExported": false,
  "name": "isClientOk",
  "slug": "is-client-ok",
  "operationRelativeTypescriptFilePath": "src/watchman.ts",
  "type": {
    "rawType": "(client: import(\"/Users/king/King/operations/node_modules/@types/fb-watchman/index\").Client, debug: boolean) => any",
    "typeDefinition": {
      "type": "object",
      "properties": {},
      "optional": false
    },
    "typeCoverage": 0,
    "isArray": false,
    "isEnum": false,
    "isObject": true,
    "isPrimitive": false,
    "isEnumLiteral": false,
    "simplifiedSchema": {
      "properties": [],
      "type": "object"
    }
  },
  "value": "(client: watchman.Client, debug: boolean) => {\n  return new Promise<void>((resolve, reject) => {\n    client.capabilityCheck(\n      { optional: [], required: [\"relative_root\"] },\n      function (error: any, resp: any) {\n        if (error) {\n          // error will be an Error object if the watchman service is not\n          // installed, or if any of the names listed in the `required`\n          // array are not supported by the server\n          console.error(error);\n          client.end();\n          return reject();\n        }\n        if (debug) {\n          console.log(\"Watchman is ok\", resp);\n        }\n\n        resolve();\n      }\n    );\n  });\n}",
  "description": "checks if watchman client is ok. ends client if it's not ok",
  "id": "ylatqqroalfirijfhvgnahhm"
}