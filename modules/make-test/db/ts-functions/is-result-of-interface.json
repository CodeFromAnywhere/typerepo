{
  "createdAt": 1662720962052,
  "updatedAt": 1662720962052,
  "deletedAt": 0,
  "createdFirstAt": 1662720962052,
  "apiAuthenticationStrategy": "admin",
  "isApiExposed": true,
  "isExported": true,
  "operationRelativeTypescriptFilePath": "src/general.ts",
  "commentsInside": [],
  "rawText": " <TResult>(\n  result: TResult,\n  jsonSchema: JSONSchema\n): boolean => {\n  return true;\n}",
  "name": "isResultOfInterface",
  "slug": "is-result-of-interface",
  "parameters": [],
  "description": "TODO: need validate-json-schema. also this can be its own little package, as it can be used in many other places\n\nnot sure if this should be part of make-test at all, because we want operations to be able to operate independently without the os, right? so then it won't work because you don't always have indexes...",
  "returnType": {
    "rawType": "{}",
    "typeDefinition": {
      "optional": false,
      "type": "boolean"
    },
    "typeCoverage": 0,
    "isArray": false,
    "isEnum": false,
    "isObject": false,
    "isPrimitive": true,
    "isEnumLiteral": false,
    "simplifiedSchema": {
      "type": "boolean"
    }
  },
  "maxIndentationDepth": 1,
  "size": {
    "characters": 403,
    "lines": 8,
    "bytes": 403,
    "bytesPerCharacter": 1,
    "charactersPerLine": 50,
    "linesPerFile": 8,
    "numberOfFiles": 1
  },
  "id": "uyQWFRnlWSWjAwqu"
}