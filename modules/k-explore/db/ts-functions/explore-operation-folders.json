{
  "createdAt": 1662904761214,
  "updatedAt": 1662904761214,
  "deletedAt": 0,
  "createdFirstAt": 1662904761214,
  "apiAuthenticationStrategy": "admin",
  "isApiExposed": true,
  "isExported": true,
  "operationRelativeTypescriptFilePath": "src/exploreOperationFolders.ts",
  "commentsInside": [],
  "rawText": " async (\n  config: BaseConfig\n): Promise<string[]> => {\n  const folders = (await findAllPackages({ basePath: config?.basePath }))\n    .map((textJson) => textJson.path)\n    .map((p) => getFolder(p))\n    .filter((p) => fs.existsSync(path.join(p, \"tsconfig.json\")));\n\n  return folders;\n}",
  "name": "exploreOperationFolders",
  "slug": "explore-operation-folders",
  "parameters": [
    {
      "name": "config",
      "schema": {
        "type": "object",
        "properties": {
          "basePath": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "simplifiedSchema": {
        "properties": [
          {
            "name": "basePath",
            "required": false,
            "schema": {
              "properties": [],
              "type": "object"
            }
          }
        ],
        "type": "object"
      },
      "required": false
    }
  ],
  "description": "find all active operations (folders having `package.json` but also `tsconfig.json`)\n\nreturns folder path array",
  "returnType": {
    "rawType": "Promise<string[]>",
    "typeCoverage": 0,
    "isArray": false,
    "isEnum": false,
    "isObject": false,
    "isPrimitive": false,
    "isEnumLiteral": false
  },
  "maxIndentationDepth": 2,
  "size": {
    "characters": 394,
    "lines": 12,
    "bytes": 394,
    "bytesPerCharacter": 1,
    "charactersPerLine": 33,
    "linesPerFile": 12,
    "numberOfFiles": 1
  },
  "id": "jAiPotyehvYEWvGY"
}