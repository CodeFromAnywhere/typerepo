{
  "createdAt": 1673523402407,
  "updatedAt": 1673523402407,
  "deletedAt": 0,
  "createdFirstAt": 1673523402407,
  "isApiExposed": false,
  "isExported": true,
  "operationRelativeTypescriptFilePath": "src/PingApi.tsx",
  "commentsInside": [],
  "rawText": " () => {\n  // ping every time the user returns to the screen. this way the api gets checked\n  const pingResult = queries.usePing();\n  const [isOffline, setIsOffline] = useState<boolean | undefined>(undefined);\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      // every second, check the localstorage for this thing.\n\n      getItem(API_NO_RESPONSE_TIME_KEY).then((value) => {\n        if (value === undefined) {\n          if (isOffline) {\n            setIsOffline(false);\n            return;\n          }\n        }\n\n        const lastNoResponse = Number(value);\n        console.log({ lastNoResponse });\n\n        if (lastNoResponse === 0) {\n          // last time we got a response...\n          setIsOffline(false);\n          return;\n        }\n\n        const timeAgo = Date.now() - lastNoResponse;\n\n        if (timeAgo > timeBeforeNotOffline) {\n          // long ago, let's wait for loading it again\n          setIsOffline(undefined);\n          return;\n        }\n\n        // last 10 seconds we tried but itseems to have an error during that time\n        setIsOffline(true);\n      });\n    }, 1000);\n\n    return () => clearInterval(intervalId);\n  }, []);\n\n  return (\n    <Div className=\"mx-4\">\n      <ALink href=\"/settings\">\n        {isOffline === undefined ? \"üü†\" : isOffline === true ? \"‚ùå\" : \"‚úÖ\"} API\n        status:{\" \"}\n        {isOffline === true\n          ? \"down\"\n          : isOffline === undefined\n          ? \"loading\"\n          : \"up\"}\n      </ALink>\n    </Div>\n  );\n}",
  "name": "PingApi",
  "slug": "ping-api",
  "parameters": [],
  "description": "",
  "returnType": {
    "rawType": "JSX.Element",
    "typeDefinition": {
      "optional": false,
      "$ref": "#/definitions/JSX.Element"
    },
    "typeCoverage": 0,
    "isArray": false,
    "isEnum": false,
    "isObject": true,
    "isPrimitive": false,
    "isEnumLiteral": false
  },
  "maxIndentationDepth": 6,
  "size": {
    "characters": 1492,
    "lines": 55,
    "bytes": 1498,
    "bytesPerCharacter": 1.0040214477211795,
    "charactersPerLine": 27,
    "linesPerFile": 55,
    "numberOfFiles": 1
  },
  "id": "nlruozqirapalozmnucetqas"
}