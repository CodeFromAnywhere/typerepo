{
  "createdAt": 1673523402613,
  "updatedAt": 1673523402613,
  "deletedAt": 0,
  "createdFirstAt": 1673523402613,
  "classification": "const",
  "comments": [],
  "isExported": true,
  "name": "PingApi",
  "slug": "ping-api",
  "operationRelativeTypescriptFilePath": "src/PingApi.tsx",
  "type": {
    "rawType": "() => JSX.Element",
    "typeDefinition": {
      "type": "object",
      "properties": {},
      "optional": false
    },
    "typeCoverage": 0,
    "isArray": false,
    "isEnum": false,
    "isObject": true,
    "isPrimitive": false,
    "isEnumLiteral": false,
    "simplifiedSchema": {
      "properties": [],
      "type": "object"
    }
  },
  "value": "() => {\n  // ping every time the user returns to the screen. this way the api gets checked\n  const pingResult = queries.usePing();\n  const [isOffline, setIsOffline] = useState<boolean | undefined>(undefined);\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      // every second, check the localstorage for this thing.\n\n      getItem(API_NO_RESPONSE_TIME_KEY).then((value) => {\n        if (value === undefined) {\n          if (isOffline) {\n            setIsOffline(false);\n            return;\n          }\n        }\n\n        const lastNoResponse = Number(value);\n        console.log({ lastNoResponse });\n\n        if (lastNoResponse === 0) {\n          // last time we got a response...\n          setIsOffline(false);\n          return;\n        }\n\n        const timeAgo = Date.now() - lastNoResponse;\n\n        if (timeAgo > timeBeforeNotOffline) {\n          // long ago, let's wait for loading it again\n          setIsOffline(undefined);\n          return;\n        }\n\n        // last 10 seconds we tried but itseems to have an error during that time\n        setIsOffline(true);\n      });\n    }, 1000);\n\n    return () => clearInterval(intervalId);\n  }, []);\n\n  return (\n    <Div className=\"mx-4\">\n      <ALink href=\"/settings\">\n        {isOffline === undefined ? \"🟠\" : isOffline === true ? \"❌\" : \"✅\"} API\n        status:{\" \"}\n        {isOffline === true\n          ? \"down\"\n          : isOffline === undefined\n          ? \"loading\"\n          : \"up\"}\n      </ALink>\n    </Div>\n  );\n}",
  "description": "",
  "id": "jeonuixufffjwxixhczlsdrx"
}