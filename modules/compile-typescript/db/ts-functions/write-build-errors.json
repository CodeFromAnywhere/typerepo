{
  "createdAt": 1662720681241,
  "updatedAt": 1662720681241,
  "deletedAt": 0,
  "createdFirstAt": 1662720681241,
  "apiAuthenticationStrategy": "admin",
  "isApiExposed": true,
  "isExported": true,
  "operationRelativeTypescriptFilePath": "src/writeBuildErrors.ts",
  "commentsInside": [],
  "rawText": " async (\n  operationBasePath: string,\n  manualProjectRoot?: string\n) => {\n  const operationName = getLastFolder(operationBasePath);\n  const projectRoot = manualProjectRoot || getProjectRoot();\n  if (!projectRoot) return;\n  // NB: fix to globally alter real fs in order to fix EMFile error that happens in TSMorph (see https://github.com/isaacs/node-graceful-fs)\n  gracefulFs.gracefulify(realFs);\n\n  // NB: this does it for all files in the whole operation!\n  const buildErrors = await getCompileErrors(operationBasePath);\n\n  await db.clear(\"TsBuildError\", { operationName });\n  // @ts-ignore\n  await db.upsert(\"TsBuildError\", buildErrors, { operationName });\n\n  // log(`Wrote ts-build-errors for ${operationFolder}`, { type: \"success\" });\n\n  process.exit(0);\n}",
  "name": "writeBuildErrors",
  "slug": "write-build-errors",
  "parameters": [],
  "description": "",
  "returnType": {
    "rawType": "any",
    "typeCoverage": 0,
    "isArray": false,
    "isEnum": false,
    "isObject": false,
    "isPrimitive": false,
    "isEnumLiteral": false
  },
  "maxIndentationDepth": 1,
  "size": {
    "characters": 760,
    "lines": 21,
    "bytes": 760,
    "bytesPerCharacter": 1,
    "charactersPerLine": 36,
    "linesPerFile": 21,
    "numberOfFiles": 1
  },
  "id": "YINsmNKFWISKTJiD"
}