{
  "createdAt": 1662720212994,
  "updatedAt": 1662720212994,
  "deletedAt": 0,
  "createdFirstAt": 1662720212994,
  "apiAuthenticationStrategy": "admin",
  "isApiExposed": true,
  "isExported": true,
  "operationRelativeTypescriptFilePath": "src/kvmdParseToMarkdownString.ts",
  "commentsInside": [],
  "rawText": " (\n  keyValueMarkdownParse: KeyValueMarkdownParse\n) => {\n  const frontmatterString = frontmatterParseToString(\n    keyValueMarkdownParse.parameters\n  );\n\n  //2 go over every row, and parse it back into the line\n  const result = keyValueMarkdownParse.data\n    .map((kvmdData, index) => {\n      const previous: KeyValueMarkdownModelType | undefined =\n        keyValueMarkdownParse.data[index - 1];\n      const string = kvmdDataToString(kvmdData, previous);\n      return string;\n    })\n    .join(\"\");\n\n  return `${frontmatterString}${result}`;\n}",
  "name": "kvmdParseToMarkdownString",
  "slug": "kvmd-parse-to-markdown-string",
  "parameters": [],
  "description": "parses KeyValueMarkdownParse into a markdown string so it can be saved as a markdown file",
  "returnType": {
    "rawType": "String",
    "typeDefinition": {
      "optional": false,
      "type": "string",
      "allOf": [
        {
          "transform": [
            "trim"
          ]
        },
        {
          "minLength": 1
        }
      ]
    },
    "typeCoverage": 0,
    "isArray": false,
    "isEnum": false,
    "isObject": false,
    "isPrimitive": true,
    "isEnumLiteral": false,
    "simplifiedSchema": {
      "type": "string"
    }
  },
  "maxIndentationDepth": 4,
  "size": {
    "characters": 631,
    "lines": 19,
    "bytes": 631,
    "bytesPerCharacter": 1,
    "charactersPerLine": 33,
    "linesPerFile": 19,
    "numberOfFiles": 1
  },
  "id": "hvnbmKFWDuUVpbgy"
}