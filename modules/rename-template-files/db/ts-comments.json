[
  {
    "createdAt": 1666258793190,
    "updatedAt": 1666258793190,
    "deletedAt": 0,
    "createdFirstAt": 1666258793190,
    "name": "Comment",
    "slug": "comment",
    "operationRelativeTypescriptFilePath": "src/general.ts",
    "comment": "As long as there are no .template files present in the template folder that DONT need to be changed, it is fine.\nIf there are, we should warn people.",
    "rawStatement": "/*\n * finds all .template renamed files recursively and returns the paths in an array\n\nshould be placed back into sensible, this is sensible-specific.\n ////\n export const findTemplateFiles = (dirName: string): string[] => {\n  const appTemplateFiles = findTemplates(`${dirName}/apps`);\n  const packageTemplateFiles = findTemplates(`${dirName}/packages`);\n  const rootTemplateFiles = findTemplates(dirName, true);\n  return appTemplateFiles\n    .concat(packageTemplateFiles)\n    .concat(rootTemplateFiles);\n};*/",
    "parameters": {},
    "types": [],
    "firstLine": 7,
    "lastLine": 10,
    "id": "zcemqskmyduysvoxqdbfehce"
  },
  {
    "createdAt": 1666258793190,
    "updatedAt": 1666258793190,
    "deletedAt": 0,
    "createdFirstAt": 1666258793190,
    "name": "Comment",
    "slug": "comment",
    "operationRelativeTypescriptFilePath": "src/general.ts",
    "comment": "As long as there are no .template files present in the template folder that DONT need to be changed, it is fine.\nIf there are, we should warn people.",
    "rawStatement": "export const isEqualArray = (array1: unknown[], array2: unknown[]) =>\n  array1.length === array2.length &&\n  array1.every((value, index) => value === array2[index]);",
    "parameters": {},
    "types": [],
    "firstLine": 7,
    "lastLine": 10,
    "id": "fuqrodnfbdmgsjqecrxdsqqf"
  },
  {
    "createdAt": 1666258793190,
    "updatedAt": 1666258793190,
    "deletedAt": 0,
    "createdFirstAt": 1666258793190,
    "name": "Comment",
    "slug": "comment",
    "operationRelativeTypescriptFilePath": "src/general.ts",
    "comment": "finds all .template renamed files recursively and returns the paths in an array\n\nshould be placed back into sensible, this is sensible-specific.\n//\nexport const findTemplateFiles = (dirName: string): string[] => {\nconst appTemplateFiles = findTemplates(`${dirName}/apps`);\nconst packageTemplateFiles = findTemplates(`${dirName}/packages`);\nconst rootTemplateFiles = findTemplates(dirName, true);\nreturn appTemplateFiles\n.concat(packageTemplateFiles)\n.concat(rootTemplateFiles);\n};",
    "rawStatement": "export const isEqualArray = (array1: unknown[], array2: unknown[]) =>\n  array1.length === array2.length &&\n  array1.every((value, index) => value === array2[index]);",
    "parameters": {},
    "types": [],
    "firstLine": 12,
    "lastLine": 24,
    "id": "fodmepuecvpkpieyvynrigru"
  }
]