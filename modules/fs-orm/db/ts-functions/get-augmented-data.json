{
  "createdAt": 1662718708854,
  "updatedAt": 1662718708854,
  "deletedAt": 0,
  "createdFirstAt": 1662718708854,
  "apiAuthenticationStrategy": "admin",
  "isApiExposed": true,
  "isExported": true,
  "operationRelativeTypescriptFilePath": "src/util/getAugmentedData.ts",
  "commentsInside": [],
  "rawText": " async <T>(\n  dbFileLocation: DbFileLocation,\n  dbStorageMethod: DbStorageMethod\n): Promise<T[] | null> => {\n  const { absolutePath, modelName, ...modelLocation } = dbFileLocation;\n\n  const ext = path.parse(absolutePath).ext;\n\n  if (ext === \".json\") {\n    const jsonContent = await readJsonFile<any>(absolutePath);\n    const jsonContentArray = jsonContent ? makeArray(jsonContent) : null;\n    const augmented: T[] | null = jsonContentArray\n      ? (jsonContentArray.map((x) => ({\n          ...x,\n          ...modelLocation,\n        })) as T[])\n      : null;\n\n    return augmented;\n  }\n\n  if (ext === \".csv\") {\n    const csvContent = await readCsvFile<any>(absolutePath);\n\n    if (!csvContent) return null;\n\n    const augmented: T[] = csvContent.map((x) => ({\n      ...x,\n      ...modelLocation,\n    }));\n    return augmented;\n  }\n\n  if (ext === \".md\") {\n    const mdParse = await readMarkdownFile(absolutePath);\n\n    if (!mdParse) return null;\n    const frontmatter = mdParse?.parameters;\n    if (dbStorageMethod === \"markdown\") {\n      const markdownContent = {\n        ...frontmatter,\n\n        markdown: mdParse.raw,\n        ...modelLocation,\n        // NB: have to convert to unknown here first because of the specified markdown prop\n      } as unknown as T;\n\n      return [markdownContent];\n    }\n\n    const keyValueMarkdownParse = markdownStringToKvmdParse(\n      mdParse.raw,\n      dbFileLocation\n    );\n\n    // NB: typing as unknown is required because it will only work for keyValueMarkdown models\n    const keyValueMarkdown = keyValueMarkdownParse.data as unknown as T[];\n\n    return keyValueMarkdown;\n  }\n\n  return null;\n}",
  "name": "getAugmentedData",
  "slug": "get-augmented-data",
  "parameters": [],
  "description": "Gets the stored data from any file with any storage method, and augments the modelLocation onto it...",
  "returnType": {
    "rawType": "Promise<T[] | null>",
    "typeCoverage": 0,
    "isArray": false,
    "isEnum": false,
    "isObject": false,
    "isPrimitive": false,
    "isEnumLiteral": false
  },
  "maxIndentationDepth": 5,
  "size": {
    "characters": 1733,
    "lines": 63,
    "bytes": 1733,
    "bytesPerCharacter": 1,
    "charactersPerLine": 28,
    "linesPerFile": 63,
    "numberOfFiles": 1
  },
  "id": "ZBxrjfhFmClxxLmV"
}