{
  "createdAt": 1671316770299,
  "updatedAt": 1671316770299,
  "deletedAt": 0,
  "createdFirstAt": 1671316770299,
  "isApiExposed": true,
  "isExported": true,
  "groupAuthorization": {},
  "explicitTypeName": "AlterFunction",
  "operationRelativeTypescriptFilePath": "src/alter/alter-functions.ts",
  "commentsInside": [],
  "rawText": " async (\n  dbFileLocation,\n  alterFn\n) => {\n  const { absolutePath } = dbFileLocation;\n\n  const kvmdParse: KeyValueMarkdownParse | null = await readKvmdFile(\n    absolutePath,\n    dbFileLocation\n  );\n\n  const isNewFile = !kvmdParse;\n\n  const storedData = kvmdParse?.data || [];\n\n  // console.log({ storedData });\n  const { newStoredData, ...queryResult } = alterFn(storedData);\n  // console.log({ newStoredData });\n  const newKvmdParse: KeyValueMarkdownParse = {\n    parameters: kvmdParse?.parameters || {},\n    data: newStoredData as KeyValueMarkdownModelType[],\n  };\n\n  const newDataString = kvmdParseToMarkdownString(newKvmdParse);\n  const isSuccesful = await writeStringToFile(absolutePath, newDataString);\n\n  if (!isSuccesful) return { isSuccesful, message: \"Could not write to file\" };\n  return {\n    isNewFile,\n    isSuccesful,\n    ...queryResult,\n  };\n}",
  "name": "alterKeyValueMarkdown",
  "slug": "alter-key-value-markdown",
  "parameters": [],
  "description": "",
  "returnType": {
    "rawType": "unknown",
    "typeCoverage": 0,
    "isArray": false,
    "isEnum": false,
    "isObject": false,
    "isPrimitive": false,
    "isEnumLiteral": false
  },
  "maxIndentationDepth": 2,
  "size": {
    "characters": 861,
    "lines": 33,
    "bytes": 861,
    "bytesPerCharacter": 1,
    "charactersPerLine": 26,
    "linesPerFile": 33,
    "numberOfFiles": 1
  },
  "id": "upowuoothdmefcsjwsnnkeyb"
}