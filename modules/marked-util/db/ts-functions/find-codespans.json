{
  "createdAt": 1673959595308,
  "updatedAt": 1673959595308,
  "deletedAt": 0,
  "createdFirstAt": 1673959595308,
  "isApiExposed": false,
  "isExported": true,
  "operationRelativeTypescriptFilePath": "src/findCodespans.ts",
  "commentsInside": [],
  "rawText": " (markdownString: string): string[] => {\n  const result = flattenMarkdownString(\n    markdownString,\n    (token) => token.type === \"codespan\"\n  );\n\n  const codespans: string[] = result\n    .map((token) => {\n      if (token.type !== \"codespan\") return;\n\n      return token.text;\n    })\n    .filter(notEmpty);\n\n  return codespans;\n}",
  "name": "findCodespans",
  "slug": "find-codespans",
  "parameters": [
    {
      "name": "markdownString",
      "schema": {
        "type": "string"
      },
      "simplifiedSchema": {
        "type": "string"
      },
      "required": true
    }
  ],
  "description": "find all codespans",
  "returnType": {
    "rawType": "string[]",
    "typeDefinition": {
      "optional": false,
      "type": "array",
      "items": {
        "type": "string",
        "allOf": [
          {
            "transform": [
              "trim"
            ]
          },
          {
            "minLength": 1
          }
        ]
      }
    },
    "typeCoverage": 0,
    "isArray": true,
    "isEnum": false,
    "isObject": true,
    "isPrimitive": false,
    "isEnumLiteral": false,
    "simplifiedSchema": {
      "items": [
        {
          "schema": {
            "type": "string"
          },
          "name": null
        }
      ],
      "type": "array"
    }
  },
  "maxIndentationDepth": 3,
  "size": {
    "characters": 348,
    "lines": 16,
    "bytes": 348,
    "bytesPerCharacter": 1,
    "charactersPerLine": 22,
    "linesPerFile": 16,
    "numberOfFiles": 1
  },
  "id": "nyygbasprwzdijeeqamermwe"
}