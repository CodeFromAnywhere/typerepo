{
  "createdAt": 1669384567320,
  "updatedAt": 1669384567320,
  "deletedAt": 0,
  "createdFirstAt": 1669384567320,
  "isApiExposed": true,
  "isExported": true,
  "groupAuthorization": {},
  "operationRelativeTypescriptFilePath": "src/findEmbedsFromTokenRecursively.ts",
  "commentsInside": [],
  "rawText": " (\n  token: marked.Token\n): MarkdownEmbed[] => {\n  if (token.type === \"image\") {\n    return [\n      {\n        src: token.href,\n        alt: token.title,\n        type: getTypeFromUrlOrPath(token.href),\n      },\n    ];\n  }\n\n  if (token.type === \"paragraph\") {\n    const result = token.tokens.map(findEmbedsFromTokenRecursively).flat();\n    return result;\n  }\n\n  // probably need to add more here because the images can be nested elsewhere too\n\n  return [];\n}",
  "name": "findEmbedsFromTokenRecursively",
  "slug": "find-embeds-from-token-recursively",
  "parameters": [
    {
      "name": "token",
      "schema": {
        "$ref": "#/definitions/marked.Token"
      },
      "required": true
    }
  ],
  "description": "",
  "returnType": {
    "rawType": "MarkdownEmbed[]",
    "typeDefinition": {
      "optional": false,
      "type": "array",
      "items": {}
    },
    "typeCoverage": 0,
    "isArray": true,
    "isEnum": false,
    "isObject": true,
    "isPrimitive": false,
    "isEnumLiteral": false,
    "simplifiedSchema": {
      "items": [
        {
          "schema": {
            "properties": [],
            "type": "object"
          },
          "name": null
        }
      ],
      "type": "array"
    }
  },
  "maxIndentationDepth": 4,
  "size": {
    "characters": 456,
    "lines": 22,
    "bytes": 456,
    "bytesPerCharacter": 1,
    "charactersPerLine": 21,
    "linesPerFile": 22,
    "numberOfFiles": 1
  },
  "id": "tgerrkxsrdayrhapndiyckve"
}