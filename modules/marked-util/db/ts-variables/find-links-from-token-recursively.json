{
  "createdAt": 1669384570743,
  "updatedAt": 1669384570743,
  "deletedAt": 0,
  "createdFirstAt": 1669384570743,
  "classification": "const",
  "comments": [],
  "isExported": true,
  "name": "findLinksFromTokenRecursively",
  "slug": "find-links-from-token-recursively",
  "operationRelativeTypescriptFilePath": "src/findLinksFromTokenRecursively.ts",
  "type": {
    "rawType": "(token: import(\"/Users/king/King/operations/node_modules/@types/marked/index\").marked.Token) => MarkdownLink[]",
    "typeDefinition": {
      "type": "object",
      "properties": {},
      "optional": false
    },
    "typeCoverage": 0,
    "isArray": false,
    "isEnum": false,
    "isObject": true,
    "isPrimitive": false,
    "isEnumLiteral": false,
    "simplifiedSchema": {
      "properties": [],
      "type": "object"
    }
  },
  "value": "(\n  token: marked.Token\n): MarkdownLink[] => {\n  if (token.type === \"link\") {\n    return [\n      {\n        href: token.href,\n        alt: token.title,\n        type: getTypeFromUrlOrPath(token.href),\n      },\n    ];\n  }\n\n  if (token.type === \"paragraph\") {\n    const result = token.tokens.map(findLinksFromTokenRecursively).flat();\n    return result;\n  }\n\n  // probably need to add more here because the images can be nested elsewhere too\n\n  return [];\n}",
  "description": "",
  "id": "mcapzutltsugwdoueajaafnx"
}