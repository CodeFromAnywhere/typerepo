{
  "createdAt": 1669205453118,
  "updatedAt": 1669205453118,
  "deletedAt": 0,
  "createdFirstAt": 1669205453118,
  "isApiExposed": true,
  "isExported": true,
  "groupAuthorization": {},
  "operationRelativeTypescriptFilePath": "src/getTodoFrontmattersMappedObject.ts",
  "commentsInside": [],
  "rawText": " async (\n  projectRoot: string,\n  todoPaths?: string[]\n) => {\n  const frontmatterPromises = todoPaths?.map(async (todoPath) => {\n    const absoluteFilePath = path.join(projectRoot, todoPath);\n    const frontmatter = (await readMarkdownFile(absoluteFilePath))?.parameters;\n    return { [todoPath]: frontmatter };\n  });\n  const todoFrontmattersArray = frontmatterPromises\n    ? await Promise.all(frontmatterPromises)\n    : [];\n  const todoFrontmattersMappedObject = mergeObjectsArray(todoFrontmattersArray);\n\n  return todoFrontmattersMappedObject;\n}",
  "name": "getTodoFrontmattersMappedObject",
  "slug": "get-todo-frontmatters-mapped-object",
  "parameters": [
    {
      "name": "projectRoot",
      "schema": {
        "type": "string"
      },
      "simplifiedSchema": {
        "type": "string"
      },
      "required": true
    },
    {
      "name": "todoPaths",
      "schema": {
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      "simplifiedSchema": {
        "items": [
          {
            "schema": {
              "type": "string"
            },
            "name": null
          }
        ],
        "type": "array"
      },
      "required": false
    }
  ],
  "description": "",
  "returnType": {
    "rawType": "unknown",
    "typeCoverage": 0,
    "isArray": false,
    "isEnum": false,
    "isObject": false,
    "isPrimitive": false,
    "isEnumLiteral": false
  },
  "maxIndentationDepth": 2,
  "size": {
    "characters": 547,
    "lines": 16,
    "bytes": 547,
    "bytesPerCharacter": 1,
    "charactersPerLine": 34,
    "linesPerFile": 16,
    "numberOfFiles": 1
  },
  "id": "fcvpejmsnyjixdbdjghoavww"
}