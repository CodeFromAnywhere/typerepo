{
  "createdAt": 1668337458008,
  "updatedAt": 1668337458008,
  "deletedAt": 0,
  "createdFirstAt": 1668337458008,
  "publicAuthorization": [
    "read",
    "search"
  ],
  "isApiExposed": false,
  "isPostApi": false,
  "isGetApi": false,
  "isExported": true,
  "operationRelativeTypescriptFilePath": "src/getPublicJeeps.ts",
  "commentsInside": [],
  "rawText": " async (\n  position?: Position\n): Promise<{\n  publicJeeps: PublicJeepType[];\n}> => {\n  const jeeps = await db.get(\"JeepType\");\n\n  const publicJeeps = jeeps.map((jeep) => {\n    const {\n      amountLuggageUnitsLeft,\n      amountSeatsLeft,\n      createdAt,\n      id,\n      name,\n      note,\n      updatedAt,\n      email,\n      locationsCalculated,\n      phone,\n    } = jeep;\n\n    const publicJeep: PublicJeepType = {\n      amountLuggageUnitsLeft,\n      amountSeatsLeft,\n      createdAt,\n      id,\n      name,\n      note,\n      updatedAt,\n      email,\n      locationsCalculated,\n      phone,\n    };\n\n    return publicJeep;\n  });\n\n  const sorted = publicJeeps.sort((a, b) => {\n    const distanceA = earthDistance(\n      a.locationsCalculated?.pop()?.latitude || 0,\n      a.locationsCalculated?.pop()?.longitude || 0,\n      position?.latitude || 0,\n      position?.longitude || 0,\n      \"m\"\n    );\n    const distanceB = earthDistance(\n      b.locationsCalculated?.pop()?.latitude || 0,\n      b.locationsCalculated?.pop()?.longitude || 0,\n      position?.latitude || 0,\n      position?.longitude || 0,\n      \"m\"\n    );\n\n    return distanceA < distanceB ? -1 : 1;\n  });\n\n  return {\n    publicJeeps: sorted,\n  };\n}",
  "name": "getPublicJeeps",
  "slug": "get-public-jeeps",
  "parameters": [
    {
      "name": "position",
      "schema": {
        "$ref": "#/definitions/Position"
      },
      "simplifiedSchema": {
        "fullComment": "",
        "properties": [
          {
            "name": "latitude",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "longitude",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "type": "object"
      },
      "required": false
    }
  ],
  "description": "",
  "returnType": {
    "rawType": "Promise<{ publicJeeps: import(\"/Users/king/King/operations/niches/code-from-anywhere/bootcamp-operations/himalayajeep/himalayajeep-types/build/types\").PublicJeepType[]; }>",
    "typeCoverage": 0,
    "isArray": false,
    "isEnum": false,
    "isObject": false,
    "isPrimitive": false,
    "isEnumLiteral": false
  },
  "maxIndentationDepth": 3,
  "size": {
    "characters": 1205,
    "lines": 60,
    "bytes": 1205,
    "bytesPerCharacter": 1,
    "charactersPerLine": 20,
    "linesPerFile": 60,
    "numberOfFiles": 1
  },
  "id": "yzaezrjvcmeclecezsrtsrvk"
}