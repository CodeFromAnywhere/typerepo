{
  "createdAt": 1668337458169,
  "updatedAt": 1668337458169,
  "deletedAt": 0,
  "createdFirstAt": 1668337458169,
  "classification": "const",
  "comments": [],
  "isExported": true,
  "name": "getPublicJeeps",
  "slug": "get-public-jeeps",
  "operationRelativeTypescriptFilePath": "src/getPublicJeeps.ts",
  "type": {
    "rawType": "(position?: import(\"/Users/king/King/operations/tools/types/geo-types/build/Area\").Position | undefined) => Promise<{ publicJeeps: import(\"/Users/king/King/operations/niches/code-from-anywhere/bootcamp-operations/himalayajeep/himalayajeep-types/build/types\").PublicJeepType[]; }>",
    "typeDefinition": {
      "type": "object",
      "properties": {},
      "optional": false
    },
    "typeCoverage": 0,
    "isArray": false,
    "isEnum": false,
    "isObject": true,
    "isPrimitive": false,
    "isEnumLiteral": false,
    "simplifiedSchema": {
      "properties": [],
      "type": "object"
    }
  },
  "value": "async (\n  position?: Position\n): Promise<{\n  publicJeeps: PublicJeepType[];\n}> => {\n  const jeeps = await db.get(\"JeepType\");\n\n  const publicJeeps = jeeps.map((jeep) => {\n    const {\n      amountLuggageUnitsLeft,\n      amountSeatsLeft,\n      createdAt,\n      id,\n      name,\n      note,\n      updatedAt,\n      email,\n      locationsCalculated,\n      phone,\n    } = jeep;\n\n    const publicJeep: PublicJeepType = {\n      amountLuggageUnitsLeft,\n      amountSeatsLeft,\n      createdAt,\n      id,\n      name,\n      note,\n      updatedAt,\n      email,\n      locationsCalculated,\n      phone,\n    };\n\n    return publicJeep;\n  });\n\n  const sorted = publicJeeps.sort((a, b) => {\n    const distanceA = earthDistance(\n      a.locationsCalculated?.pop()?.latitude || 0,\n      a.locationsCalculated?.pop()?.longitude || 0,\n      position?.latitude || 0,\n      position?.longitude || 0,\n      \"m\"\n    );\n    const distanceB = earthDistance(\n      b.locationsCalculated?.pop()?.latitude || 0,\n      b.locationsCalculated?.pop()?.longitude || 0,\n      position?.latitude || 0,\n      position?.longitude || 0,\n      \"m\"\n    );\n\n    return distanceA < distanceB ? -1 : 1;\n  });\n\n  return {\n    publicJeeps: sorted,\n  };\n}",
  "description": "",
  "id": "reariwboskjknxnatrbtvqam"
}