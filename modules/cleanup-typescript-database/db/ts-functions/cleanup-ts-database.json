{
  "createdAt": 1662740102195,
  "updatedAt": 1662740102195,
  "deletedAt": 0,
  "createdFirstAt": 1662740102195,
  "apiAuthenticationStrategy": "admin",
  "isApiExposed": true,
  "isExported": true,
  "operationRelativeTypescriptFilePath": "src/cleanupTsDatabase.ts",
  "commentsInside": [],
  "rawText": " async (operationName: string) => {\n  const operationBasePath = await getOperationPath(operationName);\n  if (!operationBasePath) return;\n  const operationRelativePaths = (\n    await getPackageSourcePaths({ operationBasePath })\n  ).map((absolutePath) =>\n    getOperationRelativePath(absolutePath, operationBasePath)\n  );\n\n  // all typescript index models related to a ts file should be cleaned\n  const removeResults = await Promise.all(\n    typescriptIndexModels.map((modelName) => {\n      return db.remove(\n        modelName,\n        (model) => {\n          const shouldRemove = shouldDeleteTsModel(\n            model,\n            operationName,\n            operationRelativePaths\n          );\n          /*\n          if (shouldRemove) {\n            console.log({\n              modelName,\n              operationRelativePaths,\n              model: model.name,\n              shouldRemove,\n              ts: model.operationRelativeTypescriptFilePath,\n            });\n          }*/\n\n          return shouldRemove;\n        },\n        { operationName }\n      );\n    })\n  );\n\n  const totalRemoved = removeResults.reduce(\n    (previous, current) => previous + (current.amountRemoved || 0),\n    0\n  );\n\n  return {\n    amountRemoved: totalRemoved,\n  };\n}",
  "name": "cleanupTsDatabase",
  "slug": "cleanup-ts-database",
  "parameters": [],
  "description": "From all Ts Index Models, removes the instances that refer to a ts file that doesn't exist anymore in the operation.",
  "returnType": {
    "rawType": "unknown",
    "typeCoverage": 0,
    "isArray": false,
    "isEnum": false,
    "isObject": false,
    "isPrimitive": false,
    "isEnumLiteral": false
  },
  "maxIndentationDepth": 7,
  "size": {
    "characters": 1359,
    "lines": 47,
    "bytes": 1359,
    "bytesPerCharacter": 1,
    "charactersPerLine": 29,
    "linesPerFile": 47,
    "numberOfFiles": 1
  },
  "id": "vRzoyklSeAqPYmrQ"
}