{
  "createdAt": 1669384842116,
  "updatedAt": 1669384842116,
  "deletedAt": 0,
  "createdFirstAt": 1669384842116,
  "classification": "const",
  "comments": [],
  "isExported": true,
  "name": "proactivePushAddPeerMessage",
  "slug": "proactive-push-add-peer-message",
  "operationRelativeTypescriptFilePath": "src/proactivePushAddPeerMessage.ts",
  "type": {
    "rawType": "(message: string, peerSlug: string) => Promise<boolean>",
    "typeDefinition": {
      "type": "object",
      "properties": {},
      "optional": false
    },
    "typeCoverage": 0,
    "isArray": false,
    "isEnum": false,
    "isObject": true,
    "isPrimitive": false,
    "isEnumLiteral": false,
    "simplifiedSchema": {
      "properties": [],
      "type": "object"
    }
  },
  "value": "async (\n  message: string,\n  peerSlug: string\n): Promise<boolean> => {\n  await addPeerMessage(message, peerSlug);\n\n  const peers = await db.get(\"Person\", {\n    include: { referenceKey: \"personId\" },\n  });\n  await Promise.all(\n    peers.map(async (peer) => {\n      //  if (peer.) return;\n      const apiResult = await apiWithConfig.addPeerMessage(\n        {\n          apiUrl: `http://${peer.name}:${ports[\"function-server\"]}`,\n          //  authToken: peer,\n          timeout: 2000,\n        },\n        message,\n        peerSlug\n      );\n\n      return apiResult;\n    })\n  );\n\n  return true;\n}",
  "description": "Adds a message to your own peer messages database, but also to the db of all your peers that are online currently",
  "id": "ixzynbhqwkdxisfcjviewspt"
}