{
  "createdAt": 1669384825259,
  "updatedAt": 1669384825259,
  "deletedAt": 0,
  "createdFirstAt": 1669384825259,
  "classification": "const",
  "comments": [],
  "isExported": true,
  "name": "getPeerPeople",
  "slug": "get-peer-people",
  "operationRelativeTypescriptFilePath": "src/getPeerPeople.ts",
  "type": {
    "rawType": "() => Promise<{ success: boolean; peerPeople: import(\"/Users/king/King/operations/tools/purpose/p2p/peer-types/build/Person\").Person[]; }>",
    "typeDefinition": {
      "type": "object",
      "properties": {},
      "optional": false
    },
    "typeCoverage": 0,
    "isArray": false,
    "isEnum": false,
    "isObject": true,
    "isPrimitive": false,
    "isEnumLiteral": false,
    "simplifiedSchema": {
      "properties": [],
      "type": "object"
    }
  },
  "value": "async (): Promise<{\n  success: boolean;\n  peerPeople: Person[];\n}> => {\n  const devices = await db.get(\"Device\");\n\n  // person array met voor elke person alle devices die een papi hebben\n  const peerPeople = await getAugmentedPersons(devices, {\n    onlyOnline: false,\n    onlyWithDevices: true,\n    onlyWithPapi: true,\n    withAppsCalculated: true,\n  });\n\n  return { success: true, peerPeople };\n}",
  "description": "Get persons with devices that have papi and their apps calculated, sorted",
  "id": "xsumkfjhwtjobhxjsrwpdhta"
}