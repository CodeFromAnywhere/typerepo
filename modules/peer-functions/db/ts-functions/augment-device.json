{
  "createdAt": 1668334492470,
  "updatedAt": 1668334492470,
  "deletedAt": 0,
  "createdFirstAt": 1668334492470,
  "publicAuthorization": [
    "read",
    "search"
  ],
  "isApiExposed": false,
  "isPostApi": false,
  "isGetApi": false,
  "isExported": true,
  "operationRelativeTypescriptFilePath": "src/augmentDevice.ts",
  "commentsInside": [],
  "rawText": " (x: Device) => {\n  const isOnlineCalculated = x.lastOnlineAt > Date.now() - 300 * 1000;\n  const isLocalIpCalculated = x.ip.startsWith(\"192.168.\");\n\n  const newDevice: Device = {\n    ...x,\n    isOnlineCalculated,\n    isLocalIpCalculated,\n  };\n  return newDevice;\n}",
  "name": "augmentDevice",
  "slug": "augment-device",
  "parameters": [
    {
      "name": "x",
      "schema": {
        "$ref": "#/definitions/Device"
      },
      "simplifiedSchema": {
        "fullComment": "A Device that accesses any King OS api.\n\nA device can be connected to a person. A person can have multiple `Device`s.\n\nA Device does not necissarily have King OS installed themselves, they can also be a visitor to another King OS app of someone else.",
        "properties": [
          {
            "name": "ip",
            "required": true,
            "schema": {
              "fullComment": "The ip of the device. Can be a local IP or remote IP.\n\nNB: Port is not included",
              "nb": "Port is not included",
              "type": "string"
            }
          },
          {
            "name": "city",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "positionRadiusKm",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "country",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "region",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "timezone",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "operationName",
            "required": true,
            "schema": {
              "fullComment": "name of operation the model belongs to\n\n- calculated value (not stored in database)\n- can be `null` or an actual operationName that it was saved at\n- can be `undefined` when you are creating an item, because then it can be set for you",
              "type": "null"
            }
          },
          {
            "name": "projectRelativePath",
            "required": true,
            "schema": {
              "fullComment": "path to dbfile\n\n- calculated value (not stored in database)\n- relatively from the project (without slash at start)\n- can be `undefined` when you are creating an item, because then it can be set for you",
              "type": "string"
            }
          },
          {
            "name": "operationRelativePath",
            "required": false,
            "schema": {
              "fullComment": "path to db file\n\n- relatively from the operation root folder (without slash at start)\n- calculated value (not stored in database)\n- can be `undefined` if the db file does not belong to an operation\n- can be `undefined` when you are creating an item, because then it can be set for you",
              "type": "string"
            }
          },
          {
            "name": "authToken",
            "required": true,
            "schema": {
              "fullComment": "AuthToken is used to identify a device. Unique identifier that is saved in the devices browser/app.\n\nIf the authToken is the same, we can be sure that the device is matched, even if the IP is different.",
              "type": "string"
            }
          },
          {
            "name": "userAgentString",
            "required": true,
            "schema": {
              "fullComment": "Raw `User-Agent` header.\n\nNOT used to identify the device, since the device can already be connected to a person!",
              "type": "string"
            }
          },
          {
            "name": "name",
            "required": true,
            "schema": {
              "fullComment": "Name of the device, calculated based on metadata like location, os, and ip\n\nCan be edited by the user",
              "type": "string"
            }
          },
          {
            "name": "previousIps",
            "required": true,
            "schema": {
              "fullComment": "the root IPInfo is from the latest IP the device had. All previous IPs are added to this array",
              "items": [],
              "type": "array"
            }
          },
          {
            "name": "origins",
            "required": true,
            "schema": {
              "fullComment": "Domains the Device has visited\n\nThe Origin request header indicates the origin (scheme, hostname, and port) that caused the request",
              "items": [
                {
                  "schema": {
                    "type": "string"
                  },
                  "name": null
                }
              ],
              "type": "array"
            }
          },
          {
            "name": "hasPapi",
            "required": false,
            "schema": {
              "fullComment": "Is set to true if the devices IP is pinged and seems to have something that resembles a King OS PAPI.",
              "type": "boolean"
            }
          },
          {
            "name": "isOnlineCalculated",
            "required": false,
            "schema": {
              "fullComment": "Returning `true` or `false` indicating whether or not the IP is giving a response",
              "type": "boolean"
            }
          },
          {
            "name": "lastOnlineAt",
            "required": true,
            "schema": {
              "fullComment": "Whenever the peer is online, this should update",
              "type": "number"
            }
          },
          {
            "name": "isLocalIpCalculated",
            "required": false,
            "schema": {
              "fullComment": "if true, the above IP is a local one, meaning it cannot be accessed from outside of this network\n\nThis is easy to determine: local IP's must start with \"192.168\"",
              "type": "boolean"
            }
          },
          {
            "name": "isFavorite",
            "required": false,
            "schema": {
              "fullComment": "if `true`, this device will show on top",
              "type": "boolean"
            }
          },
          {
            "name": "isPrivate",
            "required": false,
            "schema": {
              "fullComment": "If true, this peer should not be shared",
              "type": "boolean"
            }
          },
          {
            "name": "lastSyncDatabaseAtObject",
            "required": true,
            "schema": {
              "fullComment": "last sync of any model\n\nUseful for example for a p2p messaging",
              "properties": [],
              "type": "object"
            }
          },
          {
            "name": "personIds",
            "required": false,
            "schema": {
              "fullComment": "If the device is authenticated, this should be set.\n\nCan be unset by the person",
              "items": [],
              "type": "array"
            }
          },
          {
            "name": "appOperationsCalculated",
            "required": false,
            "schema": {
              "fullComment": "Calculated all operations that can be exposed as apps. This is taken from `getAllAppOperations` function",
              "items": [],
              "type": "array"
            }
          },
          {
            "name": "authenticationMethods",
            "required": true,
            "schema": {
              "fullComment": "If the `Device` is not identified as a person yet, this can be configured to authenticate with different methods. Once it matches to a person, this can be cleared and `personId` can be attached.",
              "items": [],
              "type": "array"
            }
          }
        ],
        "type": "object"
      },
      "required": true
    }
  ],
  "description": "",
  "returnType": {
    "rawType": "import(\"/Users/king/King/operations/tools/p2p/peer-types/build/Device\").Device",
    "typeDefinition": {
      "optional": false
    },
    "typeCoverage": 0,
    "isArray": false,
    "isEnum": false,
    "isObject": true,
    "isPrimitive": false,
    "isEnumLiteral": false,
    "simplifiedSchema": {
      "properties": [],
      "type": "object"
    }
  },
  "maxIndentationDepth": 2,
  "size": {
    "characters": 264,
    "lines": 11,
    "bytes": 264,
    "bytesPerCharacter": 1,
    "charactersPerLine": 24,
    "linesPerFile": 11,
    "numberOfFiles": 1
  },
  "id": "ubbghioggfmrdgclblbtgtxr"
}