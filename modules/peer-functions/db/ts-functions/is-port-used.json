{
  "createdAt": 1666262511006,
  "updatedAt": 1666262511006,
  "deletedAt": 0,
  "createdFirstAt": 1666262511006,
  "publicAuthorization": [
    "read-docs",
    "search"
  ],
  "isApiExposed": false,
  "isPostApi": false,
  "isGetApi": false,
  "isExported": true,
  "operationRelativeTypescriptFilePath": "src/isPortUsed.ts",
  "commentsInside": [],
  "rawText": " (port: number): Promise<boolean> => {\n  return new Promise<boolean>((resolve, reject) => {\n    const server = net.createServer();\n\n    server.once(\"error\", function (err) {\n      if ((err as any).code === \"EADDRINUSE\") {\n        resolve(true);\n      }\n    });\n\n    server.once(\"listening\", function () {\n      // close the server if listening doesn't fail\n      server.close();\n\n      resolve(false);\n    });\n\n    server.listen(port);\n  });\n}",
  "name": "isPortUsed",
  "slug": "is-port-used",
  "parameters": [
    {
      "name": "port",
      "schema": {
        "type": "number"
      },
      "simplifiedSchema": {
        "type": "number"
      },
      "required": true
    }
  ],
  "description": "Checks if a port is used or not",
  "returnType": {
    "rawType": "Promise<boolean>",
    "typeCoverage": 0,
    "isArray": false,
    "isEnum": false,
    "isObject": false,
    "isPrimitive": false,
    "isEnumLiteral": false
  },
  "maxIndentationDepth": 4,
  "size": {
    "characters": 474,
    "lines": 20,
    "bytes": 474,
    "bytesPerCharacter": 1,
    "charactersPerLine": 24,
    "linesPerFile": 20,
    "numberOfFiles": 1
  },
  "id": "bpzznkksscncbaelolizlovl"
}