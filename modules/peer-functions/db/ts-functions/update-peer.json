{
  "createdAt": 1668149695789,
  "updatedAt": 1668149695789,
  "deletedAt": 0,
  "createdFirstAt": 1668149695789,
  "publicAuthorization": [
    "read",
    "search"
  ],
  "isApiExposed": false,
  "isPostApi": false,
  "isGetApi": false,
  "isExported": true,
  "operationRelativeTypescriptFilePath": "src/updatePeer.ts",
  "commentsInside": [],
  "rawText": " async (\n  slug: string,\n  updatedValues: {\n    name?: string;\n    description?: string;\n    authToken?: string;\n    isFavorite?: boolean;\n    isMe?: boolean;\n  }\n): Promise<{ isSuccesful: boolean; message: string }> => {\n  const updateResult = await db.update(\n    \"Peer\",\n    (peer) => {\n      return peer.slug === slug;\n    },\n    (peer) => {\n      return { ...peer, ...omitUndefinedValues(updatedValues) };\n    }\n  );\n\n  return {\n    isSuccesful: !!updateResult.isSuccesful,\n    message: updateResult.isSuccesful\n      ? \"Peer updated\"\n      : `Something went wrong: ${updateResult.message}`,\n  };\n}",
  "name": "updatePeer",
  "slug": "update-peer",
  "parameters": [],
  "description": "Update one of your peers",
  "returnType": {
    "rawType": "Promise<{ isSuccesful: boolean; message: string; }>",
    "typeCoverage": 0,
    "isArray": false,
    "isEnum": false,
    "isObject": false,
    "isPrimitive": false,
    "isEnumLiteral": false
  },
  "maxIndentationDepth": 3,
  "size": {
    "characters": 627,
    "lines": 27,
    "bytes": 627,
    "bytesPerCharacter": 1,
    "charactersPerLine": 23,
    "linesPerFile": 27,
    "numberOfFiles": 1
  },
  "id": "gmrewupwwzmpazzaucctcdsm"
}