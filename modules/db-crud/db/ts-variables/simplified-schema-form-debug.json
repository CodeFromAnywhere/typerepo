{
  "createdAt": 1671116808470,
  "updatedAt": 1671116808470,
  "deletedAt": 0,
  "createdFirstAt": 1671116808470,
  "classification": "const",
  "comments": [],
  "isExported": true,
  "name": "SimplifiedSchemaFormDebug",
  "slug": "simplified-schema-form-debug",
  "operationRelativeTypescriptFilePath": "src/SimplifiedSchemaFormDebug.tsx",
  "type": {
    "rawType": "({ parameters, values, }: { parameters: import(\"/Users/king/King/operations/tools/types/code-types/build/FunctionParameter\").FunctionParameter[] | undefined; values: any[]; }) => JSX.Element",
    "typeDefinition": {
      "type": "object",
      "properties": {},
      "optional": false
    },
    "typeCoverage": 0,
    "isArray": false,
    "isEnum": false,
    "isObject": true,
    "isPrimitive": false,
    "isEnumLiteral": false,
    "simplifiedSchema": {
      "properties": [],
      "type": "object"
    }
  },
  "value": "({\n  parameters,\n  values,\n}: {\n  parameters: FunctionParameter[] | undefined;\n  values: any[];\n}) => {\n  const [showParams, setShowParams] = useState(false);\n  return (\n    <Div>\n      <P>values</P>\n      <MarkdownContent\n        content={createCodeblockMarkdown(\n          JSON.stringify(values, null, 2),\n          \"json\"\n        )}\n        config={{}}\n      />\n      <P\n        className=\"hover:underline cursor-pointer\"\n        onClick={() => setShowParams(!showParams)}\n      >\n        params (toggle)\n      </P>{\" \"}\n      {showParams ? (\n        <MarkdownContent\n          content={createCodeblockMarkdown(\n            JSON.stringify(parameters, null, 2),\n            \"json\"\n          )}\n          config={{}}\n        />\n      ) : null}\n    </Div>\n  );\n}",
  "description": "",
  "id": "wgpyigatvragjfmltwptcuhp"
}