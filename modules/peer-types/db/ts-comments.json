[
  {
    "createdAt": 1671279492206,
    "updatedAt": 1671279492206,
    "deletedAt": 0,
    "createdFirstAt": 1671279492206,
    "name": "Comment",
    "slug": "comment",
    "operationRelativeTypescriptFilePath": "src/Device.ts",
    "comment": "\nA Device that accesses any King OS api.\n\nA device can be connected to a person. A person can have multiple `Device`s.\n\nA Device does not necissarily have King OS installed themselves, they can also be a visitor to another King OS app of someone else.",
    "rawStatement": "export interface Device extends DefaultModelType, IPInfo {\n  /**\n   * AuthToken is used to identify a device. Unique identifier that is saved in the devices browser/app.\n   *\n   * If the authToken is the same, we can be sure that the device is matched, even if the IP is different.\n   *\n   * Should be identical to ID\n   *\n   */\n  authToken: string;\n\n  /**\n   * Parsed User Agent header.\n   *\n   * NOT used to identify the device, since the device can already be connected to a person!\n   */\n  // userAgent?: IResult;\n  /**\n   * Raw `User-Agent` header.\n   *\n   * NOT used to identify the device, since the device can already be connected to a person!\n   */\n  userAgentString: IResult[\"ua\"];\n  /**\n   * Name of the device, calculated based on metadata like location, os, and ip\n   *\n   * Can be edited by the user\n   */\n  name: string;\n\n  /**\n   * Is set to true if the devices IP is pinged and seems to have something that resembles a King OS PAPI.\n   */\n  hasPapi?: boolean;\n\n  /**\n   * Returning `true` or `false` indicating whether or not the IP is giving a response\n   */\n  isOnlineCalculated?: boolean;\n\n  /**\n   * Whenever the peer is online, this should update\n   */\n  lastOnlineAt: number;\n\n  /**\n   * if true, the above IP is a local one, meaning it cannot be accessed from outside of this network\n   *\n   * This is easy to determine: local IP's must start with \"192.168\"\n   */\n  isLocalIpCalculated?: boolean;\n\n  /**\n   * if `true`, this device will show on top\n   */\n  isFavorite?: boolean;\n\n  /**\n   * If true, this peer should not be shared\n   */\n  isPrivate?: boolean;\n\n  /**\n   * last sync of any model\n   *\n   * Useful for example for a p2p messaging\n   */\n  lastSyncDatabaseAtObject?: {\n    [modelName: string]: number;\n  };\n\n  /**\n   * If the device is authenticated, this should be set.\n   *\n   * Can be unset by the person\n   */\n  personIds?: Id[];\n  persons?: Person[];\n\n  /**\n   * A device can switch between persons, by changing this value\n   */\n  currentPersonId?: Id;\n  /**\n   * If you have a currentPersonId, it is calculated and provided by selecting it from the persons array\n   *\n   * For now, only provided by functioncontext\n   */\n  currentPersonCalculated?: Person;\n  /**\n   * Calculated all operations that can be exposed as apps. This is taken from `getAllAppOperations` function\n   */\n  appOperationsCalculated?: AppOperation[];\n\n  /**\n   * If the `Device` is not identified as a person yet, this can be configured to authenticate with different methods. Once it matches to a person, this can be cleared and `personId` can be attached.\n   */\n  authenticationMethods: AuthenticationMethod[];\n}",
    "parameters": {
      "dbStorageMethod": "jsonSingle"
    },
    "types": [],
    "firstLine": 8,
    "lastLine": 19,
    "id": "nyqgnaimzzlrxkawubsaabte"
  }
]