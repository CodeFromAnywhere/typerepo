{
  "createdAt": 1669884646987,
  "updatedAt": 1669884646987,
  "deletedAt": 0,
  "createdFirstAt": 1669884646987,
  "classification": "const",
  "comments": [],
  "isExported": true,
  "name": "Timeline",
  "slug": "timeline",
  "operationRelativeTypescriptFilePath": "src/Timeline.tsx",
  "type": {
    "rawType": "(props: { items: import(\"/Users/king/King/operations/tools/purpose/search/timeline/src/TimelineItemType\").TimelineItemType[]; }) => JSX.Element",
    "typeDefinition": {
      "type": "object",
      "properties": {},
      "optional": false
    },
    "typeCoverage": 0,
    "isArray": false,
    "isEnum": false,
    "isObject": true,
    "isPrimitive": false,
    "isEnumLiteral": false,
    "simplifiedSchema": {
      "properties": [],
      "type": "object"
    }
  },
  "value": "(props: { items: TimelineItemType[] }) => {\n  const { items } = props;\n  return (\n    <Div className=\"h-screen overflow-auto snap-mandatory snap-y\">\n      {items.map((item) => {\n        return (\n          <Div\n            className=\"snap-center h-screen w-screen flex justify-center items-center\"\n            style={{\n              backgroundColor: pickRandomArrayItem(colors),\n              backgroundImage: item.imageUrl\n                ? `url(\"${item.imageUrl}\")`\n                : undefined,\n              backgroundRepeat: \"no-repeat\",\n              backgroundSize: \"cover\",\n              backgroundPosition: \"center 75%\",\n            }}\n          >\n            {item.component ? (\n              item.component()\n            ) : (\n              <Div\n                className=\"max-w-[80vw]\"\n                onClick={() => {\n                  console.log(\"supposed to open\", item);\n                  api.vscodeOpen({\n                    files: [\n                      {\n                        projectRelativePath: item.projectRelativeFilePath,\n                        line: item.line,\n                      },\n                    ],\n                  });\n                }}\n              >\n                <MarkdownCodeblock\n                  text={item.markdown || \"Nothing to show\"}\n                  isModeStatic\n                  minimalMode=\"scroll\"\n                  extension=\"tsx\"\n                />\n              </Div>\n            )}\n          </Div>\n        );\n      })}\n    </Div>\n  );\n}",
  "description": "",
  "id": "qnuhtixnlsxggjgcuynuubsb"
}