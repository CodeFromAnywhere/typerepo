{
  "createdAt": 1671116195271,
  "updatedAt": 1671116195271,
  "deletedAt": 0,
  "createdFirstAt": 1671116195271,
  "isApiExposed": true,
  "isExported": true,
  "groupAuthorization": {},
  "operationRelativeTypescriptFilePath": "src/Timeline.tsx",
  "commentsInside": [],
  "rawText": " (props: {\n  items: TimelineItemType[];\n  isHorizontal?: boolean;\n}) => {\n  const { items, isHorizontal } = props;\n  return (\n    <div\n      className={`flex ${\n        isHorizontal ? \"snap-x flex-row\" : \"snap-y flex-col\"\n      } snap-mandatory h-screen w-full mx:auto overflow-scroll`}\n    >\n      {items.map((item, index) => {\n        return (\n          <Div\n            key={`timeline-item-${index}`}\n            className=\"snap-start shrink-0 w-screen h-screen place-items-center\"\n            style={{\n              backgroundImage: item.imageUrl\n                ? `url(\"${item.imageUrl}\")`\n                : undefined,\n              backgroundRepeat: \"no-repeat\",\n              backgroundSize: \"cover\",\n              backgroundPosition: \"center 75%\",\n            }}\n          >\n            {item.component ? (\n              item.component()\n            ) : (\n              <Div\n                className=\"max-w-[80vw]\"\n                onClick={() => {\n                  console.log(\"supposed to open\", item);\n                  api.vscodeOpen({\n                    files: [\n                      {\n                        projectRelativePath: item.projectRelativeFilePath,\n                        line: item.line,\n                      },\n                    ],\n                  });\n                }}\n              >\n                <MarkdownCodeblock\n                  text={item.markdown || \"Nothing to show\"}\n                  isModeStatic\n                  minimalMode=\"scroll\"\n                  extension=\"tsx\"\n                />\n              </Div>\n            )}\n          </Div>\n        );\n      })}\n    </div>\n  );\n}",
  "name": "Timeline",
  "slug": "timeline",
  "parameters": [],
  "description": "",
  "returnType": {
    "rawType": "JSX.Element",
    "typeDefinition": {
      "optional": false,
      "$ref": "#/definitions/JSX.Element"
    },
    "typeCoverage": 0,
    "isArray": false,
    "isEnum": false,
    "isObject": true,
    "isPrimitive": false,
    "isEnumLiteral": false
  },
  "maxIndentationDepth": 12,
  "size": {
    "characters": 1632,
    "lines": 56,
    "bytes": 1632,
    "bytesPerCharacter": 1,
    "charactersPerLine": 29,
    "linesPerFile": 56,
    "numberOfFiles": 1
  },
  "id": "ckzjkrnuzkfyacitwlukxqwa"
}