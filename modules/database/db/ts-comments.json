[
  {
    "createdAt": 1662746626173,
    "updatedAt": 1662746626173,
    "deletedAt": 0,
    "createdFirstAt": 1662746626173,
    "name": "Comment",
    "slug": "comment",
    "operationRelativeTypescriptFilePath": "src/test-db.ts",
    "comment": "export type Person = { name: string; age: number, firstName?:string };\n\nconst isSuccesful: boolean = true; //boolean\nconst text: string = \"hello world\";\nconst amount: number = 88;\nconst numbers: string[] = [\"1\", \"2\", \"3\", \"4\", \"5\"];\nconst person: Person = { age: 29, name: \"Wijnand\" };\n\nconst students: Person[] = [\n{ name: \"Henrik\", age: 1 + 1, firstName:\"jlskjfklsjf\" },\n{ name: \"Suyog\", age: 1 + 1 },\n];",
    "rawStatement": "/*\n\nkebab-case : file names, endpoint, paths, urls\ncamelCase : variable names and functions\nPascalCase : types, interfaces, classes and components\n\n*/",
    "parameters": {},
    "types": [],
    "firstLine": 67,
    "lastLine": 80,
    "id": "gmiFVAbUYUPdgQXA"
  },
  {
    "createdAt": 1662746626173,
    "updatedAt": 1662746626173,
    "deletedAt": 0,
    "createdFirstAt": 1662746626173,
    "name": "Comment",
    "slug": "comment",
    "operationRelativeTypescriptFilePath": "src/test-db.ts",
    "comment": "export type Person = { name: string; age: number, firstName?:string };\n\nconst isSuccesful: boolean = true; //boolean\nconst text: string = \"hello world\";\nconst amount: number = 88;\nconst numbers: string[] = [\"1\", \"2\", \"3\", \"4\", \"5\"];\nconst person: Person = { age: 29, name: \"Wijnand\" };\n\nconst students: Person[] = [\n{ name: \"Henrik\", age: 1 + 1, firstName:\"jlskjfklsjf\" },\n{ name: \"Suyog\", age: 1 + 1 },\n];",
    "rawStatement": "const dbConfig: DbConfig<TestModels> = {\n  modelQueryConfig: {\n    CsvTestModel: { dbStorageMethod: \"csv\" },\n\n    JsonMultipleTestModel: { dbStorageMethod: \"jsonMultiple\" },\n    DefaultTestModel: { dbStorageMethod: \"jsonSingle\" },\n\n    MarkdownTestModel: { dbStorageMethod: \"markdown\" },\n    KeyValueMarkdownTestModel: { dbStorageMethod: \"keyValueMarkdown\" },\n\n    // real models\n    OperationIndex: { dbStorageMethod: \"jsonSingle\" },\n    OperationConfig: {\n      dbStorageMethod: \"markdown\",\n      operationRelativePath: \"OPERATION.md\",\n    },\n    TsConfig: {\n      dbStorageMethod: \"jsonSingle\",\n      operationRelativePath: \"tsconfig.json\",\n    },\n    PackageJson: {\n      dbStorageMethod: \"jsonSingle\",\n      operationRelativePath: \"package.json\",\n    },\n  },\n};",
    "parameters": {},
    "types": [],
    "firstLine": 67,
    "lastLine": 80,
    "id": "qJiJTKMBokiQiaOv"
  },
  {
    "createdAt": 1662746626173,
    "updatedAt": 1662746626173,
    "deletedAt": 0,
    "createdFirstAt": 1662746626173,
    "name": "Comment",
    "slug": "comment",
    "operationRelativeTypescriptFilePath": "src/test-db.ts",
    "comment": "kebab-case : file names, endpoint, paths, urls\ncamelCase : variable names and functions\nPascalCase : types, interfaces, classes and components",
    "rawStatement": "const dbConfig: DbConfig<TestModels> = {\n  modelQueryConfig: {\n    CsvTestModel: { dbStorageMethod: \"csv\" },\n\n    JsonMultipleTestModel: { dbStorageMethod: \"jsonMultiple\" },\n    DefaultTestModel: { dbStorageMethod: \"jsonSingle\" },\n\n    MarkdownTestModel: { dbStorageMethod: \"markdown\" },\n    KeyValueMarkdownTestModel: { dbStorageMethod: \"keyValueMarkdown\" },\n\n    // real models\n    OperationIndex: { dbStorageMethod: \"jsonSingle\" },\n    OperationConfig: {\n      dbStorageMethod: \"markdown\",\n      operationRelativePath: \"OPERATION.md\",\n    },\n    TsConfig: {\n      dbStorageMethod: \"jsonSingle\",\n      operationRelativePath: \"tsconfig.json\",\n    },\n    PackageJson: {\n      dbStorageMethod: \"jsonSingle\",\n      operationRelativePath: \"package.json\",\n    },\n  },\n};",
    "parameters": {},
    "types": [],
    "firstLine": 82,
    "lastLine": 88,
    "id": "zgniDqoCZffAQvLT"
  },
  {
    "createdAt": 1662746626173,
    "updatedAt": 1662746626173,
    "deletedAt": 0,
    "createdFirstAt": 1662746626173,
    "name": "Comment",
    "slug": "comment",
    "operationRelativeTypescriptFilePath": "src/test-db.ts",
    "comment": "a db is created with models from all different db storage methods",
    "rawStatement": "export const testDb = createDb<TestModels>(dbConfig);",
    "parameters": {},
    "types": [],
    "firstLine": 117,
    "lastLine": 119,
    "id": "QsQqyaxBjwqHDCof"
  }
]