{
  "createdAt": 1671097065314,
  "updatedAt": 1671097065314,
  "deletedAt": 0,
  "createdFirstAt": 1671097065314,
  "classification": "const",
  "comments": [],
  "isExported": true,
  "name": "detectChatGptPage",
  "slug": "detect-chat-gpt-page",
  "operationRelativeTypescriptFilePath": "src/detectChatGptPage.ts",
  "type": {
    "rawType": "(page: import(\"/Users/lucky/workspace/typerepo/node_modules/puppeteer/lib/types\").Page) => Promise<\"Login\" | \"Chat\" | \"Secure\">",
    "typeDefinition": {
      "type": "object",
      "properties": {},
      "optional": false
    },
    "typeCoverage": 0,
    "isArray": false,
    "isEnum": false,
    "isObject": true,
    "isPrimitive": false,
    "isEnumLiteral": false,
    "simplifiedSchema": {
      "properties": [],
      "type": "object"
    }
  },
  "value": "async (\n  page: Page\n): Promise<\"Login\" | \"Chat\" | \"Secure\"> => {\n  await page.goto(\"https://chat.openai.com/chat\", {\n    waitUntil: \"domcontentloaded\",\n  });\n\n  let curretnOpenPage = \"Chat\";\n\n  const sendMessageButton = await page.$(\n    'button[class=\"absolute p-1 rounded-md text-gray-500 bottom-1.5 right-1 md:bottom-2.5 md:right-2 hover:bg-gray-100 dark:hover:text-gray-400 dark:hover:bg-gray-900 disabled:hover:bg-transparent dark:disabled:hover:bg-transparent\"]'\n  );\n\n  const isTextAreaExist = await page.$(\"textarea\");\n\n  if (sendMessageButton && isTextAreaExist) {\n    return \"Chat\";\n  }\n\n  const isSecurePageApear = await page.$x(\n    \"//h2[contains(., 'Checking if the site connection is secure')]\"\n  );\n\n  const isLogin = 'button[class=\"btn flex justify-center gap-2 btn-primary\"]';\n  console.log({ isLogin });\n  if (isSecurePageApear && isLogin) {\n    console.log(\"Is secure page appear\");\n    await page.waitForSelector(\n      'button[class=\"btn flex justify-center gap-2 btn-primary\"]'\n    );\n    console.log('\"Login button appear');\n    return \"Login\";\n  }\n  return \"Secure\";\n}",
  "description": "",
  "id": "mrjhaaogocbcyqyhkhrokmaz"
}