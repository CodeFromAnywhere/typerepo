[
  {
    "createdAt": 1670936366870,
    "updatedAt": 1670936366870,
    "deletedAt": 0,
    "createdFirstAt": 1670936366870,
    "name": "Comment",
    "slug": "comment",
    "operationRelativeTypescriptFilePath": "src/MarkdownContent.tsx",
    "comment": "Renders a markdown string (without frontmatter)",
    "rawStatement": "export const MarkdownContent = (props: {\n  content: string;\n  config: MarkdownParseRenderConfig;\n}): JSX.Element => {\n  const { config, content } = props;\n  const { openContextMenuProps, renderContextMenu, isOpen } =\n    useSelectionPromptsMenu(config.selectionPrompts || [], {\n      contextContent: content,\n      context_projectRelativeFilePath: config.projectRelativeMarkdownFilePath,\n    });\n\n  if (!content) return <Div>No content</Div>;\n\n  const markdownRender = React.useMemo(() => {\n    return <MarkdownContentRender content={content} config={config} />;\n  }, [\n    content,\n    isOpen,\n    isOpen ? { renderContextMenu, openContextMenuProps } : undefined,\n  ]);\n\n  if (config.disableSelectionContextMenu) {\n    return markdownRender;\n  }\n\n  return (\n    <div {...openContextMenuProps}>\n      {renderContextMenu()}\n      {markdownRender}\n    </div>\n  );\n};",
    "parameters": {},
    "types": [],
    "firstLine": 6,
    "lastLine": 9,
    "id": "cgnwowobmlmwfrbohkapsvjh"
  }
]