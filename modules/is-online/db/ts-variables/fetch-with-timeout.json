{
  "createdAt": 1668336407785,
  "updatedAt": 1668336407785,
  "deletedAt": 0,
  "createdFirstAt": 1668336407785,
  "classification": "const",
  "comments": [],
  "isExported": true,
  "name": "fetchWithTimeout",
  "slug": "fetch-with-timeout",
  "operationRelativeTypescriptFilePath": "src/isOnline.ts",
  "type": {
    "rawType": "(url: string, timeoutMs: number) => Promise<{ isSuccessful: boolean; isConnected: boolean; response?: any; message: string; }>",
    "typeDefinition": {
      "type": "object",
      "properties": {},
      "optional": false
    },
    "typeCoverage": 0,
    "isArray": false,
    "isEnum": false,
    "isObject": true,
    "isPrimitive": false,
    "isEnumLiteral": false,
    "simplifiedSchema": {
      "properties": [],
      "type": "object"
    }
  },
  "value": "async (\n  url: string,\n  timeoutMs: number\n): Promise<{\n  isSuccessful: boolean;\n  isConnected: boolean;\n  response?: any;\n  message: string;\n}> => {\n  try {\n    const abortController = new AbortController();\n    const id = setTimeout(() => abortController.abort(), timeoutMs || 10000);\n\n    const response = await fetch(url, {\n      method: \"GET\",\n      signal: abortController.signal,\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => {\n        return {\n          isConnected: true,\n          isSuccessful: true,\n          message: \"Resolved\",\n          result: response,\n        };\n      })\n      .catch((error) => {\n        if (!timeoutMs) {\n          console.warn(error);\n        }\n        return {\n          isSuccessful: false,\n          isConnected: false,\n          message: \"The API didn't resolve: \" + error, //error + error.status +\n        };\n      });\n\n    clearTimeout(id);\n    return response;\n  } catch (e) {\n    return {\n      isSuccessful: false,\n      isConnected: false,\n      message: \"The API didn't resolve: \" + e,\n    };\n  }\n}",
  "description": "",
  "id": "zeahxryxsmahykpcasojypfh"
}