{
  "createdAt": 1663305514168,
  "updatedAt": 1663305514168,
  "deletedAt": 0,
  "createdFirstAt": 1663305514168,
  "apiAuthenticationStrategy": "admin",
  "isApiExposed": true,
  "isExported": true,
  "operationRelativeTypescriptFilePath": "src/renderMarkdownParse.tsx",
  "commentsInside": [],
  "rawText": " (\n  content: string,\n  config?: { big?: boolean }\n) => {\n  // console.log(\"Need to render:\", content);\n  return (\n    <ReactMarkdown\n      className={config?.big ? \"max-w-lg\" : undefined}\n      rehypePlugins={[rehypeHighlight, remarkGfm]}\n      components={{\n        //Fix newlines with `<br>`\n        br: ({ node, ...props }) => (\n          // @ts-ignore\n          <br {...props} />\n        ),\n\n        details: ({ node, ...props }) => (\n          // @ts-ignore\n          <details {...props} />\n        ),\n        summary: ({ node, ...props }) => (\n          // @ts-ignore\n          <summary {...props} />\n        ),\n        td: ({ node, ...props }) => (\n          // @ts-ignore\n          <td\n            className=\"border border-gray-900 dark:border-gray-100\"\n            {...props}\n          />\n        ),\n        th: ({ node, ...props }) => (\n          // @ts-ignore\n          <th\n            className=\"border border-gray-900 dark:border-gray-100\"\n            {...props}\n          />\n        ),\n\n        ol: ({ node, ...props }) => <ol className=\"list-decimal\" {...props} />,\n        ul: ({ node, ...props }) => (\n          <ul\n            style={{ listStyleType: \"circle\" }}\n            className=\"mx-3 p-2\"\n            {...props}\n          />\n        ),\n        p: ({ node, ...props }) => (\n          <p style={{ marginTop: 15, marginBottom: 15 }} {...props} />\n        ),\n        li: ({ node, ...props }) => <li className=\"\" {...props} />,\n        code: ({ node, ...props }) => (\n          <code\n            className=\"dark:bg-gray-700\"\n            style={{ color: \"darkcyan\" }}\n            {...props}\n          />\n        ),\n        a: ({ node, ...props }) => (\n          <a\n            className=\"text-blue-500\"\n            style={{ color: \"darkblue\" }}\n            {...props}\n          />\n        ),\n      }}\n    >\n      {content}\n    </ReactMarkdown>\n  );\n}",
  "name": "renderMarkdownContent",
  "slug": "render-markdown-content",
  "parameters": [
    {
      "name": "content",
      "schema": {
        "type": "string"
      },
      "simplifiedSchema": {
        "type": "string"
      },
      "required": true
    },
    {
      "name": "config",
      "schema": {
        "type": "object",
        "properties": {
          "big": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "simplifiedSchema": {
        "properties": [
          {
            "name": "big",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "type": "object"
      },
      "required": false
    }
  ],
  "description": "renders a markdown striing (without frontmatter)",
  "returnType": {
    "rawType": "JSX.Element",
    "typeDefinition": {
      "optional": false,
      "$ref": "#/definitions/JSX.Element"
    },
    "typeCoverage": 0,
    "isArray": false,
    "isEnum": false,
    "isObject": true,
    "isPrimitive": false,
    "isEnumLiteral": false
  },
  "maxIndentationDepth": 6,
  "size": {
    "characters": 1918,
    "lines": 71,
    "bytes": 1918,
    "bytesPerCharacter": 1,
    "charactersPerLine": 27,
    "linesPerFile": 71,
    "numberOfFiles": 1
  },
  "id": "WNDyOxXzzKcdxXMl"
}