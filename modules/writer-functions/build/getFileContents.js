"use strict";var __awaiter=this&&this.__awaiter||function(e,t,n,r){return new(n||(n=Promise))((function(s,i){function o(e){try{u(r.next(e))}catch(e){i(e)}}function a(e){try{u(r.throw(e))}catch(e){i(e)}}function u(e){var t;e.done?s(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(o,a)}u((r=r.apply(e,t||[])).next())}))},__generator=this&&this.__generator||function(e,t){var n,r,s,i,o={label:0,sent:function(){if(1&s[0])throw s[1];return s[1]},trys:[],ops:[]};return i={next:a(0),throw:a(1),return:a(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function a(i){return function(a){return function(i){if(n)throw new TypeError("Generator is already executing.");for(;o;)try{if(n=1,r&&(s=2&i[0]?r.return:i[0]?r.throw||((s=r.return)&&s.call(r),0):r.next)&&!(s=s.call(r,i[1])).done)return s;switch(r=0,s&&(i=[2&i[0],s.value]),i[0]){case 0:case 1:s=i;break;case 4:return o.label++,{value:i[1],done:!1};case 5:o.label++,r=i[1],i=[0];continue;case 7:i=o.ops.pop(),o.trys.pop();continue;default:if(!(s=o.trys,(s=s.length>0&&s[s.length-1])||6!==i[0]&&2!==i[0])){o=0;continue}if(3===i[0]&&(!s||i[1]>s[0]&&i[1]<s[3])){o.label=i[1];break}if(6===i[0]&&o.label<s[1]){o.label=s[1],s=i;break}if(s&&o.label<s[2]){o.label=s[2],o.ops.push(i);break}s[2]&&o.ops.pop(),o.trys.pop();continue}i=t.call(e,o)}catch(e){i=[6,e],r=0}finally{n=s=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,a])}}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.getFileContents=void 0;var fs_util_1=require("fs-util"),get_path_1=require("get-path"),getFileContents=function(e){return __awaiter(void 0,void 0,void 0,(function(){var t,n,r;return __generator(this,(function(s){switch(s.label){case 0:return e?(t=(0,get_path_1.getProjectRoot)())?(n=fs_util_1.path.join(t,e),fs_util_1.fs.existsSync(n)?[4/*yield*/,fs_util_1.fs.stat(n)]:[2/*return*/,{isSuccessful:!1,message:"File doesn't exist"}]):[2/*return*/,{isSuccessful:!1,message:"No project root"}]:[2/*return*/,{isSuccessful:!1,message:"No path"}];case 1:return(r=s.sent()).size>1048576||r.isDirectory()?[2/*return*/,{isSuccessful:!1,message:"That's a directory or bigger than 1MB"}]:[4/*yield*/,fs_util_1.fs.readFile(n,"utf8")];case 2:return[2/*return*/,{fileContents:s.sent(),isSuccessful:!0}]}}))}))};exports.getFileContents=getFileContents;
//# sourceMappingURL=getFileContents.js.map