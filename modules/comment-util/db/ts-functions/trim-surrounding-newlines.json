{
  "createdAt": 1662720663138,
  "updatedAt": 1662720663138,
  "deletedAt": 0,
  "createdFirstAt": 1662720663138,
  "apiAuthenticationStrategy": "admin",
  "isApiExposed": true,
  "isExported": false,
  "operationRelativeTypescriptFilePath": "src/general.ts",
  "commentsInside": [],
  "rawText": " (string: string): string => {\n  return string.startsWith(\"\\n\")\n    ? trimSurroundingNewlines(string.substring(1))\n    : string.endsWith(\"\\n\")\n    ? trimSurroundingNewlines(string.substring(0, string.length - 1))\n    : string;\n}",
  "name": "trimSurroundingNewlines",
  "slug": "trim-surrounding-newlines",
  "parameters": [],
  "description": "removes new lines at beginning and end\n\nNB: This function uses a small recursion! I don't know if this is very efficient, but shouldn't be too deep!\n\nNB: it should be noted that a newline apparently seems to be counting as a single character! Strange.",
  "returnType": {
    "rawType": "String",
    "typeDefinition": {
      "optional": false,
      "type": "string",
      "allOf": [
        {
          "transform": [
            "trim"
          ]
        },
        {
          "minLength": 1
        }
      ]
    },
    "typeCoverage": 0,
    "isArray": false,
    "isEnum": false,
    "isObject": false,
    "isPrimitive": true,
    "isEnumLiteral": false,
    "simplifiedSchema": {
      "type": "string"
    }
  },
  "maxIndentationDepth": 2,
  "size": {
    "characters": 479,
    "lines": 11,
    "bytes": 479,
    "bytesPerCharacter": 1,
    "charactersPerLine": 44,
    "linesPerFile": 11,
    "numberOfFiles": 1
  },
  "id": "vpUBcexNZlHBfVVP"
}