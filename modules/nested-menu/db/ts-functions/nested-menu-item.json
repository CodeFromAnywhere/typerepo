{
  "createdAt": 1663305539170,
  "updatedAt": 1663305539170,
  "deletedAt": 0,
  "createdFirstAt": 1663305539170,
  "apiAuthenticationStrategy": "admin",
  "isApiExposed": true,
  "isExported": true,
  "operationRelativeTypescriptFilePath": "src/NestedMenuItem.tsx",
  "commentsInside": [],
  "rawText": " (\n  props: MenuItemType & { headersClickable?: boolean; level?: number }\n) => {\n  const {\n    title,\n    children,\n    icon,\n    onClick,\n    onDoubleClick,\n    onContextMenu,\n    rightIcon,\n    target,\n    href,\n    showChildren,\n    level,\n    headersClickable,\n  } = props;\n\n  const router = useRouter();\n  const queryPath = router.asPath.substring(1);\n  const [isExpanded, toggleExpanded, setIsExpanded, setNotExpanded] =\n    useExpanded(href);\n\n  const isSelected = queryPath === href;\n  const realLevel = level || 0;\n\n  const hasChildren = children && children.length > 0 && showChildren;\n\n  const isClickable = headersClickable || !hasChildren;\n  const textClassName = isClickable\n    ? `${isSelected ? \"text-blue-500\" : \"\"} hover:text-blue-800 `\n    : undefined;\n\n  return (\n    <Div className=\"w-full\">\n      <Div\n        className={`w-full flex flex-row ${\n          isClickable\n            ? `hover:bg-gray-200 ${isSelected ? \"bg-gray-200 \" : \"\"}`\n            : \"\"\n        }`}\n      >\n        <ALink\n          style={{\n            paddingLeft: realLevel * 10 + 5,\n            paddingBottom: 10,\n            paddingTop: 10,\n          }}\n          className=\"flex flex-row justify-between\"\n          textClassName=\"flex flex-1 text-xs\"\n          href={\n            isClickable ? (!href || href.length === 0 ? \"/\" : href) : undefined\n          }\n          target={target}\n          onDoubleClick={onDoubleClick}\n          onContextMenu={onContextMenu}\n          onClick={(e) => {\n            onClick?.();\n            setIsExpanded();\n          }}\n        >\n          <Span\n            //line-clamp-1 truncate text-ellipsis\n            textClassName={textClassName}\n          >\n            {icon || \"\"}\n            {title}\n          </Span>\n          <Span className=\"flex flex-row\">\n            {rightIcon ? <Span>{rightIcon}</Span> : null}\n          </Span>\n        </ALink>\n        {hasChildren ? (\n          <Div className=\"text-3xl\" onClick={() => toggleExpanded()}>\n            {isExpanded ? \"˯\" : \"˃\"}\n          </Div>\n        ) : null}\n      </Div>\n      {hasChildren && isExpanded ? (\n        <Div className=\"w-full\">\n          {children.map((child, i) => {\n            return (\n              <NestedMenuItem\n                key={`menu-${href}-${i}`}\n                {...child}\n                headersClickable={headersClickable}\n                level={realLevel + 1}\n              />\n            );\n          })}\n        </Div>\n      ) : null}\n    </Div>\n  );\n}",
  "name": "NestedMenuItem",
  "slug": "nested-menu-item",
  "parameters": [],
  "description": "General purpose NestedMenuItem\n\nTODO: make style customizable",
  "returnType": {
    "rawType": "JSX.Element",
    "typeDefinition": {
      "optional": false,
      "$ref": "#/definitions/JSX.Element"
    },
    "typeCoverage": 0,
    "isArray": false,
    "isEnum": false,
    "isObject": true,
    "isPrimitive": false,
    "isEnumLiteral": false
  },
  "maxIndentationDepth": 8,
  "size": {
    "characters": 2540,
    "lines": 97,
    "bytes": 2542,
    "bytesPerCharacter": 1.000787401574803,
    "charactersPerLine": 26,
    "linesPerFile": 97,
    "numberOfFiles": 1
  },
  "id": "uXSnAVHUkiyBPpcU"
}