{
  "createdAt": 1663018075108,
  "updatedAt": 1663018075108,
  "deletedAt": 0,
  "createdFirstAt": 1663018075108,
  "apiAuthenticationStrategy": "admin",
  "isApiExposed": true,
  "isExported": true,
  "operationRelativeTypescriptFilePath": "src/findFolderWhereMatch.ts",
  "commentsInside": [],
  "rawText": " <T>(\n  fullSourcePath: string,\n  /**\n   * match must be truthy in order to match, and falsy if it's not a match\n   *\n   * the result of the matchFunction will be returned at the end of the recursion\n   */\n  matchFunction: (folderPath: string) => T\n): undefined | { folderPath: string; matchResult: T } => {\n  if (fullSourcePath === undefined) {\n    console.log(\"WTF\");\n    process.exit(1);\n  }\n  // Basecase to make sure that the provided sourcepath is valid\n  if (!fs.existsSync(fullSourcePath)) {\n    log(`full source path invalid ${fullSourcePath}`, { type: \"error\" });\n    return;\n  }\n\n  // Basecase to make sure that it doesn't go on infinitely, even if package.json doesn't exist anywhere\n  if (fullSourcePath === \"/\") {\n    log(`operationBasePath not working`, { type: \"error\" });\n    return;\n  }\n\n  const matchResult = matchFunction(fullSourcePath);\n\n  if (matchResult) return { folderPath: fullSourcePath, matchResult };\n\n  return findFolderWhereMatch(path.join(fullSourcePath, \"..\"), matchFunction);\n}",
  "name": "findFolderWhereMatch",
  "slug": "find-folder-where-match",
  "parameters": [],
  "description": "recursive. goes up a folder until it finds a package.json",
  "returnType": {
    "rawType": "{ folderPath: string; matchResult: T; } | undefined",
    "typeDefinition": {
      "type": "object",
      "properties": {
        "folderPath": {
          "type": "string",
          "allOf": [
            {
              "transform": [
                "trim"
              ]
            },
            {
              "minLength": 1
            }
          ]
        },
        "matchResult": {}
      },
      "required": [
        "folderPath",
        "matchResult"
      ],
      "optional": true
    },
    "typeCoverage": 0,
    "isArray": false,
    "isEnum": false,
    "isObject": false,
    "isPrimitive": false,
    "isEnumLiteral": false,
    "simplifiedSchema": {
      "properties": [
        {
          "name": "folderPath",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "matchResult",
          "required": true,
          "schema": {
            "properties": [],
            "type": "object"
          }
        }
      ],
      "type": "object"
    }
  },
  "maxIndentationDepth": 2,
  "size": {
    "characters": 1069,
    "lines": 31,
    "bytes": 1069,
    "bytesPerCharacter": 1,
    "charactersPerLine": 34,
    "linesPerFile": 31,
    "numberOfFiles": 1
  },
  "id": "IypDJwliVKRGWVyS"
}