[
  {
    "createdAt": 1668976985733,
    "updatedAt": 1668976985733,
    "deletedAt": 0,
    "createdFirstAt": 1668976985733,
    "name": "Comment",
    "slug": "comment",
    "operationRelativeTypescriptFilePath": "src/util/word-trimming.ts",
    "comment": "Trims a character from a word at the left until that character is not found anymore (recursive)",
    "rawStatement": "export const trimLeft = (word: string, character: string): string => {\n  if (word.startsWith(character))\n    return trimLeft(word.slice(character.length), character);\n  return word;\n};",
    "parameters": {},
    "types": [],
    "firstLine": 1,
    "lastLine": 3,
    "id": "ufkmdqxeetsvdndcuxgvnedp"
  },
  {
    "createdAt": 1668976985733,
    "updatedAt": 1668976985733,
    "deletedAt": 0,
    "createdFirstAt": 1668976985733,
    "name": "Comment",
    "slug": "comment",
    "operationRelativeTypescriptFilePath": "src/util/word-trimming.ts",
    "comment": "Removes x amount of characters from both sides of a word",
    "rawStatement": "export const trimAround = (word: string, trimLength: number): string => {\n  return word.slice(trimLength, word.length - trimLength);\n};",
    "parameters": {},
    "types": [],
    "firstLine": 10,
    "lastLine": 12,
    "id": "syadptlzzaaumlphsqapilma"
  }
]