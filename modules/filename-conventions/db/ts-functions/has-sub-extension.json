{
  "createdAt": 1662739800533,
  "updatedAt": 1662739800533,
  "deletedAt": 0,
  "createdFirstAt": 1662739800533,
  "apiAuthenticationStrategy": "admin",
  "isApiExposed": true,
  "isExported": true,
  "operationRelativeTypescriptFilePath": "src/hasSubExtension.ts",
  "commentsInside": [],
  "rawText": " (\n  srcRelativeFileId: string,\n  subExtensions: string | string[],\n  /**\n   * if true, also returns true if the extension is the complete name of the file\n   */\n  includeRootName?: boolean\n): boolean => {\n  const subExtensionsArray = makeArray(subExtensions);\n  const parts = srcRelativeFileId.split(\".\");\n  const isSinglePart = parts.length === 1;\n  const subExtension = parts.pop()!;\n  const includesSubExtension = subExtensionsArray.includes(subExtension);\n  const isCounting = includeRootName ? true : !isSinglePart;\n  const has = isCounting && includesSubExtension;\n  return has;\n}",
  "name": "hasSubExtension",
  "slug": "has-sub-extension",
  "parameters": [],
  "description": "Returns true if a fileid includes one of the specified subextensions.",
  "returnType": {
    "rawType": "{}",
    "typeDefinition": {
      "optional": false,
      "type": "boolean"
    },
    "typeCoverage": 0,
    "isArray": false,
    "isEnum": false,
    "isObject": false,
    "isPrimitive": true,
    "isEnumLiteral": false,
    "simplifiedSchema": {
      "type": "boolean"
    }
  },
  "maxIndentationDepth": 1,
  "size": {
    "characters": 656,
    "lines": 17,
    "bytes": 656,
    "bytesPerCharacter": 1,
    "charactersPerLine": 39,
    "linesPerFile": 17,
    "numberOfFiles": 1
  },
  "id": "WjujedKkcvTKrMxT"
}