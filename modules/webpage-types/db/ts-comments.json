[
  {
    "createdAt": 1668977152943,
    "updatedAt": 1668977152943,
    "deletedAt": 0,
    "createdFirstAt": 1668977152943,
    "name": "Comment",
    "slug": "comment",
    "operationRelativeTypescriptFilePath": "src/types.ts",
    "comment": "General purpose interface for a webpage. Should be compatible within the node.js environment and therefore should not contain any frontend functions. A nested variant (`NestedWebPage`) is used in the frontend to render the `nested-menu` with.",
    "rawStatement": "export type WebPage<T = undefined> = {\n  /**\n   * query-path to be visited in order to find the page on the web.\n   *\n   * can also be used for nested nav in apps\n   */\n  queryPath: string;\n\n  /**\n   * can be provided to search in a better way\n   *\n   * can provide representations of possible searches for this page, so you can find the pages much better\n   */\n  searchTerms?: string[];\n\n  /**\n   * Optionally, open this page in a new window\n   */\n  target?: \"_blank\";\n\n  /**\n   * if true, menu item should be omitted (but path may still be reachable if you so wish)\n   */\n  isMenuHidden?: boolean;\n\n  /**\n   * if provided, will be shown in the menu besides the title\n   * can be something nice like a notification or an emoji\n   */\n  menuTitleAugmentation?: string;\n  /**\n   * If provided, will be rendered as a tooltip when hovering over the menu item\n   */\n  menuTitleTooltip?: string;\n  /**\n   * if provided will be shown instead of the name of the file/folder in the menu. This makes it possible to provide better naming or add emoji's etc\n   */\n  menuTitle?: string;\n\n  /**\n   * Data connected to the `queryPath`. can take any shape or form based on your application.\n   *\n   * For example, you can provide a `projectRelativePath` to a file here\n   *\n   * The motivation to put this in a `extraData` object is because this makes the type super flexible.\n   *\n   * `.pageData` is not to be included into the menu, only to the page!\n   *\n   * Some ideas of what to provide here:\n   *\n   * - `projectRelativeFilePath` (so you can open the page if it's connected to some path)\n   * - `operationName`\n   * - `operationRelativePath`\n   *\n   *\n   * What not to provide here:\n   *\n   * - `AugmentedWord`[] (this is way too big, so it'd be a waste of query time to provide it for every page already)\n   * - stuff you already provided in the WebPage itself (it will also be available on the page, so why bother?)\n   */\n  pageData: T;\n};",
    "parameters": {},
    "types": [],
    "firstLine": 3,
    "lastLine": 5,
    "id": "myuexdakhwhxhxsqhyrmwcka"
  },
  {
    "createdAt": 1668977152943,
    "updatedAt": 1668977152943,
    "deletedAt": 0,
    "createdFirstAt": 1668977152943,
    "name": "Comment",
    "slug": "comment",
    "operationRelativeTypescriptFilePath": "src/types.ts",
    "comment": "Only used for menu, so can be undefined because it shouldn't be available",
    "rawStatement": "export type NestedWebPage = ChildObject<WebPage<undefined>>;",
    "parameters": {},
    "types": [],
    "firstLine": 73,
    "lastLine": 75,
    "id": "yffgfnfipjbuexkuvtxcvqaq"
  }
]