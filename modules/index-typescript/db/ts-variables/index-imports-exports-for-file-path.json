{
  "createdAt": 1673863409655,
  "updatedAt": 1673863409655,
  "deletedAt": 0,
  "createdFirstAt": 1673863409655,
  "classification": "const",
  "comments": [],
  "isExported": true,
  "name": "indexImportsExportsForFilePath",
  "slug": "index-imports-exports-for-file-path",
  "operationRelativeTypescriptFilePath": "src/indexImportsExportsForFilePath.ts",
  "type": {
    "rawType": "import(\"/Users/king/King/operations/tools/control-project/watch-types/build/ProjectWatcher\").ProjectWatcher<any>",
    "typeDefinition": {
      "type": "object",
      "properties": {
        "startupStrategy": {
          "enum": [
            "ignore",
            "sync",
            "async",
            "queue"
          ],
          "x-enumNames": [
            "ignore",
            "sync",
            "async",
            "queue"
          ],
          "type": "string"
        },
        "filter": {
          "type": "object",
          "properties": {}
        },
        "config": {
          "type": "object",
          "properties": {
            "version": {
              "type": "string",
              "allOf": [
                {
                  "transform": [
                    "trim"
                  ]
                },
                {
                  "minLength": 1
                }
              ]
            },
            "versionInfo": {
              "type": "object",
              "properties": {}
            },
            "isHeavy": {
              "type": "boolean"
            },
            "isInternetRequired": {
              "type": "boolean"
            },
            "isBrowserRequired": {
              "type": "boolean"
            },
            "isPublic": {
              "type": "boolean"
            },
            "isApiExposed": {
              "type": "boolean"
            },
            "domain": {
              "type": "string",
              "allOf": [
                {
                  "transform": [
                    "trim"
                  ]
                },
                {
                  "minLength": 1
                }
              ]
            },
            "isPaid": {
              "enum": [
                "ru",
                "isSuccessful"
              ],
              "x-enumNames": [
                "ru",
                "isSuccessful"
              ],
              "type": "string"
            },
            "price": {
              "type": "number"
            },
            "allowedRoles": {
              "type": "array",
              "items": {
                "type": "string",
                "allOf": [
                  {
                    "transform": [
                      "trim"
                    ]
                  },
                  {
                    "minLength": 1
                  }
                ]
              }
            },
            "groupAuthorization": {
              "type": "object",
              "properties": {}
            },
            "canCache": {
              "type": "boolean"
            },
            "runEveryPeriod": {},
            "classification": {
              "enum": [
                "wise",
                "dumb",
                "smart",
                "genius",
                "react-with-native",
                "cli",
                "test"
              ],
              "x-enumNames": [
                "wise",
                "dumb",
                "smart",
                "genius",
                "react-with-native",
                "cli",
                "test"
              ],
              "type": "string"
            }
          },
          "required": [
            "runEveryPeriod"
          ]
        }
      },
      "required": [
        "filter"
      ],
      "optional": false
    },
    "typeCoverage": 0,
    "isArray": false,
    "isEnum": false,
    "isObject": true,
    "isPrimitive": false,
    "isEnumLiteral": false,
    "simplifiedSchema": {
      "properties": [
        {
          "name": "startupStrategy",
          "required": false,
          "schema": {
            "enum": [
              "ignore",
              "sync",
              "async",
              "queue"
            ],
            "type": "string"
          }
        },
        {
          "name": "filter",
          "required": true,
          "schema": {
            "properties": [],
            "type": "object"
          }
        },
        {
          "name": "config",
          "required": false,
          "schema": {
            "properties": [
              {
                "name": "version",
                "required": false,
                "schema": {
                  "type": "string"
                }
              },
              {
                "name": "versionInfo",
                "required": false,
                "schema": {
                  "properties": [],
                  "type": "object"
                }
              },
              {
                "name": "isHeavy",
                "required": false,
                "schema": {
                  "type": "boolean"
                }
              },
              {
                "name": "isInternetRequired",
                "required": false,
                "schema": {
                  "type": "boolean"
                }
              },
              {
                "name": "isBrowserRequired",
                "required": false,
                "schema": {
                  "type": "boolean"
                }
              },
              {
                "name": "isPublic",
                "required": false,
                "schema": {
                  "type": "boolean"
                }
              },
              {
                "name": "isApiExposed",
                "required": false,
                "schema": {
                  "type": "boolean"
                }
              },
              {
                "name": "domain",
                "required": false,
                "schema": {
                  "type": "string"
                }
              },
              {
                "name": "isPaid",
                "required": false,
                "schema": {
                  "enum": [
                    "ru",
                    "isSuccessful"
                  ],
                  "type": "string"
                }
              },
              {
                "name": "price",
                "required": false,
                "schema": {
                  "type": "number"
                }
              },
              {
                "name": "allowedRoles",
                "required": false,
                "schema": {
                  "items": [
                    {
                      "schema": {
                        "type": "string"
                      },
                      "name": null
                    }
                  ],
                  "type": "array"
                }
              },
              {
                "name": "groupAuthorization",
                "required": false,
                "schema": {
                  "properties": [],
                  "type": "object"
                }
              },
              {
                "name": "canCache",
                "required": false,
                "schema": {
                  "type": "boolean"
                }
              },
              {
                "name": "runEveryPeriod",
                "required": true,
                "schema": {
                  "properties": [],
                  "type": "object"
                }
              },
              {
                "name": "classification",
                "required": false,
                "schema": {
                  "enum": [
                    "wise",
                    "dumb",
                    "smart",
                    "genius",
                    "react-with-native",
                    "cli",
                    "test"
                  ],
                  "type": "string"
                }
              }
            ],
            "type": "object"
          }
        }
      ],
      "type": "object"
    }
  },
  "value": "async (\n  eventName,\n  filePath\n) => {\n  const name = path.parse(filePath).name;\n  process.stdout.write(`Change detected: ${name}\\n`);\n  const operationBasePath = findOperationBasePath(filePath);\n  if (!operationBasePath) {\n    console.log(\"\\nCouldn't find operationBasePath\");\n    return;\n  }\n  process.stdout.write(`Indexing operation imports ...`);\n\n  await findAndWriteImportsExports(operationBasePath);\n\n  console.log(\"âœ…\\n\");\n}",
  "description": "",
  "id": "zgsvukctkrmabwgdeqjsvvtx"
}