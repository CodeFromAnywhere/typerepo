{
  "createdAt": 1668328734021,
  "updatedAt": 1668328734021,
  "deletedAt": 0,
  "createdFirstAt": 1668328734021,
  "id": "IcOyBmsRzHfoLRuh",
  "dependencies": {
    "code-types": "0.0.1",
    "comment-util": "0.0.1",
    "convert-case": "0.0.1",
    "database": "0.0.1",
    "fs-util": "1.0.5",
    "get-imported-dependencies": "0.0.0",
    "get-path": "0.0.1",
    "js-util": "0.0.1",
    "json-schema": "*",
    "lodash": "*",
    "log": "0.0.1",
    "markdown-parse-js": "0.0.1",
    "matter-types": "0.0.1",
    "model-types": "0.0.1",
    "one-by-one": "0.0.1",
    "operation-util": "0.0.1",
    "path-util": "0.0.1",
    "read-json-file": "0.0.1",
    "reflect-metadata": "^0.1.13",
    "schema-util": "0.0.1",
    "ts-json-schema-generator": "^1.0.0",
    "ts-morph": "^15.0.0",
    "ts-morph-util": "0.0.1",
    "fs-util-js": "0.0.1",
    "watch-types": "0.0.1",
    "get-imports-exports": "0.0.1",
    "cleanup-typescript-database": "0.0.1",
    "markdown-types": "0.0.1"
  },
  "description": "This repo is used to generate the typescript index.\n\nSome important conventions I'm applying:\n\n1. The generated index doesn't know the absolute location, which makes it possible to move around the Project in the OS\n\n2. The generated index only tells you information about this very operation. All links with other operations should be done in postprocessing\n\n3. Every generated index has an `IndexId`",
  "devDependencies": {
    "@types/lodash": "^4.14.189",
    "@types/node": "^18.0.1",
    "typescript": "^4.7.2"
  },
  "main": "build/index.js",
  "scripts": {
    "dev": "tsc -w",
    "build": "tsc",
    "test": "node ./build/cli.js",
    "up": "npm version patch -f",
    "pub": "yarn up && npm publish"
  },
  "source": "src/index.ts",
  "version": "0.0.1",
  "name": "index-typescript",
  "language": "english",
  "slug": "index-typescript",
  "operation": {
    "buildResultIndexed": {
      "buildSucceeded": true,
      "indexImportExportError": "",
      "indexInteracesErrors": [
        "No schema/definitions found for /Users/king/King/operations/tools/typescript/index-typescript/src/typeToSchema.ts. Error: Error: Reference type not set yet"
      ],
      "lintProblems": []
    },
    "classificationIndexed": "node-cjs",
    "coreDependenciesIndexed": [],
    "folderNameIndexed": "index-typescript",
    "hasGeneratedDependenciesIndexed": false,
    "lastPullTimeAtIndexed": 0,
    "lastRebuildAt": 1673863484849,
    "operationDependenciesIndexed": [
      "getLastFolder",
      "findOperationBasePath",
      "db",
      "isAbsoluteImport",
      "notEmpty",
      "Creation",
      "TsInterface",
      "findOperationBasePath",
      "getOperationRelativePath",
      "getTsMorphProject",
      "getHasGeneric",
      "CommentType",
      "commentTypes",
      "TsInterface",
      "MaybeInteface",
      "log",
      "path",
      "fs",
      "getFolder",
      "getLastFolder",
      "findOperationBasePath",
      "makeRelative",
      "mergeNestedObject",
      "notEmpty",
      "Creation",
      "db",
      "TsComment",
      "Creation",
      "DbStorageMethod",
      "lowerCaseArray",
      "Frontmatter",
      "dbStorageMethods",
      "DbStorageMethod",
      "Frontmatter",
      "generateId",
      "TsIndexModelType",
      "kebabCase",
      "findOperationBasePath",
      "getOperationPathParse",
      "FunctionParameter",
      "TsInterface",
      "notEmpty",
      "Creation",
      "getSchema",
      "simplifySchema",
      "TsInterface",
      "notEmpty",
      "Creation",
      "SizeSummary",
      "byteCount",
      "DbStorageMethod",
      "notEmpty",
      "kebabCase",
      "TsVariable",
      "TsFunction",
      "TsComment",
      "TsInterface",
      "RunEveryPeriodEnum",
      "runEveryPeriodStringArray",
      "Creation",
      "log",
      "stripComment",
      "parseFrontmatterMarkdownString",
      "Frontmatter",
      "TypeInfo",
      "log",
      "simplifySchema",
      "OperationPathParse",
      "fs",
      "path",
      "getOperationPathParse",
      "log",
      "getExtension",
      "WatchEventType",
      "ProjectWatcher",
      "findAndWriteImportsExports",
      "path",
      "findOperationBasePath",
      "getFolder",
      "path",
      "getTsMorphProject",
      "mergeNestedObject",
      "notEmpty",
      "findOperationBasePath",
      "getProjectRoot",
      "log",
      "readJsonFile",
      "oneByOne",
      "Operation",
      "db",
      "oneByOne",
      "fs",
      "db",
      "TsComment",
      "TsInterface",
      "TsLintWarning",
      "log",
      "calculatePathMetaData",
      "Creation",
      "mergeNestedObject",
      "onlyUnique2",
      "ProjectWatcher",
      "path",
      "TsComment",
      "stripComment",
      "Creation",
      "TsIndexModelType",
      "parseFrontmatterMarkdownString",
      "kebabCase",
      "MarkdownParse",
      "getExtension",
      "ProjectWatcher",
      "cleanupTsDatabase",
      "findOperationBasePath",
      "fs",
      "getFolder",
      "getLastFolder",
      "path",
      "getSchema",
      "simplifySchema",
      "TsInterface",
      "kebabCase",
      "slugify",
      "parseFrontmatterMarkdownString",
      "notEmpty",
      "stripComment",
      "Creation",
      "findOperationBasePath",
      "getOperationRelativePath"
    ],
    "packageDependenciesIndexed": [
      "SourceFile",
      "Config",
      "createGenerator",
      "Schema",
      "Expression",
      "Statement",
      "SyntaxKind",
      "VariableDeclaration",
      "JSONSchema7",
      "SourceFile",
      "SyntaxKind",
      "ts",
      "TypeFormatFlags",
      "VariableDeclaration",
      "xor",
      "Schema",
      "Type",
      "Project",
      "CommentRange",
      "Schema",
      "last",
      "merge",
      "set",
      "Decorator",
      "Type",
      "Symbol",
      "SymbolFlags"
    ],
    "relativeOperationLocationPathIndexed": "operations/tools/typescript",
    "sizeIndexed": {
      "codeSize": {
        "numberOfFiles": 29,
        "lines": 2094,
        "characters": 63365,
        "bytes": 63365
      },
      "dataSize": {
        "numberOfFiles": 2,
        "lines": 301,
        "characters": 7339,
        "bytes": 7339
      },
      "textSize": {
        "numberOfFiles": 8,
        "lines": 678,
        "characters": 19956,
        "bytes": 19956
      },
      "size": {
        "bytes": 90660,
        "characters": 90660,
        "lines": 3073,
        "numberOfFiles": 39
      }
    },
    "hasGeneratedImportsIndexed": false
  }
}
