{
  "createdAt": 1667976858669,
  "updatedAt": 1667976858669,
  "deletedAt": 0,
  "createdFirstAt": 1667976858669,
  "publicAuthorization": [
    "read",
    "search"
  ],
  "isApiExposed": false,
  "isPostApi": false,
  "isGetApi": false,
  "isExported": true,
  "operationRelativeTypescriptFilePath": "src/expose/pdf.ts",
  "commentsInside": [],
  "rawText": " ({\n  absoluteFilePath,\n  markdown,\n  markdownParse,\n  pdfAbsoluteFilePath,\n}: {\n  absoluteFilePath?: string;\n  markdown?: string;\n  markdownParse?: MarkdownParse;\n  pdfAbsoluteFilePath?: string;\n}) => {\n  //\n}",
  "name": "mdToPdf",
  "slug": "md-to-pdf",
  "parameters": [
    {
      "name": "{\n  absoluteFilePath,\n  markdown,\n  markdownParse,\n  pdfAbsoluteFilePath,\n}",
      "schema": {
        "type": "object",
        "properties": {
          "absoluteFilePath": {
            "type": "string"
          },
          "markdown": {
            "type": "string"
          },
          "markdownParse": {
            "$ref": "#/definitions/MarkdownParse"
          },
          "pdfAbsoluteFilePath": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "simplifiedSchema": {
        "properties": [
          {
            "name": "absoluteFilePath",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "markdown",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "markdownParse",
            "required": false,
            "schema": {
              "fullComment": "",
              "properties": [
                {
                  "name": "fileName",
                  "required": false,
                  "schema": {
                    "fullComment": "if available, this can be the filename of the markdown in this markdown-parse. Can be used for things like merging",
                    "type": "string"
                  }
                },
                {
                  "name": "createdAt",
                  "required": false,
                  "schema": {
                    "type": "number"
                  }
                },
                {
                  "name": "openedAt",
                  "required": false,
                  "schema": {
                    "type": "number"
                  }
                },
                {
                  "name": "updatedAt",
                  "required": false,
                  "schema": {
                    "type": "number"
                  }
                },
                {
                  "name": "deletedAt",
                  "required": false,
                  "schema": {
                    "type": "number"
                  }
                },
                {
                  "name": "createdFirstAt",
                  "required": false,
                  "schema": {
                    "type": "number"
                  }
                },
                {
                  "name": "content",
                  "required": false,
                  "schema": {
                    "fullComment": "structured content based on h1, h2, h3, etc (paragraphs, recursive)",
                    "items": [],
                    "type": "array"
                  }
                },
                {
                  "name": "raw",
                  "required": true,
                  "schema": {
                    "fullComment": "raw markdown without frontmatter",
                    "type": "string"
                  }
                }
              ],
              "type": "object"
            }
          },
          {
            "name": "pdfAbsoluteFilePath",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "type": "object"
      },
      "required": true
    }
  ],
  "description": "Have function `mdToPdf` like the vscode plugin. Probably exists.\n\nHowever, may be good to do it myself since I want different renderings",
  "returnType": {
    "rawType": "void",
    "typeCoverage": 0,
    "isArray": false,
    "isEnum": false,
    "isObject": false,
    "isPrimitive": false,
    "isEnumLiteral": false
  },
  "maxIndentationDepth": 1,
  "size": {
    "characters": 346,
    "lines": 15,
    "bytes": 346,
    "bytesPerCharacter": 1,
    "charactersPerLine": 23,
    "linesPerFile": 15,
    "numberOfFiles": 1
  },
  "id": "tuovylpytphutwenqnffifie"
}