{
  "createdAt": 1667976870636,
  "updatedAt": 1667976870636,
  "deletedAt": 0,
  "createdFirstAt": 1667976870636,
  "publicAuthorization": [
    "read",
    "search"
  ],
  "isApiExposed": false,
  "isPostApi": false,
  "isGetApi": false,
  "isExported": true,
  "operationRelativeTypescriptFilePath": "src/parsing/markdownToSayable.ts",
  "commentsInside": [],
  "rawText": " ({\n  markdown,\n  markdownFilePath,\n}: {\n  markdownFilePath: string;\n  markdown: MarkdownParse;\n}): Sayable[] => {\n  //1 get markdownparse\n\n  //2. alter every piece of content as needed into a sayable text that can be understood through audio only\n\n  /*\n    - headings should be paused before (long) and after (shorter)\n    - headings should be numbered\n    - images and other inline assets should be referenced with alt text, unless it's an audio file\n    - new alineas should get some pause before\n    - OPTIONAL: maybe, when starting a (sub)chapter, tell the reader how many subchapters there are in this (sub)chapter. This can give a better orientation\n    */\n\n  return [];\n}",
  "name": "markdownToSayable",
  "slug": "markdown-to-sayable",
  "parameters": [
    {
      "name": "{\n  markdown,\n  markdownFilePath,\n}",
      "schema": {
        "type": "object",
        "properties": {
          "markdownFilePath": {
            "type": "string"
          },
          "markdown": {
            "$ref": "#/definitions/MarkdownParse"
          }
        },
        "required": [
          "markdownFilePath",
          "markdown"
        ],
        "additionalProperties": false
      },
      "simplifiedSchema": {
        "properties": [
          {
            "name": "markdownFilePath",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "markdown",
            "required": true,
            "schema": {
              "fullComment": "",
              "properties": [
                {
                  "name": "fileName",
                  "required": false,
                  "schema": {
                    "fullComment": "if available, this can be the filename of the markdown in this markdown-parse. Can be used for things like merging",
                    "type": "string"
                  }
                },
                {
                  "name": "createdAt",
                  "required": false,
                  "schema": {
                    "type": "number"
                  }
                },
                {
                  "name": "openedAt",
                  "required": false,
                  "schema": {
                    "type": "number"
                  }
                },
                {
                  "name": "updatedAt",
                  "required": false,
                  "schema": {
                    "type": "number"
                  }
                },
                {
                  "name": "deletedAt",
                  "required": false,
                  "schema": {
                    "type": "number"
                  }
                },
                {
                  "name": "createdFirstAt",
                  "required": false,
                  "schema": {
                    "type": "number"
                  }
                },
                {
                  "name": "content",
                  "required": false,
                  "schema": {
                    "fullComment": "structured content based on h1, h2, h3, etc (paragraphs, recursive)",
                    "items": [],
                    "type": "array"
                  }
                },
                {
                  "name": "raw",
                  "required": true,
                  "schema": {
                    "fullComment": "raw markdown without frontmatter",
                    "type": "string"
                  }
                }
              ],
              "type": "object"
            }
          }
        ],
        "type": "object"
      },
      "required": true
    }
  ],
  "description": "all mp3s should be stored in a separate location because we don't need them in the file system and we don't reference them, as they are data that is located by convention. all markdowns should have a linked `TextToSpeechAudio[]` which is auto updated every time `dev` is ran. `TextToSpeechAudio` also includes infromation about the `duration`, `voice` and more...\n\na bigger `.md.mp3` file is auto-created for every markdown file that concatenates all `sayable` audio pieces in the right order, but also includes the audio pieces in between.",
  "returnType": {
    "rawType": "import(\"/Users/king/King/operations/tools/parsing/file-conversion/md/markdown-parsings/src/expose/sayablesToMp3\").Sayable[]",
    "typeDefinition": {
      "optional": false,
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "sayableText": {
            "type": "string",
            "allOf": [
              {
                "transform": [
                  "trim"
                ]
              },
              {
                "minLength": 1
              }
            ]
          },
          "voiceFileRelativePath": {
            "type": "string",
            "allOf": [
              {
                "transform": [
                  "trim"
                ]
              },
              {
                "minLength": 1
              }
            ]
          }
        }
      }
    },
    "typeCoverage": 0,
    "isArray": true,
    "isEnum": false,
    "isObject": true,
    "isPrimitive": false,
    "isEnumLiteral": false,
    "simplifiedSchema": {
      "items": [
        {
          "schema": {
            "properties": [
              {
                "name": "sayableText",
                "required": false,
                "schema": {
                  "type": "string"
                }
              },
              {
                "name": "voiceFileRelativePath",
                "required": false,
                "schema": {
                  "type": "string"
                }
              }
            ],
            "type": "object"
          },
          "name": null
        }
      ],
      "type": "array"
    }
  },
  "maxIndentationDepth": 2,
  "size": {
    "characters": 1219,
    "lines": 23,
    "bytes": 1219,
    "bytesPerCharacter": 1,
    "charactersPerLine": 53,
    "linesPerFile": 23,
    "numberOfFiles": 1
  },
  "id": "usscgyadxkyexrkibwtmbeik"
}