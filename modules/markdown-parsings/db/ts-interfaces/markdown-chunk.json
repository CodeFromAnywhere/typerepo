{
  "createdAt": 1662720261534,
  "updatedAt": 1662720261534,
  "deletedAt": 0,
  "createdFirstAt": 1662720261534,
  "id": "markdown-chunk",
  "name": "MarkdownChunk",
  "slug": "markdown-chunk",
  "operationRelativeTypescriptFilePath": "src/parsing/parsing.ts",
  "hasGeneric": false,
  "isExported": false,
  "isOperationIndex": false,
  "description": "",
  "isDbModel": false,
  "commentsInside": [],
  "type": {
    "typeDefinition": {
      "type": "object",
      "properties": {
        "level": {
          "$ref": "#/definitions/MarkdownContentLevel"
        },
        "content": {
          "type": "string"
        },
        "markdownEmbed": {
          "$ref": "#/definitions/MarkdownEmbed"
        },
        "markdownLink": {
          "$ref": "#/definitions/MarkdownLink"
        },
        "title": {
          "type": "string",
          "description": "NB: title can also be an empty string (\"\")"
        },
        "children": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MarkdownChunk"
          },
          "description": "all content until the next title. it's either a content array if there's any titles found, or a string[] if it's paragraphs"
        }
      },
      "required": [
        "level"
      ],
      "additionalProperties": false
    },
    "simplifiedSchema": {
      "properties": [
        {
          "name": "level",
          "required": true,
          "schema": {
            "description": "0 is a paragraph 1-6 is h1 until h6",
            "type": "number"
          }
        },
        {
          "name": "content",
          "required": false,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "markdownEmbed",
          "required": false,
          "schema": {
            "description": "Anything in the format `![alt](src)`\n\nNB: I need to be very clear how this one works",
            "properties": [
              {
                "name": "alt",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "name": "src",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "name": "type",
                "required": true,
                "schema": {
                  "description": "type of asset that is being embedded",
                  "enum": [
                    "youtube",
                    "video",
                    "image",
                    "audio",
                    "markdown",
                    "json",
                    "typescript",
                    "file"
                  ],
                  "type": "string"
                }
              }
            ],
            "type": "object"
          }
        },
        {
          "name": "markdownLink",
          "required": false,
          "schema": {
            "description": "Anything in the format `[alt](href)`\n\nIt needs to be clear how this works. There is a convention for this, and I should implement that as good as possible, and document it here",
            "properties": [
              {
                "name": "alt",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "name": "href",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "name": "type",
                "required": true,
                "schema": {
                  "description": "type of asset that is being embedded",
                  "enum": [
                    "youtube",
                    "video",
                    "image",
                    "audio",
                    "markdown",
                    "json",
                    "typescript",
                    "file"
                  ],
                  "type": "string"
                }
              }
            ],
            "type": "object"
          }
        },
        {
          "name": "title",
          "required": false,
          "schema": {
            "description": "NB: title can also be an empty string (\"\")",
            "type": "string"
          }
        },
        {
          "name": "children",
          "required": false,
          "schema": {
            "description": "all content until the next title. it's either a content array if there's any titles found, or a string[] if it's paragraphs",
            "items": [
              {
                "schema": {
                  "circularRefName": "MarkdownChunk",
                  "properties": [],
                  "type": "object"
                },
                "name": "MarkdownChunk"
              }
            ],
            "type": "array"
          }
        }
      ],
      "type": "object"
    },
    "typeCoverage": 0,
    "rawType": "MarkdownChunk",
    "isArray": false,
    "isEnum": false,
    "isEnumLiteral": false,
    "isObject": false,
    "isPrimitive": false
  }
}