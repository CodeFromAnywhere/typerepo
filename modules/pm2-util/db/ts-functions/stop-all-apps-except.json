{
  "createdAt": 1668773983494,
  "updatedAt": 1668773983494,
  "deletedAt": 0,
  "createdFirstAt": 1668773983494,
  "isApiExposed": true,
  "isExported": true,
  "groupAuthorization": {},
  "operationRelativeTypescriptFilePath": "src/stopAllAppsExcept.ts",
  "commentsInside": [],
  "rawText": " async (\n  ignore: string[] = []\n): Promise<void> => {\n  const apps = await listApps();\n\n  console.dir({ appsLength: apps.apps?.length, apps: apps }, { depth: 200 });\n  if (!apps.isSuccessful || !apps.apps) {\n    log(`something is wrong with listApps`, { type: \"error\" });\n    return;\n  }\n\n  const appsToQuit = apps.apps\n    .filter((app) => {\n      if (!app.operationName) return;\n\n      return !ignore.includes(app.operationName);\n    })\n    .map((x) => x.operationName);\n\n  await stopApps(appsToQuit);\n\n  log(`Stopped ${appsToQuit.length} apps`, { type: \"success\" });\n}",
  "name": "stopAllAppsExcept",
  "slug": "stop-all-apps-except",
  "parameters": [
    {
      "name": "ignore",
      "schema": {
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      "simplifiedSchema": {
        "items": [
          {
            "schema": {
              "type": "string"
            },
            "name": null
          }
        ],
        "type": "array"
      },
      "required": false
    }
  ],
  "description": "Stops all apps except some specified ones",
  "returnType": {
    "rawType": "Promise<void>",
    "typeCoverage": 0,
    "isArray": false,
    "isEnum": false,
    "isObject": false,
    "isPrimitive": false,
    "isEnumLiteral": false
  },
  "maxIndentationDepth": 3,
  "size": {
    "characters": 613,
    "lines": 23,
    "bytes": 613,
    "bytesPerCharacter": 1,
    "charactersPerLine": 27,
    "linesPerFile": 23,
    "numberOfFiles": 1
  },
  "id": "kbasbqaxitstzvlpvfknpqrn"
}