{
  "createdAt": 1666264483437,
  "updatedAt": 1666264483437,
  "deletedAt": 0,
  "createdFirstAt": 1666264483437,
  "classification": "const",
  "comments": [],
  "isExported": true,
  "name": "exitIfOperationsChange",
  "slug": "exit-if-operations-change",
  "operationRelativeTypescriptFilePath": "src/general.ts",
  "type": {
    "rawType": "(allOperationSourcePaths: string[], manualProjectRoot?: string | undefined) => void",
    "typeDefinition": {
      "type": "object",
      "properties": {},
      "optional": false
    },
    "typeCoverage": 0,
    "isArray": false,
    "isEnum": false,
    "isObject": true,
    "isPrimitive": false,
    "isEnumLiteral": false,
    "simplifiedSchema": {
      "properties": [],
      "type": "object"
    }
  },
  "value": "(\n  allOperationSourcePaths: string[],\n  manualProjectRoot?: string\n) => {\n  setInterval(async () => {\n    const newOperationSourcePaths = await getAllOperationSourcePaths({\n      manualProjectRoot,\n    });\n\n    const isSame = allOperationSourcePaths.reduce(\n      (same, p, i) => (newOperationSourcePaths[i] === p ? same : false),\n      true\n    );\n\n    //TODO: if you change a folder name, it's not detected now.\n    if (!isSame) {\n      log(\"ðŸ‘€ I detected a change in your operations, restarting\", {\n        type: \"warning\",\n      });\n      process.exit();\n    }\n  }, 5000);\n}",
  "description": "every 5 seconds compares if the operationsourcepaths have changed. If so, exits the process",
  "id": "yijukyuygypwrfalhhkdfpwt"
}