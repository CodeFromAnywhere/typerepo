[
  {
    "createdAt": 1666264484878,
    "updatedAt": 1666264484878,
    "deletedAt": 0,
    "createdFirstAt": 1666264484878,
    "name": "Comment",
    "slug": "comment",
    "operationRelativeTypescriptFilePath": "src/watchOperations.ts",
    "comment": "watches all operations and does much more",
    "rawStatement": "export const watchOperations = async (config?: {\n  /**\n   * manual project root where the operations to watch should be located\n   */\n  manualProjectRoot?: string;\n}) => {\n  const manualProjectRoot = config?.manualProjectRoot;\n  const projectRoot = manualProjectRoot || getProjectRoot();\n  // NB: fix to globally alter real fs in order to fix EMFile error that happens in TSMorph (see https://github.com/isaacs/node-graceful-fs)\n  gracefulFs.gracefulify(realFs);\n\n  const allOperationSourcePaths = await getAllOperationSourcePaths({\n    manualProjectRoot,\n  });\n\n  exitIfOperationsChange(allOperationSourcePaths, projectRoot);\n\n  if (!manualProjectRoot) {\n    gitCommitAllCron(projectRoot);\n  }\n\n  log(\n    `Hi, I'm 👁 👁 Watching ${allOperationSourcePaths.length} operations at ${projectRoot}`,\n    { type: \"success\" }\n  );\n\n  const watchFunction = pickWatcher();\n\n  watchFunction({\n    folders: allOperationSourcePaths,\n    debug: true,\n    onChange: async ({ eventType, filePaths, operationBasePath }) => {\n      if (filePaths.length === 0) {\n        return;\n      }\n\n      const filteredFilePaths = filePaths.filter(\n        (x) => !x.endsWith(\"/index.ts\")\n      );\n\n      if (filteredFilePaths.length === 0) {\n        return;\n      }\n\n      log(\n        `OnChange triggered! ${filePaths\n          .map((f) => path.parse(f).name)\n          .join(\",\")}`,\n        {\n          type: \"warning\",\n        }\n      );\n\n      await rebuildOperation({\n        operationBasePath,\n        operationManualProjectRoot: manualProjectRoot,\n        typerepoManualProjectRoot: undefined,\n        filePaths: filteredFilePaths,\n      });\n    },\n  });\n};",
    "parameters": {},
    "types": [],
    "firstLine": 10,
    "lastLine": 12,
    "id": "dssclltvtojhxypaorvsuiax"
  }
]