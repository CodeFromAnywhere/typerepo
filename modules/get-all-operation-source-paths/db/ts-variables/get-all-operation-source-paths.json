{
  "createdAt": 1666259019126,
  "updatedAt": 1666259019126,
  "deletedAt": 0,
  "createdFirstAt": 1666259019126,
  "classification": "const",
  "comments": [],
  "isExported": true,
  "name": "getAllOperationSourcePaths",
  "slug": "get-all-operation-source-paths",
  "operationRelativeTypescriptFilePath": "src/getAllOperationSourcePaths.ts",
  "type": {
    "rawType": "(config?: { manualProjectRoot?: string | undefined; } | undefined) => unknown",
    "typeDefinition": {
      "type": "object",
      "properties": {},
      "optional": false
    },
    "typeCoverage": 0,
    "isArray": false,
    "isEnum": false,
    "isObject": true,
    "isPrimitive": false,
    "isEnumLiteral": false,
    "simplifiedSchema": {
      "properties": [],
      "type": "object"
    }
  },
  "value": "async (config?: {\n  manualProjectRoot?: string;\n}) => {\n  const manualProjectRoot = config?.manualProjectRoot;\n  const operationFolders: string[] = await exploreOperationFolders({\n    basePath: getPathsWithOperations({ manualProjectRoot }),\n  });\n\n  const operationSourceFolders = operationFolders.reduce(\n    (allSources, operationPath) => {\n      const srcPath = path.join(operationPath, \"src\");\n\n      if (!fs.existsSync(srcPath)) return allSources;\n\n      return allSources.concat(\n        [srcPath]\n        // TODO: this function would be great, but the inputs in tsconfig contain glob patterns and that doesn't work.\n        // getPackageSourcePaths({ packageFolder: operationPath })\n      );\n    },\n    [] as string[]\n  );\n\n  return operationSourceFolders;\n}",
  "description": "returns src folder paths of all operations",
  "id": "wntjyyuhwvrhlblhnpyzyihs"
}