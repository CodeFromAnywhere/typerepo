{
  "createdAt": 1672134480481,
  "updatedAt": 1672134480481,
  "deletedAt": 0,
  "createdFirstAt": 1672134480481,
  "isApiExposed": true,
  "isExported": true,
  "groupAuthorization": {},
  "operationRelativeTypescriptFilePath": "src/retryClickAndWaitSelector.ts",
  "commentsInside": [],
  "rawText": " async (props: {\n  /** the page element from puppeteer got with browser.pages */\n  page: any;\n  /** the css selector to search for */\n  selector: string | string[];\n  /** the options */\n  selectorOptions?: any;\n  /** the css selector to click after */\n  selectorToClick: string;\n  /**  maxium time to retry. defaults to 30 seconds. */\n  maxTime: number;\n}): Promise<{ success: boolean; found?: any }> => {\n  const {\n    page,\n    selector,\n    selectorOptions,\n    selectorToClick,\n    maxTime = 30000,\n  } = props;\n  return new Promise(async (resolve, reject) => {\n    let totalTime = 0;\n    while (totalTime < maxTime) {\n      try {\n        const found = await page.waitForSelector(selector, {\n          ...selectorOptions,\n          timeout: 1000,\n        });\n        resolve({ success: true, found });\n        return;\n      } catch (err) {\n        try {\n          await page.click(selectorToClick);\n        } catch (insideErr) {\n          //console.log('inside error ! continuing...');\n        }\n\n        totalTime += 1000;\n        console.log(\"retrying...\");\n      }\n    }\n    resolve({ success: false });\n  });\n}",
  "name": "retryClickAndWaitSelector",
  "slug": "retry-click-and-wait-selector",
  "parameters": [
    {
      "name": "props",
      "schema": {
        "type": "object",
        "properties": {
          "page": {
            "description": "the page element from puppeteer got with browser.pages"
          },
          "selector": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ],
            "description": "the css selector to search for"
          },
          "selectorOptions": {
            "description": "the options"
          },
          "selectorToClick": {
            "type": "string",
            "description": "the css selector to click after"
          },
          "maxTime": {
            "type": "number",
            "description": "maxium time to retry. defaults to 30 seconds."
          }
        },
        "required": [
          "page",
          "selector",
          "selectorToClick",
          "maxTime"
        ],
        "additionalProperties": false
      },
      "simplifiedSchema": {
        "properties": [
          {
            "name": "page",
            "required": true,
            "schema": {
              "fullComment": "the page element from puppeteer got with browser.pages",
              "properties": [],
              "type": "object"
            }
          },
          {
            "name": "selector",
            "required": true,
            "schema": {
              "fullComment": "the css selector to search for",
              "properties": [],
              "type": "object"
            }
          },
          {
            "name": "selectorOptions",
            "required": false,
            "schema": {
              "fullComment": "the options",
              "properties": [],
              "type": "object"
            }
          },
          {
            "name": "selectorToClick",
            "required": true,
            "schema": {
              "fullComment": "the css selector to click after",
              "type": "string"
            }
          },
          {
            "name": "maxTime",
            "required": true,
            "schema": {
              "fullComment": "maxium time to retry. defaults to 30 seconds.",
              "type": "number"
            }
          }
        ],
        "type": "object"
      },
      "required": true
    }
  ],
  "description": "Utility function that loops waiting a second and checking\nif selector showed up. Fails if it takes more than 30 seconds.\n\nthis is good to use instead of page.waitForTimeout + page.waitForSelector",
  "returnType": {
    "rawType": "Promise<{ success: boolean; found?: any; }>",
    "typeCoverage": 0,
    "isArray": false,
    "isEnum": false,
    "isObject": false,
    "isPrimitive": false,
    "isEnumLiteral": false
  },
  "maxIndentationDepth": 5,
  "size": {
    "characters": 1313,
    "lines": 46,
    "bytes": 1313,
    "bytesPerCharacter": 1,
    "charactersPerLine": 29,
    "linesPerFile": 46,
    "numberOfFiles": 1
  },
  "id": "pzvtcagmcagpysdbcosyngkr"
}