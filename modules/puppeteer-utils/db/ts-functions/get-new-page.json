{
  "createdAt": 1671430247760,
  "updatedAt": 1671430247760,
  "deletedAt": 0,
  "createdFirstAt": 1671430247760,
  "isApiExposed": true,
  "isExported": true,
  "groupAuthorization": {},
  "operationRelativeTypescriptFilePath": "src/getNewPage.ts",
  "commentsInside": [],
  "rawText": " async (\n  browser: Browser\n): Promise<Page | undefined> => {\n  const allPage = await browser.pages();\n  const allPageTitle = await Promise.all(allPage.map(async (p) => p.title()));\n  let indexOfIdlePage = allPageTitle.indexOf(\"\");\n  if (indexOfIdlePage === -1) {\n    const idlePage = await getIdlePage(browser);\n    return idlePage;\n  }\n  return allPage[indexOfIdlePage];\n}",
  "name": "getNewPage",
  "slug": "get-new-page",
  "parameters": [
    {
      "name": "browser",
      "schema": {
        "$ref": "#/definitions/Browser"
      },
      "simplifiedSchema": {
        "fullComment": "A Browser is created when Puppeteer connects to a Chromium instance, either through\n {@link  PuppeteerNode.launch }  or  {@link  Puppeteer.connect } .",
        "properties": [],
        "type": "object"
      },
      "required": true
    }
  ],
  "description": "",
  "returnType": {
    "rawType": "Promise<import(\"/Users/lucky/workspace/new-typerepo/typerepo/node_modules/puppeteer/lib/types\").Page | undefined>",
    "typeCoverage": 0,
    "isArray": false,
    "isEnum": false,
    "isObject": false,
    "isPrimitive": false,
    "isEnumLiteral": false
  },
  "maxIndentationDepth": 2,
  "size": {
    "characters": 374,
    "lines": 12,
    "bytes": 374,
    "bytesPerCharacter": 1,
    "charactersPerLine": 31,
    "linesPerFile": 12,
    "numberOfFiles": 1
  },
  "id": "confqzbbehmjpwoimahnfadd"
}