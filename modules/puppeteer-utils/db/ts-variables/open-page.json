{
  "createdAt": 1671113668351,
  "updatedAt": 1671113668351,
  "deletedAt": 0,
  "createdFirstAt": 1671113668351,
  "classification": "const",
  "comments": [],
  "isExported": true,
  "name": "openPage",
  "slug": "open-page",
  "operationRelativeTypescriptFilePath": "src/openPage.ts",
  "type": {
    "rawType": "(pageId?: string | undefined) => Promise<{ page?: import(\"/Users/king/King/operations/node_modules/puppeteer/lib/types\").Page | undefined; pageId: string; }>",
    "typeDefinition": {
      "type": "object",
      "properties": {},
      "optional": false
    },
    "typeCoverage": 0,
    "isArray": false,
    "isEnum": false,
    "isObject": true,
    "isPrimitive": false,
    "isEnumLiteral": false,
    "simplifiedSchema": {
      "properties": [],
      "type": "object"
    }
  },
  "value": "async (\n  pageId?: string\n): Promise<{ page?: Page; pageId: string }> => {\n  const browser = await openNewBrowser();\n  if (pageId) {\n    return { page: getBrowserPage(pageId), pageId };\n  }\n\n  const page = await browser.newPage();\n  await page.setBypassCSP(true);\n  const cachePageId = setBrowserPage(page);\n  return { pageId: cachePageId, page };\n}",
  "description": "Handling the new page by checking all browser tabs and if exist then return the existing one for reuse\nor create new one",
  "id": "vkhtcathpkojdvawkfduxqay"
}