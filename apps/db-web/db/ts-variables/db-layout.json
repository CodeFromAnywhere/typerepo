{
  "createdAt": 1668976807444,
  "updatedAt": 1668976807444,
  "deletedAt": 0,
  "createdFirstAt": 1668976807444,
  "classification": "const",
  "comments": [],
  "isExported": true,
  "name": "DbLayout",
  "slug": "db-layout",
  "operationRelativeTypescriptFilePath": "src/DbLayout.tsx",
  "type": {
    "rawType": "(props: { pageProps: any; nextPage: any; }) => JSX.Element",
    "typeDefinition": {
      "type": "object",
      "properties": {},
      "optional": false
    },
    "typeCoverage": 0,
    "isArray": false,
    "isEnum": false,
    "isObject": true,
    "isPrimitive": false,
    "isEnumLiteral": false,
    "simplifiedSchema": {
      "properties": [],
      "type": "object"
    }
  },
  "value": "(props: { pageProps: any; nextPage: any }) => {\n  const [menuType, setMenuType] = useState<string>(menuTypes[0][\"type\"]);\n  const dbMenuQuery = queries.useGetNestedDatabaseMenu({\n    noOperationName: menuType === \"flat\",\n    noOperationPath: menuType !== \"deep\",\n    noSrcRelativeFolder: menuType !== \"deep\",\n    noPrefix: true,\n  });\n\n  const dbQueryPaths = dbMenuQuery.data?.result as any as string[];\n\n  const { nextPage, pageProps } = props;\n  return (\n    <AuthenticationLayout\n      // menu props\n      menu={{\n        menuHeader: () => {\n          return (\n            <Div className=\"flex flex-row gap gap-2\">\n              {menuTypes?.map((item, index) => {\n                return (\n                  <Div\n                    key={item.type}\n                    className={`${\n                      item.type === menuType\n                        ? \"bg-gray-200 dark:bg-gray-800 rounded-full\"\n                        : undefined\n                    } w-7 h-7 flex justify-center items-center`}\n                  >\n                    <ClickableIcon\n                      onClick={() => setMenuType(item.type)}\n                      emoji={item.emoji}\n                    />\n                  </Div>\n                );\n              })}\n            </Div>\n          );\n        },\n        queryPaths: dbQueryPaths,\n        isLoading: dbMenuQuery.isLoading,\n      }}\n      // other\n      nextPage={nextPage}\n      pageProps={pageProps}\n    />\n  );\n}",
  "description": "",
  "id": "gdhqmpeewosyadoiwljqjgha"
}