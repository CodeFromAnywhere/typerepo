{
  "createdAt": 1668837336353,
  "updatedAt": 1668837336353,
  "deletedAt": 0,
  "createdFirstAt": 1668837336353,
  "isApiExposed": true,
  "isExported": true,
  "groupAuthorization": {},
  "operationRelativeTypescriptFilePath": "src/DbLayout.tsx",
  "commentsInside": [],
  "rawText": " (props: { pageProps: any; nextPage: any }) => {\n  const [menuType, setMenuType] = useState<string>(menuTypes[0][\"type\"]);\n  const dbMenuQuery = queries.useGetNestedDatabaseMenu({\n    noOperationName: menuType === \"flat\",\n    noOperationPath: menuType !== \"deep\",\n    noSrcRelativeFolder: menuType !== \"deep\",\n    noPrefix: true,\n  });\n\n  const dbQueryPaths = dbMenuQuery.data?.result as any as string[];\n\n  const { nextPage, pageProps } = props;\n  return (\n    <AuthenticationLayout\n      // menu props\n      menu={{\n        menuType,\n        setMenuType,\n        menuTypes,\n        queryPaths: dbQueryPaths,\n        isLoading: dbMenuQuery.isLoading,\n      }}\n      // other\n      nextPage={nextPage}\n      pageProps={pageProps}\n    />\n  );\n}",
  "name": "DbLayout",
  "slug": "db-layout",
  "parameters": [
    {
      "name": "props",
      "schema": {
        "type": "object",
        "properties": {
          "pageProps": {},
          "nextPage": {}
        },
        "required": [
          "pageProps",
          "nextPage"
        ],
        "additionalProperties": false
      },
      "simplifiedSchema": {
        "properties": [
          {
            "name": "pageProps",
            "required": true,
            "schema": {
              "properties": [],
              "type": "object"
            }
          },
          {
            "name": "nextPage",
            "required": true,
            "schema": {
              "properties": [],
              "type": "object"
            }
          }
        ],
        "type": "object"
      },
      "required": true
    }
  ],
  "description": "",
  "returnType": {
    "rawType": "JSX.Element",
    "typeDefinition": {
      "optional": false,
      "$ref": "#/definitions/JSX.Element"
    },
    "typeCoverage": 0,
    "isArray": false,
    "isEnum": false,
    "isObject": true,
    "isPrimitive": false,
    "isEnumLiteral": false
  },
  "maxIndentationDepth": 4,
  "size": {
    "characters": 743,
    "lines": 28,
    "bytes": 743,
    "bytesPerCharacter": 1,
    "charactersPerLine": 27,
    "linesPerFile": 28,
    "numberOfFiles": 1
  },
  "id": "nskgoujiqgofeglpaznkddmj"
}