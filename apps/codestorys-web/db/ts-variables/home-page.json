{
  "createdAt": 1669884197122,
  "updatedAt": 1669884197122,
  "deletedAt": 0,
  "createdFirstAt": 1669884197122,
  "classification": "const",
  "comments": [],
  "isExported": true,
  "name": "HomePage",
  "slug": "home-page",
  "operationRelativeTypescriptFilePath": "src/HomePage.tsx",
  "type": {
    "rawType": "(props: import(\"/Users/king/King/operations/tools/purpose/codebase-introspection/reader/markdown-reader-types/build/MarkdownReaderPageProps\").MarkdownReaderPageProps) => JSX.Element",
    "typeDefinition": {
      "type": "object",
      "properties": {},
      "optional": false
    },
    "typeCoverage": 0,
    "isArray": false,
    "isEnum": false,
    "isObject": true,
    "isPrimitive": false,
    "isEnumLiteral": false,
    "simplifiedSchema": {
      "properties": [],
      "type": "object"
    }
  },
  "value": "(props: MarkdownReaderPageProps) => {\n  const items: SwipeItem[] = props.menu.flat\n    .map((item) => {\n      // TODO: use useAsset and extrahere a function from there to get the actual URL from the imagePath... pit it on image.\n      const swipeItem: SwipeItem = {\n        description: item.pageData.shortDescription || \"No description\",\n        title: item.menuTitle || \"No title\",\n        image: item.pageData.imagePath || \"\",\n        href: item.queryPath,\n      };\n\n      return swipeItem;\n    })\n    .concat({\n      title: \"What's a codestory?\",\n      image: \"\",\n      description:\n        \"It's a story about my coding session, where I mention my observations, my ideas, thought processes, choices, implementation details, and results.\",\n      href: \"info\",\n    });\n\n  console.log({ items });\n  return <SwipeHomepage items={items} ctas={[]} />;\n}",
  "description": "",
  "id": "zlxftuubylnjyklvyrphvipl"
}