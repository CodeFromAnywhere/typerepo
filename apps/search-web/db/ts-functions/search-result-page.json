{
  "createdAt": 1674542296992,
  "updatedAt": 1674542296992,
  "deletedAt": 0,
  "createdFirstAt": 1674542296992,
  "isApiExposed": false,
  "isExported": true,
  "operationRelativeTypescriptFilePath": "src/components/SearchResultPage.tsx",
  "commentsInside": [],
  "rawText": " (props: QueryPageProps) => {\n  const { searchResults } = props;\n  const router = useRouter();\n\n  const query = router.query?.query\n    ? makeArray(router.query.query).join(\"/\")\n    : undefined;\n  return (\n    <Div>\n      <Div className=\"flex w-full justify-between\">\n        <Div\n          className=\"text-3xl p-2 cursor-pointer\"\n          onClick={() => router.push(\"/\")}\n        >\n          üè†\n        </Div>\n        <SearchBar initialValue={query || undefined} />\n        <Div />\n      </Div>\n      {/* \n      <p>\n        <MarkdownContent\n          content={`\nSearch not implemented yet. Soon though! Until then, check out these cool tools:\n\n- **[copy.ai](https://copy.ai)**: writes articles and social media posts for you\n\n- **[perplexity.ai](https://perplexity.ai)**: explains exactly what you want to know by coupling bing search with AI\n\n- **[presentations.ai](https://presentations.ai)**: make slides about any topic without making slides\n\n- **[otter.ai](https://otter.ai)**: record your meeting, transcribe it, and automatically summarise it\n\n- **[clipsai.com](https://clipsai.com)**: long-form content to social media posts\n\n- **[podly.ai](https://podly.ai)**: perfect podcast annotation\n\n- **[ChatGPT](https://chat.openai.com/)**: answers any question\n\nSign up for [our workshop](https://workshop.gptideas.com/) to learn how to automate your job asap!\n`}\n          config={{}}\n        />\n      </p> */}\n      {searchResults?.map((searchResult, index) => {\n        return (\n          <SearchResultComponent\n            key={`s${index}`}\n            index={index}\n            searchResult={searchResult}\n          />\n        );\n      })}\n      <h1>Or try these:</h1>\n      <div className=\"flex flex-row w-full h-40\">\n        <a\n          className=\"bg-orange-700 hover flex flex-1 justify-center items-center hover:bg-orange-500\"\n          href={`https://search.brave.com/search?q=${query}`}\n        >\n          ü¶Å Brave\n        </a>\n        <a\n          className=\"bg-gray-700 hover flex flex-1 justify-center items-center hover:bg-gray-500\"\n          href={`https://www.google.com/search?igu=1&q=${query}`}\n        >\n          ü§ñ Google\n        </a>\n      </div>\n    </Div>\n  );\n}",
  "name": "SearchResultPage",
  "slug": "search-result-page",
  "parameters": [
    {
      "name": "props",
      "schema": {
        "$ref": "#/definitions/QueryPageProps"
      },
      "simplifiedSchema": {
        "fullComment": "",
        "properties": [
          {
            "name": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchResults",
            "required": true,
            "schema": {
              "properties": [],
              "type": "object"
            }
          },
          {
            "name": "imagePaths",
            "required": true,
            "schema": {
              "items": [
                {
                  "schema": {
                    "type": "string"
                  },
                  "name": null
                }
              ],
              "type": "array"
            }
          },
          {
            "name": "timelineItems",
            "required": true,
            "schema": {
              "items": [
                {
                  "schema": {
                    "properties": [
                      {
                        "name": "comment",
                        "required": true,
                        "schema": {
                          "type": "string"
                        }
                      },
                      {
                        "name": "filePath",
                        "required": false,
                        "schema": {
                          "type": "string"
                        }
                      },
                      {
                        "name": "line",
                        "required": true,
                        "schema": {
                          "type": "number"
                        }
                      }
                    ],
                    "type": "object"
                  },
                  "name": null
                }
              ],
              "type": "array"
            }
          }
        ],
        "type": "object"
      },
      "required": true
    }
  ],
  "description": "",
  "returnType": {
    "rawType": "JSX.Element",
    "typeDefinition": {
      "optional": false,
      "$ref": "#/definitions/JSX.Element"
    },
    "typeCoverage": 0,
    "isArray": false,
    "isEnum": false,
    "isObject": true,
    "isPrimitive": false,
    "isEnumLiteral": false
  },
  "maxIndentationDepth": 6,
  "size": {
    "characters": 2192,
    "lines": 71,
    "bytes": 2198,
    "bytesPerCharacter": 1.0027372262773722,
    "charactersPerLine": 31,
    "linesPerFile": 71,
    "numberOfFiles": 1
  },
  "id": "wwqyfilgtyjvpjvoqehpmqsh"
}