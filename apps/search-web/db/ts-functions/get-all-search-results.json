{
  "createdAt": 1669322120414,
  "updatedAt": 1669322120414,
  "deletedAt": 0,
  "createdFirstAt": 1669322120414,
  "isApiExposed": true,
  "isExported": true,
  "groupAuthorization": {},
  "operationRelativeTypescriptFilePath": "src/util/getAllSearchResults.ts",
  "commentsInside": [],
  "rawText": " (\n  query: string | null\n): SearchResult[] | undefined => {\n  return [\n    {},\n    {},\n    {},\n    {},\n    {},\n    {},\n    {},\n    {},\n    {},\n    {},\n    {},\n    {},\n    {},\n    {},\n    {},\n    {},\n    {},\n    {},\n    {},\n    {},\n    {},\n    {},\n    {},\n    {},\n  ];\n}",
  "name": "getAllSearchResults",
  "slug": "get-all-search-results",
  "parameters": [
    {
      "name": "query",
      "schema": {
        "type": [
          "string",
          "null"
        ]
      },
      "simplifiedSchema": {
        "type": "string"
      },
      "required": true
    }
  ],
  "description": "Searches filepaths, then links to any `ui-web` that has this file available as a page, or vscode.\n\nFor this we need to get the `MarkdownReaderPage` and other pages that are available in ui's and see the files they are linked to.\n\nI want to be able to:\n\n- search functions, interfaces, variables\n- search operations\n- search markdown files, anywhere\n- search db-ui models\n\nBut there's more. To make a good serach...\n\nTODO:\n- gather everything i've made before about search",
  "returnType": {
    "rawType": "{} | undefined",
    "typeDefinition": {
      "type": "object",
      "properties": {},
      "optional": true
    },
    "typeCoverage": 0,
    "isArray": false,
    "isEnum": false,
    "isObject": false,
    "isPrimitive": false,
    "isEnumLiteral": false,
    "simplifiedSchema": {
      "properties": [],
      "type": "object"
    }
  },
  "maxIndentationDepth": 2,
  "size": {
    "characters": 741,
    "lines": 44,
    "bytes": 741,
    "bytesPerCharacter": 1,
    "charactersPerLine": 17,
    "linesPerFile": 44,
    "numberOfFiles": 1
  },
  "id": "aznadibjywbbeubmevqgssxa"
}