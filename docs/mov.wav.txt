 So if the front end generation is a step too far for you,
 you can also just use the very
 powerful API object of type repo.
 Every function on the backend that you create will be
 attached to the API object in the front
 end.
 So whenever you make a change in your backend code, it will
 immediately be available in the
 front end through the API object.
 Look at this.
 So the function sign up with password with context can be
 found here in the API object.
 And it has almost the exact same footprint as the backend
 function except for that it
 doesn't have the function context.
 The function context is provided automatically by the API,
 by the fetch request function.
 So you only need to provide the parameters that you require
.
 And whenever you change something on the backend, it will
 also be seen in the API object.
 Another cool thing is that we have complete integration
 with React query through the
 queries object.
 So if you want to do an API call, for example, every time
 you go back to the page, you can
 just use the queries object and choose your hook that you
 want.
 For example, use get me with context will make sure that
 you get the locked in user and all
 their information every time you come back to the
 application.
 And you can also easily reload and all the other
 capabilities of React query.
 It comes out of the box and every function that you
 generate on the backend will generate
 automatically the hook and the API for you.
 (buzzing)
