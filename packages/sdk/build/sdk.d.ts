export declare const sdk: {
    allOperationsRemoveJsSrc: any;
    clearAllTsDatabases: any;
    codeAll: any;
    forAllFiles: any;
    forAllFolders: any;
    getAllOperationClassifications: any;
    gitShipAllRepos: any;
    mdAllOperations: any;
    minifyAllOperations: any;
    publishAllOperations: any;
    rebuildAllOperations: any;
    removeAllFiles: any;
    removeAllFolders: any;
    removeAll: any;
    renameAll: any;
    runScriptEverywhere: any;
    setScriptEverywhere: any;
    getBundleQueryPaths: any;
    getBundleSummary: any;
    getDbModelsForBundle: any;
    getRealPathFromQueryPath: any;
    cleanupTsDatabase: any;
    shouldDeleteTsModel: any;
    csvItemArrayToCsvString: any;
    tryParseCsv: any;
    generateCsvInstance: any;
    generateJsonSingleInstance: any;
    generateKvmdInstance: any;
    generateMarkdownInstance: any;
    generateSlugTestModel: any;
    getMergedQueryConfig: any;
    randomName: any;
    runModelEndToEndTest: any;
    testOperationModels: any;
    filterInterfacesFromOperationNames: any;
    getDbModelsFromOperations: any;
    findAllDependencyOperations: any;
    findDependantsRecursively: any;
    findDependants: any;
    findDependenciesRecursively: any;
    findMonorepoModules: any;
    getDependencyObject: any;
    getDependencyTree: any;
    folderGetUpdatedAt: any;
    addDefaultValues: any;
    alterAny: any;
    alterCsv: any;
    alterJsonMultiple: any;
    alterJsonSingle: any;
    alterKeyValueMarkdown: any;
    alterMarkdown: any;
    calculateOperationsObject: any;
    createDb: any;
    findParent: any;
    getAugmentedData: any;
    getDatabaseFiles: any;
    getDatabaseRootFolder: any;
    getDbFileLocation: any;
    getDbStorageMethodExtension: any;
    getItemModelLocation: any;
    getLength: any;
    getLocationPattern: any;
    getParentSlug: any;
    groupByFile: any;
    makeStoringItem: any;
    mergeConfigs: any;
    removeKeyValueMarkdown: any;
    removeMultiple: any;
    upsertItems: any;
    upsertKeyValueMarkdown: any;
    upsert: any;
    generateNamedIndex: any;
    generateSimpleIndex: any;
    isTestFn: any;
    mapToImportStatement: any;
    generateDbSdk: any;
    generateEnvSdks: any;
    generateFunctionSdks: any;
    generateOperationsSdk: any;
    generateSdkOperations: any;
    getSdkFunctions: any;
    isTsFunctionIndexable: any;
    newEnvSdk: any;
    newSdkKeysOperation: any;
    newSdkOperation: any;
    tsFunctionIsSdkable: any;
    getAllOperationSourcePaths: any;
    getImportedDependencies: any;
    getPackage: any;
    isAbsoluteImport: any;
    calculatePackageJsonDependencies: any;
    findAndWriteImportsExports: any;
    getImportsExports: any;
    getPackageNameFromAbsoluteImport: any;
    isAbsoluteImportBuiltin: any;
    isImportFromOptionalFile: any;
    getOperationBins: any;
    getOperationPackageName: any;
    getPackageJson: any;
    getPackageSourcePaths: any;
    findAndUpsertTsInterfaces: any;
    findCommentTypes: any;
    generateSchema: any;
    getAllComments: any;
    getDbStorageMethod: any;
    getFrontmatterDbStorageMethod: any;
    getIndexId: any;
    getMaxIndentationDepth: any;
    getMinMaxValidation: any;
    getNumberOfLines: any;
    getParamSchema: any;
    getParametersFromInterfaces: any;
    getPossibleRefs: any;
    getSizeSummary: any;
    getSpecialExtensionDbStorageMethod: any;
    getTsStatements: any;
    getTypeInfo: any;
    getValidatedOperationPathParse: any;
    hasDefinition: any;
    indexTypescriptFile: any;
    indexTypescript: any;
    isPrimitive: any;
    makeTsComment: any;
    schemaToTsInterface: any;
    tryCreateSchema: any;
    typeToSchema: any;
    dev: any;
    determineFileType: any;
    exploreGitRepoFolders: any;
    exploreMultiple: any;
    exploreOperationFolders: any;
    explorePreset: any;
    explore: any;
    findAllDotGitFolders: any;
    findAllPackages: any;
    preIndexLint: any;
    bundleFolderWithMarkdown: any;
    bundleToBookMd: any;
    bundleToMd: any;
    deployToVercel: any;
    emailMarkdownParse: any;
    generateStaticSite: any;
    getOutline: any;
    getTitlesRecursively: any;
    markdownChunkToMarkdownStringRecursive: any;
    markdownChunksToMarkdownStringRecursive: any;
    markdownToSayable: any;
    mdToPdf: any;
    mergeMarkdownParse: any;
    operationRadio: any;
    operationToMarkdown: any;
    printNestedTitles: any;
    print: any;
    projectToMd: any;
    propertyToTableRow: any;
    sayablesToMp3: any;
    selectRandomOperation: any;
    simplifiedSchemaToMarkdownString: any;
    tsFunctionToMarkdownString: any;
    tsInterfaceToMarkdownString: any;
    upMarkdownChunkLevelRecursively: any;
    minifyBuild: any;
    getAvailableOperationName: any;
    getOperationConfig: any;
    newOperationWithFiles: any;
    newOperation: any;
    nodemon: any;
    readCsvFileSync: any;
    readCsvFile: any;
    readJsonFileSync: any;
    readJsonFile: any;
    tryParseJson: any;
    readKvmdFile: any;
    readMarkdownFile: any;
    clearTsDatabase: any;
    executeCommandQuietUnlessFail: any;
    exitIfProcessDependenciesChanged: any;
    getFileIds: any;
    getIndexFileIds: any;
    getSrcIds: any;
    isGeneratedOperation: any;
    isOperationBuildNeeded: any;
    isSdkOperation: any;
    rebuildOperation: any;
    shouldSkip: any;
    yarnBuild: any;
    isEqualArray: any;
    renameTemplateFiles: any;
    renameTemplateToNormalFile: any;
    renameToTemplateFile: any;
    setJsonKey: any;
    getAllTsMorphSourceFiles: any;
    getHasGeneric: any;
    getTsMorphProject: any;
    initiateWatch: any;
    makeSubscription: any;
    watchFoldersFs: any;
    watchFolders: any;
    exitIfOperationsChange: any;
    gitCommitAllEveryMinute: any;
    watchOperations: any;
    isGeneratedParameterName: any;
    markdownParseToMarkdownModelType: any;
    parseMarkdownModelTimestamp: any;
    tryParseDate: any;
    stripCommentEnd: any;
    stripCommentStart: any;
    stripComment: any;
    stripSlashes: any;
    stripStar: any;
    trim: any;
    getCompileErrors: any;
    getTypescriptErrorsFromFiles: any;
    writeBuildErrors: any;
    camelCase: any;
    capitalCase: any;
    convertCase: any;
    humanCase: any;
    kebabCase: any;
    lowerCaseArray: any;
    pascalCase: any;
    slugify: any;
    snakeCase: any;
    hasSubExtension: any;
    isIndexableFileId: any;
    canAccessSync: any;
    canAccess: any;
    canExecuteSync: any;
    canExecute: any;
    canReadSync: any;
    canRead: any;
    canSeeSync: any;
    canSee: any;
    canWriteSync: any;
    canWrite: any;
    findAllMd: any;
    findFileNameCaseInsensitive: any;
    findFilesRecursively: any;
    findSensibleFiles: any;
    getExtension: any;
    getFileName: any;
    getFolder: any;
    getLastFolder: any;
    getPathCombinations: any;
    getSubExtension: any;
    importFromFiles: any;
    isArrayGuard: any;
    parseMd: any;
    removeAllExcept: any;
    removeTrailingSlash: any;
    withoutExtension: any;
    writeJsonToFile: any;
    writeStringToFile: any;
    writeToFiles: any;
    findFolderWhereMatch: any;
    findOperationBasePathWithClassification: any;
    findOperationBasePath: any;
    getAllPackageJsonDependencies: any;
    getOperationClassification: any;
    getOperationPathParse: any;
    getOperationPath: any;
    getOperationRelativePath: any;
    getPathParse: any;
    getPathsWithOperations: any;
    getProjectRoot: any;
    getRelativePath: any;
    getRootPath: any;
    getSrcRelativeFileId: any;
    hasDependency: any;
    isSensibleProject: any;
    isWorkspaceRoot: any;
    makeRelative: any;
    getTsConfig: any;
    apply: any;
    createEnum: any;
    findLastIndex: any;
    getObjectFromParamsString: any;
    getObjectKeysArray: any;
    getSubsetFromObject: any;
    groupByKey: any;
    insertAt: any;
    isAllTrue: any;
    makeArray: any;
    mapAsync: any;
    mapKeys: any;
    mapMany: any;
    mapValuesSync: any;
    mergeObjectParameters: any;
    mergeObjectsArray: any;
    mergeObjects: any;
    notEmpty: any;
    objectMapAsync: any;
    objectMapSync: any;
    objectValuesMap: any;
    onlyUnique2: any;
    onlyUnique: any;
    removeIndexFromArray: any;
    sumAllKeys: any;
    sumObjectParameters: any;
    sum: any;
    takeFirst: any;
    getSimpleJsonString: any;
    flattenMarkdownChunks: any;
    getKvmdItemsRecursively: any;
    getParagraphsRecursively: any;
    kvmdDataMap: any;
    kvmdDataToString: any;
    kvmdParseToMarkdownString: any;
    markdownStringToKvmdParse: any;
    parseKvmdLine: any;
    getCallerFileName: any;
    log: any;
    parseTitle: any;
    makeFileType: any;
    isResultOfInterface: any;
    makeTest: any;
    markdownParseToMarkdownString: any;
    mdContentParseRecursively: any;
    mdToJsonParse: any;
    parseFrontmatterMarkdownString: any;
    parseMdToChunks: any;
    removeHeaderPrefix: any;
    frontmatterParseToString: any;
    getFrontmatterValueString: any;
    quotedOrNot: any;
    stringifyNewlines: any;
    generateId: any;
    generatePassword: any;
    generateRandomString: any;
    generateTime: any;
    isEmail: any;
    markdownModelTypeToMarkdownString: any;
    ALink: any;
    oneByOne: any;
    getDependenciesSummary: any;
    getOperationMetaData: any;
    recalculateOperationIndexJson: any;
    writeKeyToOperationIndexJson: any;
    parsePrimitive: any;
    byteCount: any;
    calculatePathMetaData: any;
    categorizeFiles: any;
    getFolderSummary: any;
    getPathMainComment: any;
    sumSizeSummary: any;
    pluralize: any;
    singularize: any;
    runChildProcess: any;
    getProperties: any;
    getRefLink: any;
    getReferencableModels: any;
    getReferenceParameterInfo: any;
    getSchemaItems: any;
    getSchema: any;
    simplifiedSchemaToTypeDefinitionString: any;
    simplifySchema: any;
};
export declare type SdkType = typeof sdk;
//# sourceMappingURL=sdk.d.ts.map