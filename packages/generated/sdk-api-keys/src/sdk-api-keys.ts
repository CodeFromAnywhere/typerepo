export const functionApiKeys = [ "codestoriesGetPages",
"codestoriesGetStaticPaths",
"codestoriesGetStaticProps",
"copyCopyPairs",
"copyReaderStaticAssets",
"findReaderStaticAssets",
"findStaticAssets",
"addCodestoryToSection",
"addModelName",
"findCodestories",
"makeCodespanMappedObject",
"makeCodestory",
"mapChunkRecursively",
"mapMarkdownParseSections",
"writeAllCodestories",
"writeCodespanDetails",
"addEmojiToEveryWord",
"addStatement",
"addWord",
"biggestFunctionName",
"checkQueue",
"cleanup",
"controlChatGptWrapper",
"controlChatGpt",
"deletePromptResult",
"developersQuote",
"diaryToInstagram",
"documentationWriting",
"emojiAugmentation",
"explainInDutch",
"explainInNepali",
"explainInPortuguese",
"explainLineByLine",
"explain",
"fixGrammarAndSpellingMistakes",
"followUpQuestions",
"getContextualPromptCategories",
"getContextualPromptResultJsonFilePath",
"getContextualPrompt",
"getObjectForkKeyRecursively",
"getToolFunctions",
"gptIdeasRegisterWithContext",
"haiku",
"hookOneliners",
"improveCode",
"investorPitch",
"marcusAurelius",
"opposite",
"outlineToInvestorPitch",
"poem",
"processChatGptPrompt",
"processPromptOnFile",
"processPromptOnFolderWithContext",
"quiz",
"removeAllFake",
"rickAndMortyRick",
"rickAndMorty",
"setIsFavoritePromptResult",
"shouldAddToQueue",
"socratesAndSnoopDogg",
"storytelling",
"toolFunctionWithContext",
"translateEverythingIntoHindi",
"translateEverythingPortuguese",
"translateEverything",
"translateToPortuguese",
"typescriptExplain",
"williamShakespear",
"writeContextualPromptSdk",
"writeCreatePromptCode",
"ye",
"yodafy",
"allOperationsRemoveJsSrc",
"allOperationsToMarkdown",
"clearAllTsDatabases",
"codeAll",
"forAllFiles",
"forAllFolders",
"getAllOperationClassifications",
"gitShipAllRepos",
"mdAllOperations",
"minifyAllOperations",
"publishAllOperations",
"removeAllFiles",
"removeAllFolders",
"removeAll",
"renameAll",
"runScriptEverywhere",
"setScriptEverywhere",
"askOk",
"ask",
"getArgumentOrAsk",
"compressAsset",
"deleteReferencedAsset",
"downloadRemoteAsset",
"findAbsoluteAssetPathFromReference",
"findAllProjectMedia",
"getAssetDirectlyGetApi",
"getReferencedAssetGetApi",
"getStorageLocationInfo",
"getTemporaryAssetsFolderPath",
"processAsset",
"processItemAssets",
"removeOldTemporaryAssets",
"serverDownloadReply",
"uploadAssetWithContext",
"getAugmentedWordObject",
"getAugmentedWords",
"getBundleAugmentedWords",
"getBundleSummary",
"getDbModelsForBundle",
"chatGPTAuth",
"detectChatGptPage",
"openAIChat",
"execAsync",
"spawnAsync",
"cleanupTsDatabase",
"shouldDeleteTsModel",
"csvItemArrayToCsvString",
"tryParseCsv",
"generateCsvInstance",
"generateJsonSingleInstance",
"generateKvmdInstance",
"generateMarkdownInstance",
"generateSlugTestModel",
"getMergedQueryConfig",
"randomName",
"runModelEndToEndTest",
"testOperationModels",
"cacheLookup",
"calculateOperatingSystemBundle",
"deleteDbModel",
"getDatabaseMenu",
"getDbModelMetadata",
"getDbModelNames",
"getDbModel",
"getFunctionIndex",
"getNestedDatabaseMenu",
"getReferencableModelData",
"hasDbRecipes",
"makeSrcRelativeFolder",
"tsInterfaceToDbMenu",
"upsertDbModel",
"validateInput",
"validateResult",
"filterInterfacesFromOperationNames",
"getDbModelsFromOperations",
"docsGetPages",
"getMarkdownReaderPages",
"getPublicMarkdownFilePaths",
"removeExtensionsFromPath",
"removeNumberPrefix",
"shouldExposeMarkdownFile",
"stripReadmeFromFolder",
"comparePassword",
"encryptPassword",
"exploreOperation",
"exploreProject",
"getExplorationType",
"getFileWithExtension",
"getFolderExplorationDetails",
"getFrontmattersMappedObject",
"getInstanceNames",
"getProjectRelativePaths",
"getTodoPages",
"getTodoPaths",
"hasSameProjectPath",
"compressConvert",
"compressImages",
"compressMp4",
"convertToMp3",
"convertToMp4",
"fileExplorerOpen",
"findAllDependencyOperations",
"findDependantsRecursively",
"findDependants",
"findDependenciesRecursively",
"findMonorepoExports",
"findMonorepoImports",
"findMonorepoModules",
"getDependencyObject",
"getDependencyTree",
"getOldDependencyTree",
"getOperationDependencyReasons",
"folderGetUpdatedAt",
"addDefaultValues",
"alterAny",
"alterCsv",
"alterJsonMultiple",
"alterJsonSingle",
"alterKeyValueMarkdown",
"alterMarkdown",
"augmentItemWithReferencedDataRecursively",
"calculateOperationsObject",
"createDb",
"findParent",
"getAugmentedData",
"getDatabaseFiles",
"getDatabaseRootFolder",
"getDbFileLocation",
"getDbStorageMethodExtension",
"getDefaultLocationPattern",
"getItemModelLocation",
"getLength",
"getLocationPattern",
"getMergedConfigOperationPath",
"getParentSlug",
"getRootFolders",
"getWildcardDbFileLocations__OLD",
"getWildcardDbFileLocations",
"groupByFile",
"makeStoringItem",
"mergeConfigs",
"removeKeyValueMarkdown",
"removeMultiple",
"upsertItems",
"upsertKeyValueMarkdown",
"upsert",
"waitForLockfile",
"getExtension",
"getFileOrFolderName",
"getFolderJs",
"getSubExtension",
"isPathRelative",
"makeRelative",
"removeTrailingSlash",
"withoutExtension",
"withoutSubExtensions",
"getFunctionExecutions",
"getFunctionQueryPaths",
"getPublicBundleConfig",
"getSrcRelativeFolderPath",
"getTsFunction",
"calculateDeviceName",
"executeFunctionWithParameters",
"getAuthorizationInfo",
"isGetEndpoint",
"savePageVisit",
"storeFunctionExecution",
"upsertDevice",
"generateNamedIndex",
"generateSimpleIndex",
"isTestFn",
"mapToImportStatement",
"generateDbSdk",
"generateEnvSdks",
"generateFunctionPathsSdk",
"generateFunctionSdks",
"generateInterfacePathsSdk",
"generateOperationsSdk",
"generateSdkApiWatcher",
"generateSdkApi",
"generateSdkOperations",
"getFunctionSdksContent",
"getSdkDescription",
"getSdkFunctionsPerClassification",
"isNonUiOperationBuild",
"newEnvSdk",
"newFunctionKeysSdkOperation",
"newFunctionSdkOperation",
"tsFunctionIsIndexable",
"tsFunctionIsSdkable",
"updateClassifications",
"augmentMarkdown",
"canSeeFileContent",
"canSeeFile",
"expandFrontmatter",
"findClosestAbsolutePath",
"getContextualPromptResults",
"getContextualPromptsArray",
"getContextualPrompts",
"getFirstFile",
"getFolderRelativeScopeDbFilePath",
"getReaderPageProps",
"makeMarkdownLink",
"readerPageGetStaticPaths",
"readerPageGetStaticProps",
"getAllOperationSourcePaths",
"getImportedDependencies",
"getPackage",
"isAbsoluteImport",
"calculatePackageJsonDependencies",
"findAndWriteImportsExports",
"getDefaultSymbolType",
"getExportSpecifierNames",
"getExportSymbolTypeRecursive",
"getImportSpecifiersWithNames",
"getImportsExports",
"getPackageNameFromAbsoluteImport",
"getSymbolTypeDeclarations",
"getTypeFromImportSpecifierRecursive",
"isAbsoluteImportBuiltin",
"isImportFromOptionalFile",
"writeResult",
"getOperationBins",
"getOperationPackageName",
"getPackageJson",
"getPackageSourcePaths",
"findAndUpsertTsInterfaces",
"findCommentTypes",
"generateSchema",
"getAllComments",
"getDbStorageMethod",
"getFrontmatterDbStorageMethod",
"getFrontmatterFunctionParameters",
"getIndexId",
"getMaxIndentationDepth",
"getMinMaxValidation",
"getNumberOfLines",
"getParamSchema",
"getParametersFromInterfaces",
"getPossibleRefs",
"getSizeSummary",
"getSpecialExtensionDbStorageMethod",
"getTsStatements",
"getTypeInfo",
"getValidatedOperationPathParse",
"hasDefinition",
"hasTypescriptFileChanged",
"indexImportsExportsForFilePath",
"indexTypescriptFilePath",
"indexTypescriptFile",
"indexTypescript",
"isPrimitive",
"makeTsComment",
"removeTypescriptIndex",
"schemaToTsInterface",
"tryCreateSchema",
"typeToSchema",
"fetchWithTimeout",
"isOnline",
"isSystemBusy",
"dev",
"determineFileType",
"exploreGitRepoFolders",
"exploreMultiple",
"exploreOperationFolders",
"explorePreset",
"explore",
"findAllDocsFolderPaths",
"findAllDotGitFolders",
"findAllFoldersWithName",
"findAllPackages",
"findAllTodoFolderPaths",
"findFilesRecursively",
"getFolderTypescriptFiles",
"pathArrayIsOperation",
"runTestsForOperation",
"runTests",
"preIndexLint",
"isLocked",
"lock",
"unlock",
"sendMail",
"addDependantCount",
"bundleFolderWithMarkdown",
"bundleToBookMarkdown",
"bundleToMarkdown",
"createMinimizedSectionMarkdown",
"createMinimizedSection",
"deployToVercel",
"emailMarkdownParse",
"flattenNestedObject",
"generateStaticSite",
"getJsonSchemaSummary",
"getMarkdownContents",
"getMergedMarkdownOutlineUrl",
"getOperationSummary",
"getOutline",
"getPublicMarkdownNestedPathObject",
"getTitlesRecursively",
"getTypeDescriptorRecursive",
"isConventionFileStatement",
"isUpperCase",
"makeOutlineMarkdownString",
"makePropertiesTable",
"markdownChunkToMarkdownStringRecursive",
"markdownChunksToMarkdownStringRecursive",
"markdownToSayable",
"mdToPdf",
"mergeMarkdownParse",
"noNewlines",
"operationRadio",
"operationToMarkdown",
"printNestedTitles",
"print",
"projectToMarkdown",
"propertyToTableRow",
"sayablesToMp3",
"selectRandomOperation",
"simplifiedSchemaToMarkdownString",
"statementItemToMarkdown",
"tsFunctionToMarkdownString",
"tsInterfaceToMarkdownString",
"tsVariableToMarkdownString",
"upMarkdownChunkLevelRecursively",
"copyStaticAssets",
"docsGetStaticPaths",
"docsGetStaticProps",
"getAllMarkdownReaderPages",
"getChildren",
"getFolderExplorationInfo",
"getMarkdownModelPages",
"getMarkdownPageInfo",
"getMarkdownReaderQueryPaths",
"getOperationPages",
"getReaderTodoPages",
"markdownReaderGetStaticPaths",
"markdownReaderGetStaticPropsFromPages",
"markdownReaderGetStaticProps",
"putReadmeOnTop",
"getQueryPath",
"minifyBuild",
"getAvailableOperationName",
"newOperationWithFiles",
"newOperation",
"newTemplate",
"nodemon",
"addPeerMessage",
"addPeer",
"augmentDevice",
"deviceGetAppsCalculated",
"getAllAppOperations",
"getAugmentedPersons",
"getFirstEmoji",
"getNestedPathObject",
"getPeerMessages",
"getPeerPeople",
"getPeersFromPeersRecursively",
"getPublicFolderNestedPathObjectFromPeer",
"getPublicFolderNestedPathObject",
"getPublicPeers",
"isPortUsed",
"lateFetchPeerMessageSync",
"ping",
"proactivePushAddPeerMessage",
"removePeer",
"sortDevices",
"updatePeer",
"getPrimaryPersona",
"deleteApp",
"listApps",
"logApp",
"logTableObject",
"pm2ConnectDisconnect",
"pm2Connect",
"restartApp",
"startApp",
"stopAllAppsExcept",
"stopApps",
"readCsvFileSync",
"readCsvFile",
"readJsonFileSync",
"readJsonFile",
"readProjectRelativeJsonFile",
"readKvmdFile",
"readMarkdownFileToModel",
"readMarkdownFile",
"getFolderTypescriptIndex",
"readTypescriptFile",
"clearTsDatabase",
"executeCommandQuietUnlessFail",
"exitIfProcessDependenciesChanged",
"generateJsonSchemas",
"getAllDbModels",
"getFileIds",
"getIndexFileIds",
"getSrcIds",
"isOperationBuildNeeded",
"isSdkOperation",
"rebuildAllOperations",
"rebuildOperation",
"shouldSkip",
"yarnBuild",
"isEqualArray",
"renameTemplateFiles",
"renameTemplateToNormalFile",
"renameToTemplateFile",
"sayDutch",
"sayLanguage",
"sayNepali",
"saySomething",
"textToMp3",
"addAuthenticationMethod",
"addDeviceAuthenticationMethodConfirm",
"addDeviceAuthenticationMethodWithContext",
"addPersonAuthenticationMethodWithContext",
"findAuthenticatedPersonWithHandle",
"findLoggedinPersonsWithContext",
"getMeWithContext",
"getPublicPerson",
"getPublicPersons",
"isPhoneNumber",
"isValidPassword",
"loginWithContext",
"loginWithPasswordWithContext",
"logoutWithContext",
"removeDeviceAuthenticationMethodWithContext",
"removePersonAuthenticationMethodWithContext",
"signupWithContext",
"signupWithPasswordWithContext",
"switchCurrentPersonWithContext",
"updateMeWithContext",
"setJsonKey",
"setKeyAtLocation",
"findAudioWithViewsArray",
"markdownParseToShortMarkdown",
"shortMarkdownToMarkdownParse",
"augmentShortMarkdown",
"fetchVoices",
"generateAugmentedShortMarkdown",
"getOrGenerateShortMarkdown",
"parseDialogue",
"uberduckGetPath",
"uberduckSpeak",
"voiceCloneDialogue",
"sendDailyAlarmSms",
"sendSms",
"time",
"getAllTsMorphSourceFiles",
"getHasGeneric",
"getTsMorphProject",
"getOpenableFilePath",
"vscodeOpen",
"watchAll",
"initiateWatch",
"makeSubscription",
"pickWatcher",
"watchFoldersChokidar",
"watchFoldersFs",
"watchFolders",
"exitIfOperationsChange",
"gitCommitAllCron",
"watchOperations",
"writeToAssets",
"copyPath",
"deleteFileOrFolder",
"getFileContents",
"getFrontmatterSchema",
"getWriterWebPagesMenu",
"getWriterWebPages",
"movePath",
"newFile",
"newFolder",
"processAssetUpload",
"renameFileOrFolder",
"saveFileContents",
"trashFileOrFolder",
"updateFrontmatter",
"getGetApiUrl",
"untypedApiFunction",
"addToken",
"ensureToken",
"findAssetParametersRecursively",
"getConversionInfoFromType",
"getExtensionFromAsset",
"getNameFromRelativePath",
"getNameWithTokenFromRelativePath",
"getReferencedAssetApiUrl",
"getTypeFromUrlOrPath",
"readableSize",
"removeTokenIfPresent",
"BreadCrumbs",
"renderBreadCrumbs",
"ClickableIcon",
"getFunctionExersize",
"stripCommentEnd",
"stripCommentStart",
"stripComment",
"stripSlashes",
"stripStar",
"trim",
"getCompileErrors",
"getTypescriptErrorsFromFiles",
"writeBuildErrors",
"camelCase",
"capitalCase",
"capitaliseFirstLetter",
"convertCase",
"fileSlugify",
"getDelimiter",
"humanCase",
"kebabCase",
"lowerCaseArray",
"pascalCase",
"slugify",
"snakeCase",
"errorToast",
"infoToast",
"showStandardResponse",
"successToast",
"warningToast",
"FancyLoader",
"getFileType",
"MatchingText",
"PathSearchResults",
"getFileTypeFromPath",
"getWriterType",
"hasSubExtension",
"isGeneratedOperationName",
"isGeneratedOperation",
"isIndexableFileId",
"frontmatterParseToString",
"frontmatterToObject",
"getFrontmatterValueString",
"markdownModelTypeToMarkdownString",
"objectToFrontmatter",
"parseFrontmatterString",
"quotedOrNot",
"stringifyNewlines",
"canAccessSync",
"canAccess",
"canExecuteSync",
"canExecute",
"canReadSync",
"canRead",
"canSeeSync",
"canSee",
"canWriteSync",
"canWrite",
"copyAllRelativeFiles",
"findFileNameCaseInsensitive",
"getAllFoldersUntilFolder",
"getFileName",
"getFirstAvailableFilename",
"getFolderSizeObject",
"getFolder",
"getLastFolder",
"getOneFolderUpPath",
"getPathCombinations",
"oneUp",
"parseMd",
"removeAllExcept",
"renameAndCreate",
"updateSingleNestedJsonFile",
"writeJsonToFile",
"writeStringToFile",
"writeToFiles",
"converse",
"executeSdkFunction",
"getCachedExportedFunctions",
"getMenu",
"getSdkFunctionPaths",
"findFolderWhereMatch",
"findOperationBasePathWithClassification",
"findOperationBasePath",
"getAllPackageJsonDependencies",
"getCommonAncestor",
"getOperationClassificationObject",
"getOperationClassification",
"getOperationPathParse",
"getOperationPath",
"getOperationRelativePath",
"getPathParse",
"getPathsWithOperations",
"getProjectRoot",
"getRelativeLinkPath",
"getRelativePath",
"getRootPath",
"getSrcRelativeFileId",
"getSubExtensions",
"hasDependency",
"isBundle",
"isOperation",
"isUiOperation",
"isWorkspaceRoot",
"packageCompilesTs",
"tsconfigCompilesEsm",
"getTsConfig",
"apply",
"createEnum",
"createMappedObject",
"destructureOptionalObject",
"findLastIndex",
"getObjectFromParamsString",
"getObjectKeysArray",
"getParameterAtLocation",
"getSubsetFromObject",
"groupByKey",
"hasAllLetters",
"insertAt",
"isAllTrue",
"isArrayEqual",
"makeArray",
"mapAsync",
"mapKeys",
"mapMany",
"mapValuesSync",
"mergeNestedObject",
"mergeObjectParameters",
"mergeObjectsArray",
"mergeObjects",
"noEmptyString",
"notEmpty",
"objectMapAsync",
"objectMapSync",
"objectValuesMap",
"omitUndefinedValues",
"onlyDuplicates",
"onlyUnique2",
"onlyUnique",
"pickRandomArrayItem",
"putIndexAtIndex",
"removeIndexFromArray",
"removeOptionalKeysFromObjectStrings",
"removeOptionalKeysFromObject",
"replaceLastOccurence",
"reverseString",
"sumAllKeys",
"sumObjectParameters",
"sum",
"takeFirst",
"trimSlashes",
"getSimpleJsonString",
"flattenMarkdownChunks",
"getKvmdItemsRecursively",
"getParagraphsRecursively",
"kvmdDataMap",
"kvmdDataToString",
"kvmdParseToMarkdownString",
"markdownStringToKvmdParse",
"parseKvmdLine",
"LabeledButton",
"getCallerFileName",
"log",
"parseTitle",
"makeFileType",
"isResultOfInterface",
"makeTest",
"chunkToStringRecursively",
"getChunkParagraphsRecursively",
"getImplicitId",
"getMarkdownIntro",
"getMarkdownParseParagraphs",
"getMarkdownReferencePaths",
"getMarkdownReferencesFromParagraph",
"markdownParseToMarkdownStringFromContent",
"markdownParseToMarkdownString",
"mdContentParseRecursively",
"mdToJsonParse",
"parseFrontmatterMarkdownString",
"parseMarkdownParagraph",
"parseMdToChunks",
"removeHeaderPrefix",
"markdownParseToMarkdownModelType",
"parseMarkdownModelTimestamp",
"tryParseDate",
"findCodeblocks",
"findCodespans",
"findEmbeds",
"findLinks",
"flattenMarkdownString",
"flattenMarkedTokenRecursive",
"cleanupTimer",
"generateUniqueId",
"getNewPerformance",
"generateId",
"generatePassword",
"generateRandomString",
"generateTime",
"isEmail",
"getAssetInputType",
"getParameterContentType",
"isCalculatedParameter",
"isGeneratedParameterName",
"getFullPath",
"getLastPathsChunk",
"usePath",
"oneByOne",
"getDependenciesSummary",
"getOperationMetaData",
"recalculateOperationIndexJson",
"parsePrimitiveArray",
"parsePrimitiveBoolean",
"parsePrimitiveString",
"parsePrimitive",
"byteCount",
"calculatePathMetaData",
"categorizeFiles",
"getFolderSummary",
"getPathMainComment",
"sumSizeSummary",
"isPlural",
"isSingular",
"pluralize",
"singularize",
"clickOnSpanTag",
"delay",
"facebookLogin",
"foundOrNotXpath",
"foundOrNot",
"getBrowserPageById",
"getBrowserTabs",
"getBrowser",
"getChromeExecutablePath",
"getConnectedBrowsers",
"getIdlePage",
"getNewPage",
"gmailLogin",
"isCaptchaExist",
"logConsoleIfDebug",
"openMultiTabs",
"openNewBrowserOnChildProcess",
"openNewBrowser",
"openPage",
"racePromises",
"retryClickAndWaitSelector",
"retryWaitSelector",
"setBrowserPageIdle",
"setBrowserSession",
"setInnerHtml",
"setInputValue",
"solveReptcha",
"trueClick",
"twitterLogin",
"typeInTheInputField",
"typeOnTheTargetWithXpathSelector",
"waitMilliseconds",
"getKeysAtPathFromNestedObject",
"getMenuPagesObject",
"makeNestedObjectFromQueryPathObject",
"mapChildObjectRecursive",
"nestedObjectToChildObject",
"nestedPathObjectToNestedMenuRecursive",
"nestifyQueryPathObjectRecursive",
"queryPathsArrayToNestedPathObject",
"reduceQueryPathsRecursively",
"bodyFromQueryString",
"getFirstQueryStrings",
"getQueryPart",
"isValidEntry",
"toQueryString",
"runChildProcess",
"findFirstCommentTypes",
"getDataParameterNames",
"getPossibleReferenceParameterNames",
"getProperties",
"getRefLink",
"getReferencableModels",
"getReferenceParameterInfo",
"getSchemaItems",
"getSchema",
"simplifiedSchemaToTypeDefinitionString",
"simplifySchema",
"findSentenceMatches",
"searchRecursiveObjectArray",
"objectStringToJson",
"parseIfJson",
"parsePrimitiveJson",
"stringToJson",
"Tabs",
"getEncoding",
"isBinary",
"isText",
"tryParseJson",
"createCodeblockMarkdown",
"useCustomUrlStore",
"crudPageToWebPages",
"functionFormPageToWebPage" ];