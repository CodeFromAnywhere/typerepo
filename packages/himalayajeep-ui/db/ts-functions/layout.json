{
  "createdAt": 1667635977521,
  "updatedAt": 1667635977521,
  "deletedAt": 0,
  "createdFirstAt": 1667635977521,
  "publicAuthorization": [
    "read-docs",
    "search"
  ],
  "isApiExposed": false,
  "isPostApi": false,
  "isGetApi": false,
  "isExported": true,
  "operationRelativeTypescriptFilePath": "src/components/Layout.tsx",
  "commentsInside": [],
  "rawText": " ({\n  pages,\n  children,\n}: {\n  pages: MarkdownReaderPage[];\n  children: any;\n}) => {\n  const router = useRouter();\n  return (\n    <Div className=\"h-screen grid grid-rows-6\">\n      <Div className=\"row-span-6 grid grid-cols-5\">\n        <Div\n          className={`\n        col-span-4 overflow-y-auto bg-gray-50 dark:bg-gray-900 dark:text-white`}\n          textClassName=\"dark:text-white\"\n        >\n          {children}\n        </Div>\n        <Span className=\"border-l col-span-1 overflow-y-auto bg-gray-50 dark:bg-gray-900 dark:text-white border-l-gray-400\">\n          <MenuItem onClick={() => router.push(\"/\")}>Home</MenuItem>\n          <MenuItem onClick={() => router.push(\"/driver-signup\")}>\n            Driver Signup\n          </MenuItem>\n          <MenuItem onClick={() => router.push(\"/jeep-list\")}>\n            Jeep list\n          </MenuItem>\n          <MenuItem onClick={() => router.push(\"/login\")}>\n            Driver Login\n          </MenuItem>\n          <MenuItem onClick={() => router.push(\"/edit-profile\")}>\n            Edit profile\n          </MenuItem>\n        </Span>\n      </Div>\n    </Div>\n  );\n}",
  "name": "Layout",
  "slug": "layout",
  "parameters": [
    {
      "name": "{\n  pages,\n  children,\n}",
      "schema": {
        "type": "object",
        "properties": {
          "pages": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/MarkdownReaderPage"
            }
          },
          "children": {}
        },
        "required": [
          "pages",
          "children"
        ],
        "additionalProperties": false
      },
      "simplifiedSchema": {
        "properties": [
          {
            "name": "pages",
            "required": true,
            "schema": {
              "items": [
                {
                  "schema": {
                    "fullComment": "for markdown-reader-ui, the pages can be markdown files, but they can also be connected to models",
                    "properties": [
                      {
                        "name": "queryPath",
                        "required": true,
                        "schema": {
                          "fullComment": "path to be used as the url. no preceding slash",
                          "type": "string"
                        }
                      },
                      {
                        "name": "filePath",
                        "required": false,
                        "schema": {
                          "fullComment": "if given, the md-file will be provided to the frontend\n\nproject relative path",
                          "type": "string"
                        }
                      },
                      {
                        "name": "isMenuItem",
                        "required": false,
                        "schema": {
                          "fullComment": "if true, this item will be shown in the menu",
                          "type": "boolean"
                        }
                      }
                    ],
                    "type": "object"
                  },
                  "name": "MarkdownReaderPage"
                }
              ],
              "type": "array"
            }
          },
          {
            "name": "children",
            "required": true,
            "schema": {
              "properties": [],
              "type": "object"
            }
          }
        ],
        "type": "object"
      },
      "required": true
    }
  ],
  "description": "",
  "returnType": {
    "rawType": "JSX.Element",
    "typeDefinition": {
      "optional": false,
      "$ref": "#/definitions/JSX.Element"
    },
    "typeCoverage": 0,
    "isArray": false,
    "isEnum": false,
    "isObject": true,
    "isPrimitive": false,
    "isEnumLiteral": false
  },
  "maxIndentationDepth": 6,
  "size": {
    "characters": 1113,
    "lines": 37,
    "bytes": 1113,
    "bytesPerCharacter": 1,
    "charactersPerLine": 30,
    "linesPerFile": 37,
    "numberOfFiles": 1
  },
  "id": "tzstfyqausibnbtjmukjsmsu"
}